guid,vorderseite,rückseite,tags
"wqMx<V&Y_,",\(A \implies B\)<br>,"""If A is true, B is also true."" Does <i>not</i>&nbsp;express any causality like ""because A is true, B is true"".",ETH::sem1::DiskMath
z;jp`Lcv<(,What is the difference between propositional and predicate logic?,"propositional: only values of \(\{0,1\}\), finite<div>predicate: any values in our universe, infinite</div>",ETH::sem1::DiskMath
J!|K;g5R$4,What is a predicate?,"A k-ary predicate on&nbsp;\( U \) is a function&nbsp;\( U^k \rightarrow \{0,1\}\).<div>It's like a function that takes any number of arguments, but only returns boolean results.</div>",ETH::sem1::DiskMath
HV{[!>wU0*,What is a tautology?,"A formula F (propositional logic) is a tautology/valid if it is true for all truth combinations of the involved symbols, so if it is always true. Symbol:&nbsp;\( \top \)",ETH::sem1::DiskMath
rz^&c?ddI>,G is a <i>logical conse</i><i>qence </i>of F. What does that mean?,"\( F \models G\) if G is always true if F is true, but not necessarily false when F is false. (No causality!)<br>",ETH::sem1::DiskMath
FDfn]bHyB6,Predicate logic: universe,"A universe is the non-empty set that we work within. Examples:&nbsp;\( \mathbb{N}, \mathbb{R}, \{ 0,1,2,3,6 \} \)",ETH::sem1::DiskMath
lG3L]2Sq+d,Was ist der Rang eines LGS?,"Die Anzahl Pivotelemente bzw. die Anzahl Zeilen, welche nicht Nullzeilen sind.",ETH::sem1::LinAlg
h8vM!D=]5*,Was ist der volle Rang eines LGS der Form&nbsp;\(m \times n\)?,"\( r \le m, r \le n\), also ist der volle / maximale Rang \( r = \text{min}(m,n)\)<br>",ETH::sem1::LinAlg
tg<_s~pb{P,"Proof method: ""Composition of Implications""","Idea: If&nbsp;\( S \implies T \) and&nbsp;\( T \implies U \) are both true, then&nbsp;\( S \implies U \) is also true.",ETH::sem1::DiskMath
y)<N|W:fKf,"Proof method: ""Direct Proof of an Implication""",Direct proof of&nbsp;\( S \implies T \): assume S and prove T under that assumption,ETH::sem1::DiskMath
mW<[l@|LPN,"Proof method: ""Indirect Proof of an Implication""","Indirect proof of&nbsp;\( S \implies T \): Assume T is false, prove that S is false.<div><br></div><div>Follows from&nbsp;\( (\neg B \to \neg A) \models (A \to B) \)</div>",ETH::sem1::DiskMath
O?~Mb}~!3:,"Proof method: ""Modus Ponens""",1. Find a suitable statement&nbsp;\(R\)<div>2. Prove&nbsp;\(R\)</div><div>3. Prove&nbsp;\(R \implies S\)</div>,ETH::sem1::DiskMath
j0f>T<R:o&,"Proof method: ""Case Distinction""","1. Find a finite list&nbsp;\( R_1, \ldots, R_k\) of statements (cases)<div>2. Prove that one case applies for the situation (prove one \(R_i\))</div><div>3. Prove&nbsp;\( R_i \implies S\) for&nbsp;\(i = 1, \ldots, k\)</div><div><br></div><div>Basically, show for all cases that they are correct.</div>",ETH::sem1::DiskMath
w;_;AaM4pf,Was ist eine <b>symmetrische</b> Matrix?,"Eine symmetrische Matrix hat eine ""Spiegelachse"" an der Hauptdiagonale. Hauptdiagonale selber unwichtig!<div>Beispiel:</div><div>\( \begin{pmatrix} 0 &amp; 5 &amp; 1 \\ 5 &amp; 2 &amp; 4 \\ 1 &amp; 4 &amp; 0 \end{pmatrix} \)<br></div>",ETH::sem1::LinAlg
H5-[+SLX3[,Cardinality of a set,"The number of elements in the set, written as&nbsp;\( |A| \).",ETH::sem1::DiskMath
p6e6T6[HIy,Was ist eine <b>transponierte</b> Matrix?,"Entlang der Hauptdiagonale gespiegelte Matrix \(\mathbf{A}^\top\), d.h.&nbsp;\( (\mathbf{A}^\top)_{ij} = (\mathbf{A})_{ji} \)",ETH::sem1::LinAlg
vlkuMD-Ica,Was ist eine <b>konjugiert-komplexe </b>Matrix?,"Wenn&nbsp;\(\mathbf{A}\) eine komplexe Matrix ist, dann ist&nbsp;\(\overline{\mathbf{A}}\) mit&nbsp;\( (\overline{\mathbf{A}})_{ij} = \overline{(\mathbf{A})_{ij}}\) die konjugiert-komplexe Matrix.",ETH::sem1::LinAlg
"gC,90MH_~p",Was ist eine <b>konjugiert-transponierte</b> (auch: Hermitesch-transponierte) Matrix?,\( \mathbf{A}^H = (\overline{\mathbf{A}})^\top = \overline{\mathbf{A}^\top}\)<br>,ETH::sem1::LinAlg
g[av;3n%%l,Wann ist eine Matrix <b>Hermitesch</b>?,Falls&nbsp;\( \mathbf{A}^H = A\),ETH::sem1::LinAlg
OB6+3`~vyx,Wann ist eine Matrix <b>schiefsymmetrisch</b>?,Falls&nbsp;\( \mathbf{A}^\top = -\mathbf{A}\)<div><br></div><div>Beispiel:</div><div>\( \begin{pmatrix} 0 &amp; -3 &amp; 5 \\ 3 &amp; 0 &amp; -4 \\ -5 &amp; 4 &amp; 0 \end{pmatrix}\)<br></div>,ETH::sem1::LinAlg
xDDC{82KOB,Proof method: Proof by Contradiction,1. Find a suitable statement&nbsp;\( T\)<div>2. Prove that&nbsp;\( T \) is false</div><div>3. Assume that&nbsp;\( S \) is false and prove that&nbsp;\( T \) is true (-&gt; contradiction)</div>,ETH::sem1::DiskMath
y+DFM]G]@{,Proof method: Existence Proof,"We just want to prove that there exists a&nbsp;\( x \) such that a statement&nbsp;\( S_x \) is true. (e.g. There exists a prime number such that&nbsp;\( n - 10\) and&nbsp;\( n + 10\) are also prime.)&nbsp;<div><br></div><div><i>constructive: </i>We know the x.</div><div><i>non-constructive: </i>We know that x has to exist, but we don't know its value.</div>",ETH::sem1::DiskMath
uO0tm0+UFa,Proof method: Pigeonhole Principle,"If a set of&nbsp;\( n \) objects is divided into&nbsp;\( k&nbsp; &lt; n\) sets, then at least one of the sets contains at least&nbsp;\( \left \lceil{\frac{n}{k}}\right \rceil\) objects.<div><br></div><div>Informally: If there are more objects than sets, there is a set with more than one object in it.</div>",ETH::sem1::DiskMath
ih~tka$0AQ,Proof method: Proofs by counterexample,"Special case of constructive existence proofs. By finding a counter example&nbsp;\( x\) such that&nbsp;\(S_x\) is not true, we can prove that&nbsp;\( S_i \) isn't always true.",ETH::sem1::DiskMath
v`BTz<1Q{~,Wann ist eine Matrix <b>invertierbar</b>?,"Falls eine Matrix&nbsp;\( \mathbf{X} \) existiert, so dass&nbsp;\( \mathbf{AX} = \mathbf{XA} = \mathbf{I_n}\)<div><br></div><div>Beispiel:&nbsp;\( \begin{pmatrix} 1 &amp; 2 \\ 0 &amp; 3 \end{pmatrix} * \begin{pmatrix} 1 &amp; -\frac{2}{3} \\ 0 &amp; \frac{1}{3} \end{pmatrix} = \mathbf{I_2}\)&nbsp;</div>",ETH::sem1::LinAlg
KW-&%*&l;g,Was ist eine <b>reguläre</b> Matrix?,Eine Matrix \( A \) mit Rang&nbsp;\(A = n\).&nbsp;<div>regulär&nbsp;\( \iff \) invertierbar</div>,ETH::sem1::LinAlg
eGgKwc!Y>B,Was ist eine <b>orthogonale</b> Matrix?,"Für eine orthogonale Matrix gilt&nbsp;\( \mathbf{A^\top A = I}_n\), d.h. die Inverse von A ist A transponiert. Orthogonal = reell, quadratisch, regulär",ETH::sem1::LinAlg
"J,}qfri4M=",Was ist eine <b>unitäre</b> Matrix?,"Für eine unitäre Matrix gilt&nbsp;\( \mathbf{A^H A = I}_n\), d.h. die komplex-transponierte von A ist die Inverse von A.&nbsp;<div>Unitär = regulär &amp; quadratisch&nbsp;</div>",ETH::sem1::LinAlg
M`sU@`yo=O,Was ist ein Unterraum?,Ein Unterraum ist eine Teilmenge&nbsp;\( U \subseteq \mathbb{V}\) falls&nbsp;\( U \) auch die Eigenschaften eines Vektorraums hat (d.h. abgeschlossen bezüglich Vektoraddition &amp; Skalarmultiplikation). Beispiel: Ebene in&nbsp;\(\mathbb{R}^3\),ETH::sem1::LinAlg
C6/[-jy07I,"In an algebra \(\langle S, \Omega \rangle\), how is S usually called?",carrier (of the algebra),ETH::sem1::DiskMath
lLOgs0U=^u,"Is the set&nbsp;\(\{0,1\}^*\) (finite binary sequences) countable?","Yes. A possible injection to \(\mathbb{N}\) is to add a ""1"" at the beginning of each sequence and interpret it in binary.",ETH::sem1::DiskMath
K(.[83d?32,"Is the set&nbsp;\(\{0,1\}^\infty\) (semi-infinite binary sequences) countable?",No. This can be proven by Cantor's diagonalization argument.,ETH::sem1::DiskMath
v7f%/A{M=P,atomic,"A statement / instruction is (truly) atomic if it is executed in a single, non-interruptible step by the CPU",ETH::sem2::PProg
fW6vNsAIF@,Amdahls's law,Specifies the maximum amount of speedup that can be achieved for a program with a given sequential part. The pessimistic view on scalability.,ETH::sem2::PProg
"B,U=NeH8lD",bad interleaving,"An interleaving that yields a problematic or otherwise undesirable computation, e.g. an incorrect result, a deadlock or non-deterministic output",ETH::sem2::PProg
ep4hX3V75z,busy waiting,"A thread busily / actively waits, e.g. by spinning in a loop, for a condition to be true. (as opposed to sleeping)<br>Trade-off: busy waiting uses up CPU time, whereas blocking may cause additional context switches.",ETH::sem2::PProg
tNKkN;So<b,concurrency,Dealing with multiple things at the same time (as opposed to parallelism: doing multiple things at the same time). Reasoning about and managing shared resources. Often used interchangeably with parallelism.,ETH::sem2::PProg
xi3)iirhy^,context switch,"Switching a CPU from one computation to another. Usually for switching between processes, but can also refer to switching between threads. Incurs a <i>context switch overhead </i>(that is large for processes, small for threads)",ETH::sem2::PProg
waLUJVjSl|,critical section,A piece of code that may only be executed by one thread at a time to guarantee correctness.,ETH::sem2::PProg
qe-)By[okY,data race,"A program has a data race if, at any point, a memory location could be written from one thread, whilst concurrently being read or written from another thread. (often used interchangably with <i>race condition</i>)",ETH::sem2::PProg
IunhX`@ZF(,divide and conquer style parallelism,Solve problems by recursively solving smaller sub-problems and combining them. You can solve the sub-problems in separate threads to parallelize effectively. These sub-problems can often be efficiently scheduled (less variety in task load).,ETH::sem2::PProg
nA|^.F37<4,deadlock,"Circular waiting/blocking (no instructions are executed/CPU time used) between treads, so that the system cannot make any progress anymore.",ETH::sem2::PProg
KlT9w/b`CV,Gustafson's law,Specifies how much more work can be performed for a given amount of time by adding more processors. The optimistic view on scalability.,ETH::sem2::PProg
bV^hiT:sop,instruction level parallelism (ILP),"CPU-internal parallelisation of independent instructions, with the goal of improving performance by increasing utilisation of the functional units.",ETH::sem2::PProg
"Q,UQm@hk;V",latency,Evaluation metric for pipelines. Latency measures the time a pipeline needs to process a given work item (e.g. a CPU instruction),ETH::sem2::PProg
k{}yV:WWvI,livelock,"A situation in which all threads starve by repeteadly trying to enter a critical section, but never succeeding. Similar to a deadlock - no real progress in the system.",ETH::sem2::PProg
sL]Am0)T`i,liveness property,"Property of a system: ""something good eventually happens"". Can only be violated in infinite time. Infinite loops &amp; starvation are typical safety properties.",ETH::sem2::PProg
DcR$)Evg~t,lock,"A lock on a token/resource. Usually provided by a programming language to enforce <i>mutual exclusion</i>&nbsp;by protecting a <i>critical section</i>. A lock can be acquired by a thread and is then held until it is released.<br><br>In Java, every object can be used as a lock (intrinsic/monitor lock), but the JDK also provides more complex locks.",ETH::sem2::PProg
qm}NGr(#B},lockout,Needlessly preventing a thread from entering a critical section,ETH::sem2::PProg
oseToL3TeV,mutual exclusion,Prevention of multiple threads being in a critical section at the same time,ETH::sem2::PProg
vO|2sXvm}),multiprocessing (multitasking),"Concurrent execution of multiple tasks/processes, typically refers to parallelism on the operating system level",ETH::sem2::PProg
I`eU-j3Vn3,multithreading,Threads running in parallel,ETH::sem2::PProg
nW1ttfR]Mm,parallelism,Doing multiple things at the same time (as opposed to concurrency: dealing with multiple things at the same time),ETH::sem2::PProg
zr1N.MJUr2,"parallel execution time,&nbsp;\(T_p, T_\infty\)",\(T_p\): time required to perform some work on&nbsp;\(p\) processors<br>\(T_\infty\): time required for some work if we had infinite processors (total runtime only depends on sequential part),ETH::sem2::PProg
c#>9A1#}TE,process,"Independently running instance of a program/application, typically on the OS level. Similar to a thread, but usually more heavy-weight and encapsulated in memory.",ETH::sem2::PProg
D8q>=36%Xh,process context,"All state associated with a process, including CPU state (registers, program counter), program state (stack, heap, resource handles) and additional management information.&nbsp;<br><br>A thread also has (much smaller) context",ETH::sem2::PProg
iU#P8_#>$?,race condition,"A program has a race condition if at any point its results / output may change if events happen in different order. (events could be scheduling, network delays, etc.)<br><br>Often used interchangeable with <i>data race.</i>",ETH::sem2::PProg
G.8/H>kz9@,What are typical safety properties?,"Exceptions, absence of deadlocks and mutual exclusions",ETH::sem2::PProg
uPu(kKz^jE,"sequential execution time,&nbsp;\(T_1\)",\(T_1\): The time that is required to perform some work on a single processor,ETH::sem2::PProg
B|K`S5Su[7,sequential cutoff,"When decomposing work, stop splitting tasks at a given problem size (sequential cutoff). Problem size should be significantly larger than scheduling overhead",ETH::sem2::PProg
xyGOskQ=9/,sequential part,Part of a given program that can't be executed in parallel. Limits the maximum speedup.,ETH::sem2::PProg
Bo57)^peCt,scheduler,management process that peforms context switches and selects next processes / threads to run<br><br>Schedulers usually not give any guarantees when / how they act,ETH::sem2::PProg
"e/b+GC=!,H",scheduling overhead,extra time spent by the system or the algorithm to distribute work on multiple threads/tasks,ETH::sem2::PProg
"uvdCn`E,JW",shared resource,"any resource (memory location, input / output) shared by multiple threads",ETH::sem2::PProg
bM%<```ZBo,"speedup,&nbsp;\(S_p\)","\(S_p\): How much faster a program runs using&nbsp;\(p\) processors, compared to the sequential version.&nbsp;\(S_p = \frac{T_1}{T_p}\)<br><br>Speedup is an absolute value; the relative value is <i>efficiency</i>",ETH::sem2::PProg
kMnITSSgxf,synchronisation,"Some form of orchestration via threads, usually for preventing bad interleavings",ETH::sem2::PProg
OF>~=d#&y`,synchronised (keyword),Java keyword enforcing mutual exclusion for a critical section via some object's intrinsic lock,ETH::sem2::PProg
fo!fM%L&J[,"task graph, work, span","Graph (DAG) created by nodes (tasks) and edges (spawns, joins).<br>Work (\(T_1\)) in a task graph: sum of the cost of all nodes in the graph<br>Span (\(T_\infty\)) in a task graph: Critical path / height of the task graph",ETH::sem2::PProg
t$.=MTMX45,throughput,evaluation metric for pipelines. amount of work that can be done by a pipeline in a given period of time,ETH::sem2::PProg
O&F2LhK=Sk,thread,Independent unit of computation that executes a piece of code. The concept of threads exists on<br>* hardware (CPU)<br>* OS<br>* programming language<br>level.,ETH::sem2::PProg
O`)xvU;%Bx,thread mapping,How a Java thread maps to an OS thread.&nbsp;<br>Native threading: JVM thread one-to-one mapped to OS thread<br>Green threading: JVM threads multiple-to-one mapped to OS thread,ETH::sem2::PProg
LS0cM;&5.4,vectorisation,special machine code instructions to perform an operation to a bigger chunk of data (SIMD),ETH::sem2::PProg
Ay?M}n.H=},work partitioning,"splitting a program into smaller tasks for parallelization. Ideally, every task performs work independently",ETH::sem2::PProg
g%ZC^dHG&H,What is the big limitation of Output Encodings for FSMs?,"They only work for Moore machines, but not for Mealy ones.",ETH::sem2::DDCA
kKc%J$N{jA,interlocking,Detecting dependencies between instructions for pipelining. Can be done in hardware or software,ETH::sem2::DDCA
"zA0fV^yC,x",Was ist das Nominalskalenniveau?,"Niedrigstes Skalenniveau, nur Klassifikation zulässig.",ETH::sem4::WuS
F4x~P$3G=2,Was ist das Ordinalskalenniveau?,"Skala mit Ordnung, aber Abstände sind unbedeutend.",ETH::sem4::WuS
Ow05$=:qu?,Was ist das Intervallskalenniveau?,Metrische (d.h. gleiche Abstände) Skala ohne Nullpunkt,ETH::sem4::WuS
j&G==.^./d,Was ist das Verhältnisskalenniveau?,Metrische Skala mit Nullpunkt,ETH::sem4::WuS
JKlLb#{0L;,What is the difference between coherence and consistency in multiprocessor systems?,coherence: same values in cache<br>consistency: same order of changes,ETH::sem3::SPCA
