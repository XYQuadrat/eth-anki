guid,front,back,tags
MVtb[B2Wo},What makes a Java exception&nbsp;<b>checked</b>?,If it has to be added with the&nbsp;<b>throws</b>&nbsp;keyword and is checked at compile time.,eth::sem6::rse
IwHG!:%Fh3,What are the 3 elements in a <b>documentation</b>&nbsp;<b>contract</b>?,<ul><li>Precondition (<code>//requires</code>)</li><li>Postcondition (<code>//ensures</code>)</li><li>Invariant (<code>//invariant</code>)</li></ul>,eth::sem6::rse
CLxk$$tu>G,Documentation contract: What is in the <b>preconditions</b>?,"The conditions the caller of a method must fullfill.<br><br>Example: ""To call getRoot(x), the caller has to provide a value x &gt;= 0""",eth::sem6::rse
Bvk(o/$M:?,Documentation contract: What is in the <b>postconditions</b>?,"The guarantees provided to the caller after executing the method, given the caller satisfied the precondition.",eth::sem6::rse
"GK=-x;q~,=",Documentation: What 2 arguments can be used in the postcondition?,<ul><li>old(...): refers to the previous state</li><li>result: return value</li></ul>,eth::sem6::rse
"pZ/XsR,sgT",<b>Step 1</b> of proving an assertion,"<img src=""paste-db1b5d120a685054395f3bc087b70846da437d5c.jpg"">",eth::sem6::rse
Dq5@|.#@9W,<b>Step 2</b>&nbsp;of proving an assertion<br>(after abstraction),"<img src=""paste-c84fafc48a0d1bb11bcbfef690d281dfb87a47d1.jpg""><br><img src=""paste-615ba6ef6072a1dc13391f80f8ac2d9094a1d03f.jpg"">",eth::sem6::rse
nEkIW?=w#x,<b>Step 3</b>&nbsp;of proving an assertion<br>(after transformation),"<img src=""paste-1793e63e5d1784d095cd692abf42ffcb9452a2b2.jpg"">",eth::sem6::rse
juXEdz.}w>,<b>Step 4</b>&nbsp;of proving an assertion<br>(after iterating to a fixed point),"<img src=""paste-8eb3e3a8ebe34dfd14f253af2a555c2b1569eb0c.jpg"">",eth::sem6::rse
"d7U:_O,.eB","What is the solution to using sequentially computed <span style=""color: rgb(255, 0, 0);"">abstract states</span> for parallel programs?","Cartesian States<br><img src=""paste-cad6b8d912e75035083cfb918d2b29243fe29927.jpg"">",eth::sem6::rse
q%86.s`V=W,"<span style=""color: rgb(255, 0, 0);"">When may&nbsp;</span>\(\text{ALoc}(st_1):=(a,i)\)&nbsp;<span style=""color: rgb(255, 0, 0);"">equal&nbsp;</span>\(\text{ALoc}(st_2):=(b,k)\)&nbsp;in abstract state&nbsp;\(A\)?","<img src=""paste-ddebe004fd2c01d31c3108f88e8938759841bce0.jpg"">",eth::sem6::rse
n;GV2+y?RO,"<img src=""paste-065043d9f5230de73636ad302c55dae66ac6f002.jpg"">","<img src=""paste-5d2a037da08c0fff583447aaaa78522dedc48908.jpg"">",eth::sem6::rse
rx%`cbe3h?,"<img src=""paste-411e9def31aa702646c15e88ced7211c4c369a8f.jpg""><br>Which type of Polymorphism is shown here?",Parametric Polymorphism (generic types),eth::coop
P$HSM:@ZM(,"<img src=""paste-ef4155eb70beff91d5a2a159e9d78246c46a1257.jpg""><br>Which type of Polymorphism is shown here?",Ad-hoc Polymorphism (method overloading),eth::coop
"wqMx<V&Y_,",\(A \implies B\)<br>,"""If A is true, B is also true."" Does <i>not</i>&nbsp;express any causality like ""because A is true, B is true"".",eth::sem1::diskmat
z;jp`Lcv<(,What is the difference between propositional and predicate logic?,"propositional: only values of \(\{0,1\}\), finite<div>predicate: any values in our universe, infinite</div>",eth::sem1::diskmat
J!|K;g5R$4,What is a predicate?,"A k-ary predicate on&nbsp;\( U \) is a function&nbsp;\( U^k \rightarrow \{0,1\}\).<div>It's like a function that takes any number of arguments, but only returns boolean results.</div>",eth::sem1::diskmat
HV{[!>wU0*,What is a tautology?,"A formula F (propositional logic) is a tautology/valid if it is true for all truth combinations of the involved symbols, so if it is always true. Symbol:&nbsp;\( \top \)",eth::sem1::diskmat
rz^&c?ddI>,G is a <i>logical conse</i><i>qence </i>of F. What does that mean?,"\( F \models G\) if G is always true if F is true, but not necessarily false when F is false. (No causality!)<br>",eth::sem1::diskmat
FDfn]bHyB6,Predicate logic: universe,"A universe is the non-empty set that we work within. Examples:&nbsp;\( \mathbb{N}, \mathbb{R}, \{ 0,1,2,3,6 \} \)",eth::sem1::diskmat
lG3L]2Sq+d,What is the&nbsp;<b>rank&nbsp;</b>of a matrix (\(\text{rank}(A)\))?&nbsp;,"The dimension of the vector space spanned by the columns, or the rows. This is equal to the number of linearly independent columns or rows in the matrix.",eth::sem1::linalg
h8vM!D=]5*,What is the <b>full rank</b>&nbsp;of a&nbsp;\(m \times n\)-matrix?,"The full rank is&nbsp;\( r = \text{min}(m,n)\).",eth::sem1::linalg
tg<_s~pb{P,"Proof method: ""Composition of Implications""","Idea: If&nbsp;\( S \implies T \) and&nbsp;\( T \implies U \) are both true, then&nbsp;\( S \implies U \) is also true.",eth::sem1::diskmat
y)<N|W:fKf,"Proof method: ""Direct Proof of an Implication""",Direct proof of&nbsp;\( S \implies T \): assume S and prove T under that assumption,eth::sem1::diskmat
mW<[l@|LPN,"<i>Proof method:</i> ""Indirect Proof of an Implication""","Indirect proof of&nbsp;\( S \implies T \): Assume T is false, prove that S is false.<div><br></div><div>Follows from&nbsp;\( (\neg B \to \neg A) \models (A \to B) \)</div>",eth::sem1::diskmat
O?~Mb}~!3:,"Proof method: ""Modus Ponens""",1. Find a suitable statement&nbsp;\(R\)<div>2. Prove&nbsp;\(R\)</div><div>3. Prove&nbsp;\(R \implies S\)</div>,eth::sem1::diskmat
j0f>T<R:o&,"Proof method: ""Case Distinction""","1. Find a finite list&nbsp;\( R_1, \ldots, R_k\) of statements (cases)<div>2. Prove that one case applies for the situation (prove one \(R_i\))</div><div>3. Prove&nbsp;\( R_i \implies S\) for&nbsp;\(i = 1, \ldots, k\)</div><div><br></div><div>Basically, show for all cases that they are correct.</div>",eth::sem1::diskmat
w;_;AaM4pf,What is the definition of a&nbsp;<b>symmetric</b>&nbsp;matrix?,A symmetric matrix is equal to its transpose:&nbsp;\(A = A^\top\).<div>Example:</div><div>\( \begin{pmatrix} 0 &amp; 5 &amp; 1 \\ 5 &amp; 2 &amp; 4 \\ 1 &amp; 4 &amp; 0 \end{pmatrix} \)<br></div>,eth::sem1::linalg
H5-[+SLX3[,Cardinality of a set,"The number of elements in the set, written as&nbsp;\( |A| \).",eth::sem1::diskmat
p6e6T6[HIy,What is the&nbsp;<b>transpose</b>&nbsp;of a matrix&nbsp;\(\mathbf{A}\)?,"The transpose&nbsp;\(\mathbf{A}^\top\)&nbsp;is the matrix&nbsp;\(\mathbf{A}\)&nbsp;flipped over its diagonal, so&nbsp;\( (\mathbf{A}^\top)_{ij} = (\mathbf{A})_{ji} \).",eth::sem1::linalg
vlkuMD-Ica,What is the&nbsp;<b>conjugate transpose&nbsp;</b>(also Hermitian transpose) of a matrix&nbsp;\(\mathbf{A}\)?,The conjugate transpose&nbsp;&nbsp;\(\mathbf{A}^\text{H}\)&nbsp;is the transpose&nbsp;\(\mathbf{A}^\top\)&nbsp;with every entry being conjugated:&nbsp;\( (\mathbf{A}^\text{H})_{ij} = \overline{\mathbf{A}_{ji}}\)&nbsp;.,eth::sem1::linalg
"gC,90MH_~p",Was ist eine <b>konjugiert-transponierte</b> (auch: Hermitesch-transponierte) Matrix?,\( \mathbf{A}^H = (\overline{\mathbf{A}})^\top = \overline{\mathbf{A}^\top}\)<br>,eth::sem1::linalg
g[av;3n%%l,When is a matrix&nbsp;\(\mathbf{A}\)&nbsp;<i>hermitian</i>?,"If&nbsp;\( \mathbf{A} = \mathbf{A}^\text{H}\), which is equivalent to&nbsp;\(\mathbf{A} = \overline{\mathbf{A}^\top}\).",eth::sem1::linalg
OB6+3`~vyx,When is a matrix&nbsp;\(\mathbf{A}\)&nbsp;<b>skew-symmetric</b>?,If&nbsp;\( \mathbf{A}^\top = -\mathbf{A}\)<div><br></div><div>Example:</div><div>\( \begin{pmatrix} 0 &amp; -3 &amp; 5 \\ 3 &amp; 0 &amp; -4 \\ -5 &amp; 4 &amp; 0 \end{pmatrix}\)<br></div>,eth::sem1::linalg
xDDC{82KOB,Proof method: Proof by Contradiction,1. Find a suitable statement&nbsp;\( T\)<div>2. Prove that&nbsp;\( T \) is false</div><div>3. Assume that&nbsp;\( S \) is false and prove that&nbsp;\( T \) is true (-&gt; contradiction)</div>,eth::sem1::diskmat
y+DFM]G]@{,Proof method: Existence Proof,"We just want to prove that there exists a&nbsp;\( x \) such that a statement&nbsp;\( S_x \) is true. (e.g. There exists a prime number such that&nbsp;\( n - 10\) and&nbsp;\( n + 10\) are also prime.)&nbsp;<div><br></div><div><i>constructive: </i>We know the x.</div><div><i>non-constructive: </i>We know that x has to exist, but we don't know its value.</div>",eth::sem1::diskmat
uO0tm0+UFa,Proof method: Pigeonhole Principle,"If a set of&nbsp;\( n \) objects is divided into&nbsp;\( k&nbsp; &lt; n\) sets, then at least one of the sets contains at least&nbsp;\( \left \lceil{\frac{n}{k}}\right \rceil\) objects.<div><br></div><div>Informally: If there are more objects than sets, there is a set with more than one object in it.</div>",eth::sem1::diskmat
ih~tka$0AQ,Proof method: Proofs by counterexample,"Special case of constructive existence proofs. By finding a counter example&nbsp;\( x\) such that&nbsp;\(S_x\) is not true, we can prove that&nbsp;\( S_i \) isn't always true.",eth::sem1::diskmat
v`BTz<1Q{~,What is the definition of an&nbsp;<b>invertible</b>&nbsp;(also <i>nonsingular </i>or <i>nondegenerate</i>) matrix&nbsp;\(\mathbf{A}\)?,There exists a matrix&nbsp;\( \mathbf{X} \)&nbsp;such that&nbsp;\( \mathbf{AX} = \mathbf{XA} = \mathbf{I_n}\).<div><br></div><div>Example:&nbsp;\( \begin{pmatrix} 1 &amp; 2 \\ 0 &amp; 3 \end{pmatrix} * \begin{pmatrix} 1 &amp; -\frac{2}{3} \\ 0 &amp; \frac{1}{3} \end{pmatrix} = \mathbf{I_2}\)&nbsp;</div>,eth::sem1::linalg
KW-&%*&l;g,Was ist eine <b>reguläre</b> Matrix?,Eine Matrix \( A \) mit&nbsp;\(\text{Rang}(A) = n\).&nbsp;<div>regulär&nbsp;\( \iff \) invertierbar</div>,eth::sem1::linalg
eGgKwc!Y>B,When is a matrix&nbsp;\(\mathbf{A}\)&nbsp;<b>orthogonal</b>?,"If&nbsp;\( \mathbf{A^\top A = I}_n\), which means that the inverse of&nbsp;\(\mathbf{A}\)&nbsp;is&nbsp;\(\mathbf{A}^\top\).",eth::sem1::linalg
"J,}qfri4M=",When is a matrix&nbsp;\(\mathbf{A}\)&nbsp;<b>unitary</b>?,"If&nbsp;\( \mathbf{A}^\text{H} \mathbf{A} = \mathbf{I}_n\), so the inverse of&nbsp;\(\mathbf{A}\)&nbsp;is&nbsp;\(\mathbf{A}^\text{H}\).",eth::sem1::linalg
M`sU@`yo=O,What is a subspace?,A subspace is a subset&nbsp;\( U \subseteq \mathbb{V}\) that also fulfills the properties of a vector space&nbsp;(so it is closed with respect to vector addition and scalar multiplication). <br><br>Example: a plane in&nbsp;&nbsp;\(\mathbb{R}^3\),eth::sem1::linalg
C6/[-jy07I,"In an algebra \(\langle S, \Omega \rangle\), how is S usually called?",carrier (of the algebra),eth::sem1::diskmat
lLOgs0U=^u,"Is the set&nbsp;\(\{0,1\}^*\) (finite binary sequences) countable?","Yes. A possible injection to \(\mathbb{N}\) is to add a ""1"" at the beginning of each sequence and interpret it in binary.",eth::sem1::diskmat
K(.[83d?32,"Is the set&nbsp;\(\{0,1\}^\infty\) (semi-infinite binary sequences) countable?",No. This can be proven by Cantor's diagonalization argument.,eth::sem1::diskmat
v7f%/A{M=P,atomic,"A statement / instruction is (truly) atomic if it is executed in a single, non-interruptible step by the CPU",eth::sem2::pprog
fW6vNsAIF@,Amdahls's law,Specifies the maximum amount of speedup that can be achieved for a program with a given sequential part. The pessimistic view on scalability.,eth::sem2::pprog
"B,U=NeH8lD",bad interleaving,"An interleaving that yields a problematic or otherwise undesirable computation, e.g. an incorrect result, a deadlock or non-deterministic output",eth::sem2::pprog
ep4hX3V75z,busy waiting,"A thread busily / actively waits, e.g. by spinning in a loop, for a condition to be true. (as opposed to sleeping)<br>Trade-off: busy waiting uses up CPU time, whereas blocking may cause additional context switches.",eth::sem2::pprog
tNKkN;So<b,concurrency,Dealing with multiple things at the same time (as opposed to parallelism: doing multiple things at the same time). Reasoning about and managing shared resources. Often used interchangeably with parallelism.,eth::sem2::pprog
xi3)iirhy^,context switch,"Switching a CPU from one computation to another. Usually for switching between processes, but can also refer to switching between threads. Incurs a <i>context switch overhead </i>(that is large for processes, small for threads)",eth::sem2::pprog
waLUJVjSl|,critical section,A piece of code that may only be executed by one thread at a time to guarantee correctness.,eth::sem2::pprog
qe-)By[okY,data race,"A program has a data race if, at any point, a memory location could be written from one thread, whilst concurrently being read or written from another thread. (often used interchangably with <i>race condition</i>)",eth::sem2::pprog
IunhX`@ZF(,divide and conquer style parallelism,Solve problems by recursively solving smaller sub-problems and combining them. You can solve the sub-problems in separate threads to parallelize effectively. These sub-problems can often be efficiently scheduled (less variety in task load).,eth::sem2::pprog
nA|^.F37<4,deadlock,"Circular waiting/blocking (no instructions are executed/CPU time used) between treads, so that the system cannot make any progress anymore.",eth::sem2::pprog
KlT9w/b`CV,Gustafson's law,Specifies how much more work can be performed for a given amount of time by adding more processors. The optimistic view on scalability.,eth::sem2::pprog
bV^hiT:sop,instruction level parallelism (ILP),"CPU-internal parallelisation of independent instructions, with the goal of improving performance by increasing utilisation of the functional units.",eth::sem2::pprog
"Q,UQm@hk;V",latency,Evaluation metric for pipelines. Latency measures the time a pipeline needs to process a given work item (e.g. a CPU instruction),eth::sem2::pprog
k{}yV:WWvI,livelock,"A situation in which all threads starve by repeteadly trying to enter a critical section, but never succeeding. Similar to a deadlock - no real progress in the system.",eth::sem2::pprog
sL]Am0)T`i,liveness property,"Property of a system: ""something good eventually happens"". Can only be violated in infinite time. Infinite loops &amp; starvation are typical safety properties.",eth::sem2::pprog
DcR$)Evg~t,lock,"A lock on a token/resource. Usually provided by a programming language to enforce <i>mutual exclusion</i>&nbsp;by protecting a <i>critical section</i>. A lock can be acquired by a thread and is then held until it is released.<br><br>In Java, every object can be used as a lock (intrinsic/monitor lock), but the JDK also provides more complex locks.",eth::sem2::pprog
qm}NGr(#B},lockout,Needlessly preventing a thread from entering a critical section,eth::sem2::pprog
oseToL3TeV,mutual exclusion,Prevention of multiple threads being in a critical section at the same time,eth::sem2::pprog
vO|2sXvm}),multiprocessing (multitasking),"Concurrent execution of multiple tasks/processes, typically refers to parallelism on the operating system level",eth::sem2::pprog
I`eU-j3Vn3,multithreading,Threads running in parallel,eth::sem2::pprog
nW1ttfR]Mm,parallelism,Doing multiple things at the same time (as opposed to concurrency: dealing with multiple things at the same time),eth::sem2::pprog
zr1N.MJUr2,"parallel execution time,&nbsp;\(T_p, T_\infty\)",\(T_p\): time required to perform some work on&nbsp;\(p\) processors<br>\(T_\infty\): time required for some work if we had infinite processors (total runtime only depends on sequential part),eth::sem2::pprog
c#>9A1#}TE,process,"Independently running instance of a program/application, typically on the OS level. Similar to a thread, but usually more heavy-weight and encapsulated in memory.",eth::sem2::pprog
D8q>=36%Xh,process context,"All state associated with a process, including CPU state (registers, program counter), program state (stack, heap, resource handles) and additional management information.&nbsp;<br><br>A thread also has (much smaller) context",eth::sem2::pprog
iU#P8_#>$?,race condition,"A program has a race condition if at any point its results / output may change if events happen in different order. (events could be scheduling, network delays, etc.)<br><br>Often used interchangeable with <i>data race.</i>",eth::sem2::pprog
G.8/H>kz9@,What are typical safety properties?,"Exceptions, absence of deadlocks and mutual exclusions",eth::sem2::pprog
uPu(kKz^jE,"sequential execution time,&nbsp;\(T_1\)",\(T_1\): The time that is required to perform some work on a single processor,eth::sem2::pprog
B|K`S5Su[7,sequential cutoff,"When decomposing work, stop splitting tasks at a given problem size (sequential cutoff). Problem size should be significantly larger than scheduling overhead",eth::sem2::pprog
xyGOskQ=9/,sequential part,Part of a given program that can't be executed in parallel. Limits the maximum speedup.,eth::sem2::pprog
Bo57)^peCt,scheduler,management process that peforms context switches and selects next processes / threads to run<br><br>Schedulers usually not give any guarantees when / how they act,eth::sem2::pprog
"e/b+GC=!,H",scheduling overhead,extra time spent by the system or the algorithm to distribute work on multiple threads/tasks,eth::sem2::pprog
"uvdCn`E,JW",shared resource,"any resource (memory location, input / output) shared by multiple threads",eth::sem2::pprog
bM%<```ZBo,"speedup,&nbsp;\(S_p\)","\(S_p\): How much faster a program runs using&nbsp;\(p\) processors, compared to the sequential version.&nbsp;\(S_p = \frac{T_1}{T_p}\)<br><br>Speedup is an absolute value; the relative value is <i>efficiency</i>",eth::sem2::pprog
kMnITSSgxf,synchronisation,"Some form of orchestration via threads, usually for preventing bad interleavings",eth::sem2::pprog
OF>~=d#&y`,synchronised (keyword),Java keyword enforcing mutual exclusion for a critical section via some object's intrinsic lock,eth::sem2::pprog
fo!fM%L&J[,"task graph, work, span","Graph (DAG) created by nodes (tasks) and edges (spawns, joins).<br>Work (\(T_1\)) in a task graph: sum of the cost of all nodes in the graph<br>Span (\(T_\infty\)) in a task graph: Critical path / height of the task graph",eth::sem2::pprog
t$.=MTMX45,throughput,evaluation metric for pipelines. amount of work that can be done by a pipeline in a given period of time,eth::sem2::pprog
O&F2LhK=Sk,thread,Independent unit of computation that executes a piece of code. The concept of threads exists on<br>* hardware (CPU)<br>* OS<br>* programming language<br>level.,eth::sem2::pprog
O`)xvU;%Bx,thread mapping,How a Java thread maps to an OS thread.&nbsp;<br>Native threading: JVM thread one-to-one mapped to OS thread<br>Green threading: JVM threads multiple-to-one mapped to OS thread,eth::sem2::pprog
LS0cM;&5.4,vectorisation,special machine code instructions to perform an operation to a bigger chunk of data (SIMD),eth::sem2::pprog
Ay?M}n.H=},work partitioning,"splitting a program into smaller tasks for parallelization. Ideally, every task performs work independently",eth::sem2::pprog
g%ZC^dHG&H,What is the big limitation of Output Encodings for FSMs?,"They only work for Moore machines, but not for Mealy ones.",eth::sem2::ddca
kKc%J$N{jA,interlocking,Detecting dependencies between instructions for pipelining. Can be done in hardware or software,eth::sem2::ddca
"zA0fV^yC,x",Was ist das Nominalskalenniveau?,"Niedrigstes Skalenniveau, nur Klassifikation zulässig.",eth::sem4::wus
F4x~P$3G=2,Was ist das Ordinalskalenniveau?,"Skala mit Ordnung, aber Abstände sind unbedeutend.",eth::sem4::wus
Ow05$=:qu?,Was ist das Intervallskalenniveau?,Metrische (d.h. gleiche Abstände) Skala ohne Nullpunkt,eth::sem4::wus
j&G==.^./d,Was ist das Verhältnisskalenniveau?,Metrische Skala mit Nullpunkt,eth::sem4::wus
JKlLb#{0L;,What is the difference between coherence and consistency in multiprocessor systems?,coherence: same values in cache<br>consistency: same order of changes,eth::sem3::spca
"s7*HAj`,kR",Name four examples for (binary) relations as defined in Discrete Mathematics.,"\(=, \ne, \le, \ge, &lt;, &gt;, \mid, \dots\)",eth::sem1::diskmat
EL>#%*1JZ?,"Sketch step-by-step how <b>Cantor's diagonalization argument</b>&nbsp;can be used to prove that the set&nbsp;\(\{0,1\}^\infty\)&nbsp;is uncountable.","<ul><li>Proof by contradiction: Assume a bijection to&nbsp;\(\mathbb{N}\)&nbsp;exists.</li><li>That means there exists for each&nbsp;\(n\in \mathbb{N}\)&nbsp;a corresponding sequence of 0 and 1s, and vice-versa.</li><li>We now construct a new sequence&nbsp;\(\alpha\)&nbsp;of 0s and 1s, by always taking the&nbsp;\(i\)-th bit from the&nbsp;\(i\)-th sequence, and inverting it.</li><li>This new sequence does not agree with every existing sequence in at least one place.</li><li>However, there is no&nbsp;\(n\in\mathbb{N}\)&nbsp;such that&nbsp;\(\alpha = f(n)\)&nbsp;since&nbsp;\(\alpha\)&nbsp;disagrees with every&nbsp;\(f(n)\)&nbsp;in at least one place.</li><li>Thus, no bijection to&nbsp;\(\mathbb{N}\)&nbsp;exists, which means&nbsp;\(\{0,1\}^\infty\)&nbsp;is uncountable.</li></ul>",eth::sem1::diskmat
"q_~/j+G,$p",What is the&nbsp;<i>fundamental theorem of arithmetic</i>?,Every positive integer can be written uniquely as the product of primes.,eth::sem1::diskmat
uCGhOduc{_,Explain the mechanical analog of the Diffie-Hellman protocol.,"<img src=""paste-39931b24c512906843c903f461b7c1cc9f5a6685.jpg"">",eth::sem1::diskmat
