{
    "__type__": "Deck",
    "children": [],
    "crowdanki_uuid": "2acfd4d4-7e39-11ee-bdad-3d2d00994e04",
    "deck_config_uuid": "2acfe604-7e39-11ee-bdad-3d2d00994e04",
    "deck_configurations": [
        {
            "__type__": "DeckConfig",
            "autoplay": true,
            "buryInterdayLearning": false,
            "crowdanki_uuid": "2acfe604-7e39-11ee-bdad-3d2d00994e04",
            "desiredRetention": 0.9,
            "dyn": false,
            "fsrsWeights": [],
            "interdayLearningMix": 0,
            "lapse": {
                "delays": [
                    10.0
                ],
                "leechAction": 0,
                "leechFails": 8,
                "minInt": 1,
                "mult": 0.4
            },
            "maxTaken": 60,
            "name": "Default",
            "new": {
                "bury": true,
                "delays": [
                    1.0,
                    10.0
                ],
                "initialFactor": 2500,
                "ints": [
                    1,
                    4,
                    0
                ],
                "order": 0,
                "perDay": 20,
                "separate": true
            },
            "newGatherPriority": 0,
            "newMix": 0,
            "newPerDayMinimum": 0,
            "newSortOrder": 0,
            "replayq": true,
            "rescheduleFsrsCards": false,
            "rev": {
                "bury": true,
                "ease4": 1.3,
                "fuzz": 0.05,
                "hardFactor": 1.2,
                "ivlFct": 1.0,
                "maxIvl": 36500,
                "minSpace": 1,
                "perDay": 200
            },
            "reviewOrder": 0,
            "sm2Retention": 0.9,
            "stopTimerOnAnswer": false,
            "timer": 0
        }
    ],
    "desc": "",
    "dyn": 0,
    "extendNew": 0,
    "extendRev": 0,
    "media_files": [
        "021ee8071c62479b8d1629359a00cab7-oa-1-A.svg",
        "021ee8071c62479b8d1629359a00cab7-oa-1-Q.svg",
        "021ee8071c62479b8d1629359a00cab7-oa-2-A.svg",
        "021ee8071c62479b8d1629359a00cab7-oa-2-Q.svg",
        "021ee8071c62479b8d1629359a00cab7-oa-4-A.svg",
        "021ee8071c62479b8d1629359a00cab7-oa-4-Q.svg",
        "021ee8071c62479b8d1629359a00cab7-oa-O.svg",
        "22eb571924bc4f0ebd6a2543eb8dd86b-oa-1-A.svg",
        "22eb571924bc4f0ebd6a2543eb8dd86b-oa-1-Q.svg",
        "22eb571924bc4f0ebd6a2543eb8dd86b-oa-2-A.svg",
        "22eb571924bc4f0ebd6a2543eb8dd86b-oa-2-Q.svg",
        "22eb571924bc4f0ebd6a2543eb8dd86b-oa-3-A.svg",
        "22eb571924bc4f0ebd6a2543eb8dd86b-oa-3-Q.svg",
        "22eb571924bc4f0ebd6a2543eb8dd86b-oa-4-A.svg",
        "22eb571924bc4f0ebd6a2543eb8dd86b-oa-4-Q.svg",
        "22eb571924bc4f0ebd6a2543eb8dd86b-oa-5-A.svg",
        "22eb571924bc4f0ebd6a2543eb8dd86b-oa-5-Q.svg",
        "22eb571924bc4f0ebd6a2543eb8dd86b-oa-6-A.svg",
        "22eb571924bc4f0ebd6a2543eb8dd86b-oa-6-Q.svg",
        "22eb571924bc4f0ebd6a2543eb8dd86b-oa-7-A.svg",
        "22eb571924bc4f0ebd6a2543eb8dd86b-oa-7-Q.svg",
        "22eb571924bc4f0ebd6a2543eb8dd86b-oa-8-A.svg",
        "22eb571924bc4f0ebd6a2543eb8dd86b-oa-8-Q.svg",
        "22eb571924bc4f0ebd6a2543eb8dd86b-oa-9-A.svg",
        "22eb571924bc4f0ebd6a2543eb8dd86b-oa-9-Q.svg",
        "22eb571924bc4f0ebd6a2543eb8dd86b-oa-O.svg",
        "6a9d207efcd3458b956be868beb9cbde-oa-1-A.svg",
        "6a9d207efcd3458b956be868beb9cbde-oa-1-Q.svg",
        "6a9d207efcd3458b956be868beb9cbde-oa-2-A.svg",
        "6a9d207efcd3458b956be868beb9cbde-oa-2-Q.svg",
        "6a9d207efcd3458b956be868beb9cbde-oa-3-A.svg",
        "6a9d207efcd3458b956be868beb9cbde-oa-3-Q.svg",
        "6a9d207efcd3458b956be868beb9cbde-oa-O.svg",
        "Screenshot_20210223_144154.png",
        "Screenshot_20230509_085330.jpeg",
        "_styles_for_syntax_highlighting.css",
        "a13fd99f70b04226b3a6c66c4ac1e073-ao-1-A.svg",
        "a13fd99f70b04226b3a6c66c4ac1e073-ao-1-Q.svg",
        "a13fd99f70b04226b3a6c66c4ac1e073-ao-2-A.svg",
        "a13fd99f70b04226b3a6c66c4ac1e073-ao-2-Q.svg",
        "a13fd99f70b04226b3a6c66c4ac1e073-ao-3-A.svg",
        "a13fd99f70b04226b3a6c66c4ac1e073-ao-3-Q.svg",
        "a13fd99f70b04226b3a6c66c4ac1e073-ao-4-A.svg",
        "a13fd99f70b04226b3a6c66c4ac1e073-ao-4-Q.svg",
        "a13fd99f70b04226b3a6c66c4ac1e073-ao-5-A.svg",
        "a13fd99f70b04226b3a6c66c4ac1e073-ao-5-Q.svg",
        "a13fd99f70b04226b3a6c66c4ac1e073-ao-O.svg",
        "a5af1529db054270983497285ee2ce55-ao-1-A.svg",
        "a5af1529db054270983497285ee2ce55-ao-1-Q.svg",
        "a5af1529db054270983497285ee2ce55-ao-2-A.svg",
        "a5af1529db054270983497285ee2ce55-ao-2-Q.svg",
        "a5af1529db054270983497285ee2ce55-ao-3-A.svg",
        "a5af1529db054270983497285ee2ce55-ao-3-Q.svg",
        "a5af1529db054270983497285ee2ce55-ao-4-A.svg",
        "a5af1529db054270983497285ee2ce55-ao-4-Q.svg",
        "a5af1529db054270983497285ee2ce55-ao-O.svg",
        "ab341a5be75644eaa7368f793528f1d7-oa-1-A.svg",
        "ab341a5be75644eaa7368f793528f1d7-oa-1-Q.svg",
        "ab341a5be75644eaa7368f793528f1d7-oa-2-A.svg",
        "ab341a5be75644eaa7368f793528f1d7-oa-2-Q.svg",
        "ab341a5be75644eaa7368f793528f1d7-oa-O.svg",
        "brain-lobes.png",
        "d730da8d1307491e857e43889d325dc5-oa-2-A.svg",
        "d730da8d1307491e857e43889d325dc5-oa-2-Q.svg",
        "d730da8d1307491e857e43889d325dc5-oa-3-A.svg",
        "d730da8d1307491e857e43889d325dc5-oa-3-Q.svg",
        "d730da8d1307491e857e43889d325dc5-oa-O.svg",
        "heuristic-example-1-rbg-73.png",
        "heuristic-example-74.png",
        "paste-065043d9f5230de73636ad302c55dae66ac6f002.jpg",
        "paste-1793e63e5d1784d095cd692abf42ffcb9452a2b2.jpg",
        "paste-3715dace1d8462a21e74b3b7c524a70adfc6cb15.jpg",
        "paste-375d775a9b1bc0b9c8fe04f548f5deb82eb83ed3.jpg",
        "paste-411e9def31aa702646c15e88ced7211c4c369a8f.jpg",
        "paste-428c02a526438244adf3e2e04adb2bd973e8619a.jpg",
        "paste-4929fb767cde9eb10f341d82c26eadffa96dc234.jpg",
        "paste-4d67941934ceb67f56fed41b8ebce86a75177654.jpg",
        "paste-5d2a037da08c0fff583447aaaa78522dedc48908.jpg",
        "paste-5d75a92e45bc74d5752235efab88e31ac3660367.jpg",
        "paste-5fe060e70f819572e68ca9ef0f78d2d5bccf4c89.jpg",
        "paste-615ba6ef6072a1dc13391f80f8ac2d9094a1d03f.jpg",
        "paste-6725aff76c37882399c37da8a1351b8542d9f7d8.jpg",
        "paste-711b5f5b921db7220d3afec3e49602b616bd0c1f.jpg",
        "paste-73ec765fe2842f3ad6e18c35769888542745d24f.jpg",
        "paste-7edbf0e01c6293c344cc63b00901549adde7273e.jpg",
        "paste-895ace1b661f4db5c33b8ca798be3c89f5e8e0de.jpg",
        "paste-89f5462098516e5b4526a8847e7a17fc022efcd3.jpg",
        "paste-8d4dfc8b0c60ef1b6d3de1425ecc33fe18cf8c53.jpg",
        "paste-8eb3e3a8ebe34dfd14f253af2a555c2b1569eb0c.jpg",
        "paste-900a0d10aecea56a5ca890654592b4d95691d29d.jpg",
        "paste-9fcb15b1676491fded7238f27ff970ab7304de3c.jpg",
        "paste-a1a71b055b490cb8010dcb22d4f3df6add579e4c.jpg",
        "paste-a88a665c2e146d2fc3cf947cb5bd19723908a713.jpg",
        "paste-b06f97cb8fbf51fafc628585ff803682a1775ddc.jpg",
        "paste-c84fafc48a0d1bb11bcbfef690d281dfb87a47d1.jpg",
        "paste-cad6b8d912e75035083cfb918d2b29243fe29927.jpg",
        "paste-d179af7f24cde56feec56201e8f2ee4fa0a3812a.jpg",
        "paste-d3c832516e4c6fba578d627a1673fd102c9299b0.jpg",
        "paste-d4b3f7a5e2a953c75298bdcbb23c0c56e7715914.jpg",
        "paste-db1b5d120a685054395f3bc087b70846da437d5c.jpg",
        "paste-dcf031581a2d8e864ded340b1e24747a9b0e332f.jpg",
        "paste-ddebe004fd2c01d31c3108f88e8938759841bce0.jpg",
        "paste-dff51e4848feb8bc0024b48f3bd8f6e27d2b8e94.jpg",
        "paste-e0e2442850efef9b3668af82dd522d6b00735d90.jpg",
        "paste-e26dba5ae8ded8dd8da77576353a3a48dd2faecb.jpg",
        "paste-e3818928a9aacb71ec3c2bf2726ca98b495c7969.jpg",
        "paste-e3e2228747b18747d291f49eff9b24c97f545256.jpg",
        "paste-e4ee92045b6c2c5267ea1f031151bc83246e99c0.jpg",
        "paste-e87f2d290398114b64a91247adf2baee01fd5c4d.jpg",
        "paste-eafadaee8bc65baaa22ba4de9c18bfa1edfd0848.jpg",
        "paste-ee982b2008ed1c22af2e8d2253ab50234f562d50.jpg",
        "paste-ef4155eb70beff91d5a2a159e9d78246c46a1257.jpg",
        "paste-f8f300330e7541209ad27ddf66c73d9fa72f123b.jpg",
        "tmp662mxaz0.jpg",
        "tmpgalvqimz.jpg",
        "tmpm0aqus3y.jpg",
        "tmpocamsn1a.jpg",
        "tmpowffrao_.jpg",
        "tmpuwcj9g07.jpg"
    ],
    "mid": 1501748592470,
    "name": "ETH D-INFK",
    "newLimit": null,
    "newLimitToday": null,
    "note_models": [
        {
            "__type__": "NoteModel",
            "crowdanki_uuid": "2ae32340-7e39-11ee-bdad-3d2d00994e04",
            "css": ".card {\n    font-family: arial;\n    font-size: 20px;\n    text-align: center;\n    color: black;\n    background-color: white;\n}\n",
            "flds": [
                {
                    "collapsed": false,
                    "description": "",
                    "excludeFromSearch": false,
                    "font": "Arial",
                    "id": null,
                    "name": "Front",
                    "ord": 0,
                    "plainText": false,
                    "preventDeletion": false,
                    "rtl": false,
                    "size": 20,
                    "sticky": false,
                    "tag": null
                },
                {
                    "collapsed": false,
                    "description": "",
                    "excludeFromSearch": false,
                    "font": "Arial",
                    "id": null,
                    "name": "Back",
                    "ord": 1,
                    "plainText": false,
                    "preventDeletion": false,
                    "rtl": false,
                    "size": 20,
                    "sticky": false,
                    "tag": null
                }
            ],
            "latexPost": "\\end{document}",
            "latexPre": "\\documentclass[12pt]{article}\n\\special{papersize=3in,5in}\n\\usepackage[utf8]{inputenc}\n\\usepackage{amssymb,amsmath}\n\\pagestyle{empty}\n\\setlength{\\parindent}{0in}\n\\begin{document}\n",
            "latexsvg": false,
            "name": "Basic",
            "req": [
                [
                    0,
                    "any",
                    [
                        0
                    ]
                ]
            ],
            "sortf": 0,
            "tmpls": [
                {
                    "afmt": "{{FrontSide}}\n\n<hr id=answer>\n\n{{Back}}",
                    "bafmt": "",
                    "bfont": "",
                    "bqfmt": "",
                    "bsize": 0,
                    "did": null,
                    "id": null,
                    "name": "Card 1",
                    "ord": 0,
                    "qfmt": "{{Front}}"
                }
            ],
            "type": 0
        },
        {
            "__type__": "NoteModel",
            "crowdanki_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "css": ".card {\n    font-family: arial;\n    font-size: 20px;\n    text-align: center;\n    color: black;\n    background-color: white;\n}\n.cloze {\n    font-weight: bold;\n    color: blue;\n}\n.nightMode .cloze {\n    color: lightblue;\n}\n",
            "flds": [
                {
                    "collapsed": false,
                    "description": "",
                    "excludeFromSearch": false,
                    "font": "Arial",
                    "id": null,
                    "name": "Text",
                    "ord": 0,
                    "plainText": false,
                    "preventDeletion": false,
                    "rtl": false,
                    "size": 20,
                    "sticky": false,
                    "tag": null
                },
                {
                    "collapsed": false,
                    "description": "",
                    "excludeFromSearch": false,
                    "font": "Arial",
                    "id": null,
                    "name": "Back Extra",
                    "ord": 1,
                    "plainText": false,
                    "preventDeletion": false,
                    "rtl": false,
                    "size": 20,
                    "sticky": false,
                    "tag": null
                }
            ],
            "latexPost": "\\end{document}",
            "latexPre": "\\documentclass[12pt]{article}\n\\special{papersize=3in,5in}\n\\usepackage[utf8]{inputenc}\n\\usepackage{amssymb,amsmath}\n\\pagestyle{empty}\n\\setlength{\\parindent}{0in}\n\\begin{document}\n",
            "latexsvg": false,
            "name": "Cloze",
            "req": [
                [
                    0,
                    "any",
                    [
                        0
                    ]
                ]
            ],
            "sortf": 0,
            "tmpls": [
                {
                    "afmt": "{{cloze:Text}}<br>\n{{Back Extra}}",
                    "bafmt": "",
                    "bfont": "",
                    "bqfmt": "",
                    "bsize": 0,
                    "did": null,
                    "id": null,
                    "name": "Cloze",
                    "ord": 0,
                    "qfmt": "{{cloze:Text}}"
                }
            ],
            "type": 1
        },
        {
            "__type__": "NoteModel",
            "crowdanki_uuid": "2ada207e-7e39-11ee-bdad-3d2d00994e04",
            "css": ".card {\n  font-family: 'Fira Sans';\n  font-size: 20px;\n  text-align: center;\n  color: black;\n  background-color: white;\n}\n",
            "flds": [
                {
                    "collapsed": false,
                    "description": "",
                    "excludeFromSearch": false,
                    "font": "Fira Sans",
                    "id": null,
                    "name": "Abbreviation",
                    "ord": 0,
                    "plainText": false,
                    "preventDeletion": false,
                    "rtl": false,
                    "size": 20,
                    "sticky": false,
                    "tag": null
                },
                {
                    "collapsed": false,
                    "description": "",
                    "excludeFromSearch": false,
                    "font": "Fira Sans",
                    "id": null,
                    "name": "Expanded Abbreviation",
                    "ord": 1,
                    "plainText": false,
                    "preventDeletion": false,
                    "rtl": false,
                    "size": 20,
                    "sticky": false,
                    "tag": null
                },
                {
                    "collapsed": false,
                    "description": "",
                    "excludeFromSearch": false,
                    "font": "Fira Sans",
                    "id": null,
                    "name": "Explanation",
                    "ord": 2,
                    "plainText": false,
                    "preventDeletion": false,
                    "rtl": false,
                    "size": 20,
                    "sticky": false,
                    "tag": null
                }
            ],
            "latexPost": "\\end{document}",
            "latexPre": "\\documentclass[12pt]{article}\n\\special{papersize=3in,5in}\n\\usepackage[utf8]{inputenc}\n\\usepackage{amssymb,amsmath}\n\\pagestyle{empty}\n\\setlength{\\parindent}{0in}\n\\begin{document}\n",
            "latexsvg": false,
            "name": "Abbreviation + Explanation",
            "req": [
                [
                    0,
                    "any",
                    [
                        0
                    ]
                ],
                [
                    1,
                    "any",
                    [
                        0
                    ]
                ]
            ],
            "sortf": 0,
            "tmpls": [
                {
                    "afmt": "{{FrontSide}}\n\n<hr id=answer>\n\n{{Expanded Abbreviation}}",
                    "bafmt": "",
                    "bfont": "",
                    "bqfmt": "",
                    "bsize": 0,
                    "did": null,
                    "id": null,
                    "name": "Karte 1",
                    "ord": 0,
                    "qfmt": "Expand: {{Abbreviation}}"
                },
                {
                    "afmt": "{{FrontSide}} \n\n<hr id=answer>\n\n{{Explanation}}",
                    "bafmt": "",
                    "bfont": "",
                    "bqfmt": "",
                    "bsize": 0,
                    "did": null,
                    "id": null,
                    "name": "Karte 2",
                    "ord": 1,
                    "qfmt": "Explain the abbreviation: {{Abbreviation}}"
                }
            ],
            "type": 0
        },
        {
            "__type__": "NoteModel",
            "crowdanki_uuid": "2ade71c4-7e39-11ee-bdad-3d2d00994e04",
            "css": "@import url(\"_styles_for_syntax_highlighting.css\");\n\n/* GENERAL CARD STYLE */\n.card {\n  font-family: \"Helvetica LT Std\", Helvetica, Arial, Sans;\n  font-size: 150%;\n  text-align: center;\n  color: black;\n  background-color: white;\n}\n\n/* OCCLUSION CSS START - don't edit this */\n#io-overlay {\n  position:absolute;\n  top:0;\n  width:100%;\n  z-index:3\n}\n\n#io-original {\n  position:relative;\n  top:0;\n  width:100%;\n  z-index:2;\n  visibility: hidden;\n}\n\n#io-wrapper {\n  position:relative;\n  width: 100%;\n}\n/* OCCLUSION CSS END */\n\n/* OTHER STYLES */\n#io-header{\n  font-size: 1.1em;\n  margin-bottom: 0.2em;\n}\n\n#io-footer{\n  max-width: 80%;\n  margin-left: auto;\n  margin-right: auto;\n  margin-top: 0.8em;\n  font-style: italic;\n}\n\n#io-extra-wrapper{\n  /* the wrapper is needed to center the\n  left-aligned blocks below it */\n  width: 80%;\n  margin-left: auto;\n  margin-right: auto;\n  margin-top: 0.5em;\n}\n\n#io-extra{\n  text-align:center;\n  display: inline-block;\n}\n\n.io-extra-entry{\n  margin-top: 0.8em;\n  font-size: 0.9em;\n  text-align:left;\n}\n\n.io-field-descr{\n  margin-bottom: 0.2em;\n  font-weight: bold;\n  font-size: 1em;\n}\n\n#io-revl-btn {\n  font-size: 0.5em;\n}\n\n/* ADJUSTMENTS FOR MOBILE DEVICES */\n\n.mobile .card, .mobile #content {\n  font-size: 120%;\n  margin: 0;\n}\n\n.mobile #io-extra-wrapper {\n  width: 95%;\n}\n\n.mobile #io-revl-btn {\n  font-size: 0.8em;\n}\n",
            "flds": [
                {
                    "collapsed": false,
                    "description": "",
                    "excludeFromSearch": false,
                    "font": "Arial",
                    "id": null,
                    "name": "ID (hidden)",
                    "ord": 0,
                    "plainText": false,
                    "preventDeletion": false,
                    "rtl": false,
                    "size": 20,
                    "sticky": false,
                    "tag": null
                },
                {
                    "collapsed": false,
                    "description": "",
                    "excludeFromSearch": false,
                    "font": "Arial",
                    "id": null,
                    "name": "Header",
                    "ord": 1,
                    "plainText": false,
                    "preventDeletion": false,
                    "rtl": false,
                    "size": 20,
                    "sticky": false,
                    "tag": null
                },
                {
                    "collapsed": false,
                    "description": "",
                    "excludeFromSearch": false,
                    "font": "Arial",
                    "id": null,
                    "name": "Image",
                    "ord": 2,
                    "plainText": false,
                    "preventDeletion": false,
                    "rtl": false,
                    "size": 20,
                    "sticky": false,
                    "tag": null
                },
                {
                    "collapsed": false,
                    "description": "",
                    "excludeFromSearch": false,
                    "font": "Arial",
                    "id": null,
                    "name": "Question Mask",
                    "ord": 3,
                    "plainText": false,
                    "preventDeletion": false,
                    "rtl": false,
                    "size": 20,
                    "sticky": false,
                    "tag": null
                },
                {
                    "collapsed": false,
                    "description": "",
                    "excludeFromSearch": false,
                    "font": "Arial",
                    "id": null,
                    "name": "Footer",
                    "ord": 4,
                    "plainText": false,
                    "preventDeletion": false,
                    "rtl": false,
                    "size": 20,
                    "sticky": false,
                    "tag": null
                },
                {
                    "collapsed": false,
                    "description": "",
                    "excludeFromSearch": false,
                    "font": "Arial",
                    "id": null,
                    "name": "Remarks",
                    "ord": 5,
                    "plainText": false,
                    "preventDeletion": false,
                    "rtl": false,
                    "size": 20,
                    "sticky": false,
                    "tag": null
                },
                {
                    "collapsed": false,
                    "description": "",
                    "excludeFromSearch": false,
                    "font": "Arial",
                    "id": null,
                    "name": "Sources",
                    "ord": 6,
                    "plainText": false,
                    "preventDeletion": false,
                    "rtl": false,
                    "size": 20,
                    "sticky": false,
                    "tag": null
                },
                {
                    "collapsed": false,
                    "description": "",
                    "excludeFromSearch": false,
                    "font": "Arial",
                    "id": null,
                    "name": "Extra 1",
                    "ord": 7,
                    "plainText": false,
                    "preventDeletion": false,
                    "rtl": false,
                    "size": 20,
                    "sticky": false,
                    "tag": null
                },
                {
                    "collapsed": false,
                    "description": "",
                    "excludeFromSearch": false,
                    "font": "Arial",
                    "id": null,
                    "name": "Extra 2",
                    "ord": 8,
                    "plainText": false,
                    "preventDeletion": false,
                    "rtl": false,
                    "size": 20,
                    "sticky": false,
                    "tag": null
                },
                {
                    "collapsed": false,
                    "description": "",
                    "excludeFromSearch": false,
                    "font": "Arial",
                    "id": null,
                    "name": "Answer Mask",
                    "ord": 9,
                    "plainText": false,
                    "preventDeletion": false,
                    "rtl": false,
                    "size": 20,
                    "sticky": false,
                    "tag": null
                },
                {
                    "collapsed": false,
                    "description": "",
                    "excludeFromSearch": false,
                    "font": "Arial",
                    "id": null,
                    "name": "Original Mask",
                    "ord": 10,
                    "plainText": false,
                    "preventDeletion": false,
                    "rtl": false,
                    "size": 20,
                    "sticky": false,
                    "tag": null
                }
            ],
            "latexPost": "\\end{document}",
            "latexPre": "\\documentclass[12pt]{article}\n\\special{papersize=3in,5in}\n\\usepackage[utf8]{inputenc}\n\\usepackage{amssymb,amsmath}\n\\pagestyle{empty}\n\\setlength{\\parindent}{0in}\n\\begin{document}\n",
            "latexsvg": false,
            "name": "Image Occlusion Enhanced",
            "req": [
                [
                    0,
                    "any",
                    [
                        2
                    ]
                ]
            ],
            "sortf": 1,
            "tmpls": [
                {
                    "afmt": "{{#Image}}\n<div id=\"io-header\">{{Header}}</div>\n<div id=\"io-wrapper\">\n  <div id=\"io-overlay\">{{Answer Mask}}</div>\n  <div id=\"io-original\">{{Image}}</div>\n</div>\n{{#Footer}}<div id=\"io-footer\">{{Footer}}</div>{{/Footer}}\n<button id=\"io-revl-btn\" onclick=\"toggle();\">Toggle Masks</button>\n<div id=\"io-extra-wrapper\">\n  <div id=\"io-extra\">\n    {{#Remarks}}\n      <div class=\"io-extra-entry\">\n        <div class=\"io-field-descr\">Remarks</div>{{Remarks}}\n      </div>\n    {{/Remarks}}\n    {{#Sources}}\n      <div class=\"io-extra-entry\">\n        <div class=\"io-field-descr\">Sources</div>{{Sources}}\n      </div>\n    {{/Sources}}\n    {{#Extra 1}}\n      <div class=\"io-extra-entry\">\n        <div class=\"io-field-descr\">Extra 1</div>{{Extra 1}}\n      </div>\n    {{/Extra 1}}\n    {{#Extra 2}}\n      <div class=\"io-extra-entry\">\n        <div class=\"io-field-descr\">Extra 2</div>{{Extra 2}}\n      </div>\n    {{/Extra 2}}\n  </div>\n</div>\n\n<script>\n// Toggle answer mask on clicking the image\nvar toggle = function() {\n  var amask = document.getElementById('io-overlay');\n  if (amask.style.display === 'block' || amask.style.display === '')\n    amask.style.display = 'none';\n  else\n    amask.style.display = 'block'\n}\n\n// Prevent original image from loading before mask\naFade = 50, qFade = 0;\nvar mask = document.querySelector('#io-overlay>img');\nfunction loaded() {\n    var original = document.querySelector('#io-original');\n    original.style.visibility = \"visible\";\n}\nif (mask === null || mask.complete) {\n    loaded();\n} else {\n    mask.addEventListener('load', loaded);\n}\n</script>\n{{/Image}}\n",
                    "bafmt": "",
                    "bfont": "",
                    "bqfmt": "",
                    "bsize": 0,
                    "did": null,
                    "id": null,
                    "name": "IO Card",
                    "ord": 0,
                    "qfmt": "{{#Image}}\n<div id=\"io-header\">{{Header}}</div>\n<div id=\"io-wrapper\">\n  <div id=\"io-overlay\">{{Question Mask}}</div>\n  <div id=\"io-original\">{{Image}}</div>\n</div>\n<div id=\"io-footer\">{{Footer}}</div>\n\n<script>\n// Prevent original image from loading before mask\naFade = 50, qFade = 0;\nvar mask = document.querySelector('#io-overlay>img');\nfunction loaded() {\n    var original = document.querySelector('#io-original');\n    original.style.visibility = \"visible\";\n}\nif (mask === null || mask.complete) {\n    loaded();\n} else {\n    mask.addEventListener('load', loaded);\n}\n</script>\n{{/Image}}\n"
                }
            ],
            "type": 0
        },
        {
            "__type__": "NoteModel",
            "crowdanki_uuid": "2ae3a982-7e39-11ee-bdad-3d2d00994e04",
            "css": "/* GENERAL CARD STYLE */\n.card {\n  font-family: \"Helvetica LT Std\", Helvetica, Arial, Sans;\n  font-size: 150%;\n  text-align: center;\n  color: black;\n  background-color: white;\n}\n\n/* OCCLUSION CSS START - don't edit this */\n#io-overlay {\n  position:absolute;\n  top:0;\n  width:100%;\n  z-index:3\n}\n\n#io-original {\n  position:relative;\n  top:0;\n  width:100%;\n  z-index:2;\n  visibility: hidden;\n}\n\n#io-wrapper {\n  position:relative;\n  width: 100%;\n}\n/* OCCLUSION CSS END */\n\n/* OTHER STYLES */\n#io-header{\n  font-size: 1.1em;\n  margin-bottom: 0.2em;\n}\n\n#io-footer{\n  max-width: 80%;\n  margin-left: auto;\n  margin-right: auto;\n  margin-top: 0.8em;\n  font-style: italic;\n}\n\n#io-extra-wrapper{\n  /* the wrapper is needed to center the\n  left-aligned blocks below it */\n  width: 80%;\n  margin-left: auto;\n  margin-right: auto;\n  margin-top: 0.5em;\n}\n\n#io-extra{\n  text-align:center;\n  display: inline-block;\n}\n\n.io-extra-entry{\n  margin-top: 0.8em;\n  font-size: 0.9em;\n  text-align:left;\n}\n\n.io-field-descr{\n  margin-bottom: 0.2em;\n  font-weight: bold;\n  font-size: 1em;\n}\n\n#io-revl-btn {\n  font-size: 0.5em;\n}\n\n/* ADJUSTMENTS FOR MOBILE DEVICES */\n\n.mobile .card, .mobile #content {\n  font-size: 120%;\n  margin: 0;\n}\n\n.mobile #io-extra-wrapper {\n  width: 95%;\n}\n\n.mobile #io-revl-btn {\n  font-size: 0.8em;\n}\n",
            "flds": [
                {
                    "collapsed": false,
                    "description": "",
                    "excludeFromSearch": false,
                    "font": "Arial",
                    "id": null,
                    "name": "ID (hidden)",
                    "ord": 0,
                    "plainText": false,
                    "preventDeletion": false,
                    "rtl": false,
                    "size": 20,
                    "sticky": false,
                    "tag": null
                },
                {
                    "collapsed": false,
                    "description": "",
                    "excludeFromSearch": false,
                    "font": "Arial",
                    "id": null,
                    "name": "Header",
                    "ord": 1,
                    "plainText": false,
                    "preventDeletion": false,
                    "rtl": false,
                    "size": 20,
                    "sticky": false,
                    "tag": null
                },
                {
                    "collapsed": false,
                    "description": "",
                    "excludeFromSearch": false,
                    "font": "Arial",
                    "id": null,
                    "name": "Image",
                    "ord": 2,
                    "plainText": false,
                    "preventDeletion": false,
                    "rtl": false,
                    "size": 20,
                    "sticky": false,
                    "tag": null
                },
                {
                    "collapsed": false,
                    "description": "",
                    "excludeFromSearch": false,
                    "font": "Arial",
                    "id": null,
                    "name": "Question Mask",
                    "ord": 3,
                    "plainText": false,
                    "preventDeletion": false,
                    "rtl": false,
                    "size": 20,
                    "sticky": false,
                    "tag": null
                },
                {
                    "collapsed": false,
                    "description": "",
                    "excludeFromSearch": false,
                    "font": "Arial",
                    "id": null,
                    "name": "Footer",
                    "ord": 4,
                    "plainText": false,
                    "preventDeletion": false,
                    "rtl": false,
                    "size": 20,
                    "sticky": false,
                    "tag": null
                },
                {
                    "collapsed": false,
                    "description": "",
                    "excludeFromSearch": false,
                    "font": "Arial",
                    "id": null,
                    "name": "Remarks",
                    "ord": 5,
                    "plainText": false,
                    "preventDeletion": false,
                    "rtl": false,
                    "size": 20,
                    "sticky": false,
                    "tag": null
                },
                {
                    "collapsed": false,
                    "description": "",
                    "excludeFromSearch": false,
                    "font": "Arial",
                    "id": null,
                    "name": "Sources",
                    "ord": 6,
                    "plainText": false,
                    "preventDeletion": false,
                    "rtl": false,
                    "size": 20,
                    "sticky": false,
                    "tag": null
                },
                {
                    "collapsed": false,
                    "description": "",
                    "excludeFromSearch": false,
                    "font": "Arial",
                    "id": null,
                    "name": "Extra 1",
                    "ord": 7,
                    "plainText": false,
                    "preventDeletion": false,
                    "rtl": false,
                    "size": 20,
                    "sticky": false,
                    "tag": null
                },
                {
                    "collapsed": false,
                    "description": "",
                    "excludeFromSearch": false,
                    "font": "Arial",
                    "id": null,
                    "name": "Extra 2",
                    "ord": 8,
                    "plainText": false,
                    "preventDeletion": false,
                    "rtl": false,
                    "size": 20,
                    "sticky": false,
                    "tag": null
                },
                {
                    "collapsed": false,
                    "description": "",
                    "excludeFromSearch": false,
                    "font": "Arial",
                    "id": null,
                    "name": "Answer Mask",
                    "ord": 9,
                    "plainText": false,
                    "preventDeletion": false,
                    "rtl": false,
                    "size": 20,
                    "sticky": false,
                    "tag": null
                },
                {
                    "collapsed": false,
                    "description": "",
                    "excludeFromSearch": false,
                    "font": "Arial",
                    "id": null,
                    "name": "Original Mask",
                    "ord": 10,
                    "plainText": false,
                    "preventDeletion": false,
                    "rtl": false,
                    "size": 20,
                    "sticky": false,
                    "tag": null
                }
            ],
            "latexPost": "\\end{document}",
            "latexPre": "\\documentclass[12pt]{article}\n\\special{papersize=3in,5in}\n\\usepackage[utf8]{inputenc}\n\\usepackage{amssymb,amsmath}\n\\pagestyle{empty}\n\\setlength{\\parindent}{0in}\n\\begin{document}\n",
            "latexsvg": false,
            "name": "Image Occlusion Enhanced+",
            "req": [
                [
                    0,
                    "any",
                    [
                        2
                    ]
                ]
            ],
            "sortf": 1,
            "tmpls": [
                {
                    "afmt": "{{#Image}}\n<div id=\"io-header\">{{Header}}</div>\n<div id=\"io-wrapper\">\n  <div id=\"io-overlay\">{{Answer Mask}}</div>\n  <div id=\"io-original\">{{Image}}</div>\n</div>\n{{#Footer}}<div id=\"io-footer\">{{Footer}}</div>{{/Footer}}\n<button id=\"io-revl-btn\" onclick=\"toggle();\">Toggle Masks</button>\n<div id=\"io-extra-wrapper\">\n  <div id=\"io-extra\">\n    {{#Remarks}}\n      <div class=\"io-extra-entry\">\n        <div class=\"io-field-descr\">Remarks</div>{{Remarks}}\n      </div>\n    {{/Remarks}}\n    {{#Sources}}\n      <div class=\"io-extra-entry\">\n        <div class=\"io-field-descr\">Sources</div>{{Sources}}\n      </div>\n    {{/Sources}}\n    {{#Extra 1}}\n      <div class=\"io-extra-entry\">\n        <div class=\"io-field-descr\">Extra 1</div>{{Extra 1}}\n      </div>\n    {{/Extra 1}}\n    {{#Extra 2}}\n      <div class=\"io-extra-entry\">\n        <div class=\"io-field-descr\">Extra 2</div>{{Extra 2}}\n      </div>\n    {{/Extra 2}}\n  </div>\n</div>\n\n<script>\n// Toggle answer mask on clicking the image\nvar toggle = function() {\n  var amask = document.getElementById('io-overlay');\n  if (amask.style.display === 'block' || amask.style.display === '')\n    amask.style.display = 'none';\n  else\n    amask.style.display = 'block'\n}\n\n// Prevent original image from loading before mask\naFade = 50, qFade = 0;\nvar mask = document.querySelector('#io-overlay>img');\nfunction loaded() {\n    var original = document.querySelector('#io-original');\n    original.style.visibility = \"visible\";\n}\nif (mask === null || mask.complete) {\n    loaded();\n} else {\n    mask.addEventListener('load', loaded);\n}\n</script>\n{{/Image}}\n",
                    "bafmt": "",
                    "bfont": "",
                    "bqfmt": "",
                    "bsize": 0,
                    "did": null,
                    "id": null,
                    "name": "IO Card",
                    "ord": 0,
                    "qfmt": "{{#Image}}\n<div id=\"io-header\">{{Header}}</div>\n<div id=\"io-wrapper\">\n  <div id=\"io-overlay\">{{Question Mask}}</div>\n  <div id=\"io-original\">{{Image}}</div>\n</div>\n<div id=\"io-footer\">{{Footer}}</div>\n\n<script>\n// Prevent original image from loading before mask\naFade = 50, qFade = 0;\nvar mask = document.querySelector('#io-overlay>img');\nfunction loaded() {\n    var original = document.querySelector('#io-original');\n    original.style.visibility = \"visible\";\n}\nif (mask === null || mask.complete) {\n    loaded();\n} else {\n    mask.addEventListener('load', loaded);\n}\n</script>\n{{/Image}}\n"
                }
            ],
            "type": 0
        },
        {
            "__type__": "NoteModel",
            "crowdanki_uuid": "2ae7be8c-7e39-11ee-bdad-3d2d00994e04",
            "css": "/*template\n######## CLOZE OVERLAPPER DEFAULT TEMPLATE START ########\nversion: 1.0.0\n*/\n\n/*\nPLEASE DO NOT MODIFY THE DEFAULT TEMPLATE SECTIONS.\nAny changes between the 'template' markers will be lost once\nthe add-on updates its template.\n*/\n\n/* general card style */\n\nhtml {\n  /* scrollbar always visible in order to prevent shift when revealing answer*/\n  overflow-y: scroll;\n}\n\n.card {\n  font-family: \"Helvetica LT Std\", Helvetica, Arial, Sans;\n  font-size: 150%;\n  text-align: center;\n  color: black;\n  background-color: white;\n}\n\n/* general layout */\n\n.text {\n  /* center left-aligned text on card */\n  display: inline-block;\n  align: center;\n  text-align: left;\n  margin: auto;\n  max-width: 40em;\n}\n\n.hidden {\n  /* guarantees a consistent width across front and back */\n  font-weight: bold;\n  display: block;\n  line-height:0;\n  height: 0;\n  overflow: hidden;\n  visibility: hidden;\n}\n\n.title {\n  font-weight: bold;\n  font-size: 1.1em;\n  margin-bottom: 1em;\n  text-align: center;\n}\n\n/* clozes */\n\n.cloze {\n  /* regular cloze deletion */\n  font-weight: bold;\n  color: #0048FF;\n}\n\n.card21 #btn-reveal{\n  /* no need to display reveal btn on last card */\n  display:none;\n}\n\n/* additional fields */\n\n.extra{\n  margin-top: 0.5em;\n  margin: auto;\n  max-width: 40em;\n}\n\n.extra-entry{\n  margin-top: 0.8em;\n  font-size: 0.9em;\n  text-align:left;\n}\n\n.extra-descr{\n  margin-bottom: 0.2em;\n  font-weight: bold;\n  font-size: 1em;\n}\n\n#btn-reveal {\n  font-size: 0.5em;\n}\n\n.mobile #btn-reveal {\n  font-size: 0.8em;\n}\n\n/*\n######## CLOZE OVERLAPPER DEFAULT TEMPLATE END ########\ntemplate*/\n\n/* Add your customizations here: */\n",
            "flds": [
                {
                    "collapsed": false,
                    "description": "",
                    "excludeFromSearch": false,
                    "font": "Arial",
                    "id": null,
                    "name": "Original",
                    "ord": 0,
                    "plainText": false,
                    "preventDeletion": false,
                    "rtl": false,
                    "size": 20,
                    "sticky": false,
                    "tag": null
                },
                {
                    "collapsed": false,
                    "description": "",
                    "excludeFromSearch": false,
                    "font": "Arial",
                    "id": null,
                    "name": "Title",
                    "ord": 1,
                    "plainText": false,
                    "preventDeletion": false,
                    "rtl": false,
                    "size": 20,
                    "sticky": false,
                    "tag": null
                },
                {
                    "collapsed": false,
                    "description": "",
                    "excludeFromSearch": false,
                    "font": "Arial",
                    "id": null,
                    "name": "Remarks",
                    "ord": 2,
                    "plainText": false,
                    "preventDeletion": false,
                    "rtl": false,
                    "size": 20,
                    "sticky": false,
                    "tag": null
                },
                {
                    "collapsed": false,
                    "description": "",
                    "excludeFromSearch": false,
                    "font": "Arial",
                    "id": null,
                    "name": "Sources",
                    "ord": 3,
                    "plainText": false,
                    "preventDeletion": false,
                    "rtl": false,
                    "size": 20,
                    "sticky": false,
                    "tag": null
                },
                {
                    "collapsed": false,
                    "description": "",
                    "excludeFromSearch": false,
                    "font": "Arial",
                    "id": null,
                    "name": "Settings",
                    "ord": 4,
                    "plainText": false,
                    "preventDeletion": false,
                    "rtl": false,
                    "size": 20,
                    "sticky": true,
                    "tag": null
                },
                {
                    "collapsed": false,
                    "description": "",
                    "excludeFromSearch": false,
                    "font": "Arial",
                    "id": null,
                    "name": "Text1",
                    "ord": 5,
                    "plainText": false,
                    "preventDeletion": false,
                    "rtl": false,
                    "size": 12,
                    "sticky": false,
                    "tag": null
                },
                {
                    "collapsed": false,
                    "description": "",
                    "excludeFromSearch": false,
                    "font": "Arial",
                    "id": null,
                    "name": "Text2",
                    "ord": 6,
                    "plainText": false,
                    "preventDeletion": false,
                    "rtl": false,
                    "size": 12,
                    "sticky": false,
                    "tag": null
                },
                {
                    "collapsed": false,
                    "description": "",
                    "excludeFromSearch": false,
                    "font": "Arial",
                    "id": null,
                    "name": "Text3",
                    "ord": 7,
                    "plainText": false,
                    "preventDeletion": false,
                    "rtl": false,
                    "size": 12,
                    "sticky": false,
                    "tag": null
                },
                {
                    "collapsed": false,
                    "description": "",
                    "excludeFromSearch": false,
                    "font": "Arial",
                    "id": null,
                    "name": "Text4",
                    "ord": 8,
                    "plainText": false,
                    "preventDeletion": false,
                    "rtl": false,
                    "size": 12,
                    "sticky": false,
                    "tag": null
                },
                {
                    "collapsed": false,
                    "description": "",
                    "excludeFromSearch": false,
                    "font": "Arial",
                    "id": null,
                    "name": "Text5",
                    "ord": 9,
                    "plainText": false,
                    "preventDeletion": false,
                    "rtl": false,
                    "size": 12,
                    "sticky": false,
                    "tag": null
                },
                {
                    "collapsed": false,
                    "description": "",
                    "excludeFromSearch": false,
                    "font": "Arial",
                    "id": null,
                    "name": "Text6",
                    "ord": 10,
                    "plainText": false,
                    "preventDeletion": false,
                    "rtl": false,
                    "size": 12,
                    "sticky": false,
                    "tag": null
                },
                {
                    "collapsed": false,
                    "description": "",
                    "excludeFromSearch": false,
                    "font": "Arial",
                    "id": null,
                    "name": "Text7",
                    "ord": 11,
                    "plainText": false,
                    "preventDeletion": false,
                    "rtl": false,
                    "size": 12,
                    "sticky": false,
                    "tag": null
                },
                {
                    "collapsed": false,
                    "description": "",
                    "excludeFromSearch": false,
                    "font": "Arial",
                    "id": null,
                    "name": "Text8",
                    "ord": 12,
                    "plainText": false,
                    "preventDeletion": false,
                    "rtl": false,
                    "size": 12,
                    "sticky": false,
                    "tag": null
                },
                {
                    "collapsed": false,
                    "description": "",
                    "excludeFromSearch": false,
                    "font": "Arial",
                    "id": null,
                    "name": "Text9",
                    "ord": 13,
                    "plainText": false,
                    "preventDeletion": false,
                    "rtl": false,
                    "size": 12,
                    "sticky": false,
                    "tag": null
                },
                {
                    "collapsed": false,
                    "description": "",
                    "excludeFromSearch": false,
                    "font": "Arial",
                    "id": null,
                    "name": "Text10",
                    "ord": 14,
                    "plainText": false,
                    "preventDeletion": false,
                    "rtl": false,
                    "size": 12,
                    "sticky": false,
                    "tag": null
                },
                {
                    "collapsed": false,
                    "description": "",
                    "excludeFromSearch": false,
                    "font": "Arial",
                    "id": null,
                    "name": "Text11",
                    "ord": 15,
                    "plainText": false,
                    "preventDeletion": false,
                    "rtl": false,
                    "size": 12,
                    "sticky": false,
                    "tag": null
                },
                {
                    "collapsed": false,
                    "description": "",
                    "excludeFromSearch": false,
                    "font": "Arial",
                    "id": null,
                    "name": "Text12",
                    "ord": 16,
                    "plainText": false,
                    "preventDeletion": false,
                    "rtl": false,
                    "size": 12,
                    "sticky": false,
                    "tag": null
                },
                {
                    "collapsed": false,
                    "description": "",
                    "excludeFromSearch": false,
                    "font": "Arial",
                    "id": null,
                    "name": "Text13",
                    "ord": 17,
                    "plainText": false,
                    "preventDeletion": false,
                    "rtl": false,
                    "size": 12,
                    "sticky": false,
                    "tag": null
                },
                {
                    "collapsed": false,
                    "description": "",
                    "excludeFromSearch": false,
                    "font": "Arial",
                    "id": null,
                    "name": "Text14",
                    "ord": 18,
                    "plainText": false,
                    "preventDeletion": false,
                    "rtl": false,
                    "size": 12,
                    "sticky": false,
                    "tag": null
                },
                {
                    "collapsed": false,
                    "description": "",
                    "excludeFromSearch": false,
                    "font": "Arial",
                    "id": null,
                    "name": "Text15",
                    "ord": 19,
                    "plainText": false,
                    "preventDeletion": false,
                    "rtl": false,
                    "size": 12,
                    "sticky": false,
                    "tag": null
                },
                {
                    "collapsed": false,
                    "description": "",
                    "excludeFromSearch": false,
                    "font": "Arial",
                    "id": null,
                    "name": "Text16",
                    "ord": 20,
                    "plainText": false,
                    "preventDeletion": false,
                    "rtl": false,
                    "size": 12,
                    "sticky": false,
                    "tag": null
                },
                {
                    "collapsed": false,
                    "description": "",
                    "excludeFromSearch": false,
                    "font": "Arial",
                    "id": null,
                    "name": "Text17",
                    "ord": 21,
                    "plainText": false,
                    "preventDeletion": false,
                    "rtl": false,
                    "size": 12,
                    "sticky": false,
                    "tag": null
                },
                {
                    "collapsed": false,
                    "description": "",
                    "excludeFromSearch": false,
                    "font": "Arial",
                    "id": null,
                    "name": "Text18",
                    "ord": 22,
                    "plainText": false,
                    "preventDeletion": false,
                    "rtl": false,
                    "size": 12,
                    "sticky": false,
                    "tag": null
                },
                {
                    "collapsed": false,
                    "description": "",
                    "excludeFromSearch": false,
                    "font": "Arial",
                    "id": null,
                    "name": "Text19",
                    "ord": 23,
                    "plainText": false,
                    "preventDeletion": false,
                    "rtl": false,
                    "size": 12,
                    "sticky": false,
                    "tag": null
                },
                {
                    "collapsed": false,
                    "description": "",
                    "excludeFromSearch": false,
                    "font": "Arial",
                    "id": null,
                    "name": "Text20",
                    "ord": 24,
                    "plainText": false,
                    "preventDeletion": false,
                    "rtl": false,
                    "size": 12,
                    "sticky": false,
                    "tag": null
                },
                {
                    "collapsed": false,
                    "description": "",
                    "excludeFromSearch": false,
                    "font": "Arial",
                    "id": null,
                    "name": "Full",
                    "ord": 25,
                    "plainText": false,
                    "preventDeletion": false,
                    "rtl": false,
                    "size": 12,
                    "sticky": false,
                    "tag": null
                }
            ],
            "latexPost": "\\end{document}",
            "latexPre": "\\documentclass[12pt]{article}\n\\special{papersize=3in,5in}\n\\usepackage[utf8]{inputenc}\n\\usepackage{amssymb,amsmath}\n\\pagestyle{empty}\n\\setlength{\\parindent}{0in}\n\\begin{document}\n",
            "latexsvg": false,
            "name": "Cloze (overlapping)",
            "req": [
                [
                    0,
                    "any",
                    [
                        0,
                        1,
                        5,
                        6,
                        7,
                        8,
                        9,
                        10,
                        11,
                        12,
                        13,
                        14,
                        15,
                        16,
                        17,
                        18,
                        19,
                        20,
                        21,
                        22,
                        23,
                        24,
                        25
                    ]
                ]
            ],
            "sortf": 1,
            "tmpls": [
                {
                    "afmt": "<!--template\n######## CLOZE OVERLAPPER DEFAULT TEMPLATE START ########\nversion: 1.0.0\n-->\n\n<!--\nPLEASE DO NOT MODIFY THE DEFAULT TEMPLATE SECTIONS.\nAny changes between the 'template' markers will be lost once\nthe add-on updates its template.\n-->\n\n<div class=\"back\">\n    {{#Title}}<div class=\"title\">{{Title}}</div>{{/Title}}\n    <div class=\"text\">\n        <div id=\"clozed\">\n            {{cloze:Text1}}\n            {{cloze:Text2}}\n            {{cloze:Text3}}\n            {{cloze:Text4}}\n            {{cloze:Text5}}\n            {{cloze:Text6}}\n            {{cloze:Text7}}\n            {{cloze:Text8}}\n            {{cloze:Text9}}\n            {{cloze:Text10}}\n            {{cloze:Text11}}\n            {{cloze:Text12}}\n            {{cloze:Text13}}\n            {{cloze:Text14}}\n            {{cloze:Text15}}\n            {{cloze:Text16}}\n            {{cloze:Text17}}\n            {{cloze:Text18}}\n            {{cloze:Text19}}\n            {{cloze:Text20}}\n            {{cloze:Full}}\n        </div>\n        <div class=\"hidden\">\n            <div><span class=\"cloze\">[...]</span></div>\n            <div>{{Original}}</div>\n        </div>\n    </div>\n    <div class=\"extra\"><hr></div>\n    <button id=\"btn-reveal\" onclick=\"olToggle();\">Reveal all clozes</button>\n    <div class=\"hidden\"><div id=\"original\">{{Original}}</div></div>\n    <div class=\"extra\">\n        {{#Remarks}}\n        <div class=\"extra-entry\">\n            <div class=\"extra-descr\">Remarks</div><div>{{Remarks}}</div>\n        </div>\n        {{/Remarks}}\n        {{#Sources}}\n        <div class=\"extra-entry\">\n            <div class=\"extra-descr\">Sources</div><div>{{Sources}}</div>\n        </div>\n        {{/Sources}}\n    </div>\n</div>\n\n<script>\n// Remove cloze syntax from revealed hint\nvar hint = document.getElementById(\"original\");\nif (hint) {\n    var html = hint.innerHTML.replace(/\\[\\[oc(\\d+)::(.*?)(::(.*?))?\\]\\]/mg,\n                                      \"<span class='cloze'>$2</span>\");\n    hint.innerHTML = html\n};\n\n// Scroll to cloze\nfunction scrollToCloze () {\n    const cloze1 = document.getElementsByClassName(\"cloze\")[0];\n    const rect = cloze1.getBoundingClientRect();\n    const absTop = rect.top + window.pageYOffset;\n    const absBot = rect.bottom + window.pageYOffset;\n    if (absBot >= window.innerHeight) {\n        const height = rect.top - rect.bottom\n        const middle = absTop - (window.innerHeight/2) - (height/2);\n        window.scrollTo(0, middle);\n    };\n}\nif ( document.readyState === 'complete' ) {\n    setTimeout(scrollToCloze, 1);\n} else {\n    document.addEventListener('DOMContentLoaded', function() {\n        setTimeout(scrollToCloze, 1);\n    }, false);\n}\n\n\n// Reveal full list\nvar olToggle = function() {\n    var orig = document.getElementById('original');\n    var clozed = document.getElementById('clozed');\n    var origHtml = orig.innerHTML\n    orig.innerHTML = clozed.innerHTML\n    clozed.innerHTML = origHtml\n}\n</script>\n\n<!--\n######## CLOZE OVERLAPPER DEFAULT TEMPLATE END ######## */\ntemplate-->\n\n<!-- Add your customizations here: -->\n",
                    "bafmt": "",
                    "bfont": "",
                    "bqfmt": "",
                    "bsize": 0,
                    "did": null,
                    "id": null,
                    "name": "cloze-ol",
                    "ord": 0,
                    "qfmt": "<!--template\n######## CLOZE OVERLAPPER DEFAULT TEMPLATE START ########\nversion: 1.0.0\n-->\n\n<!--\nPLEASE DO NOT MODIFY THE DEFAULT TEMPLATE SECTIONS.\nAny changes between the 'template' markers will be lost once\nthe add-on updates its template.\n\nCopyright (C) 2016-2019 Aristotelis P. <https://glutanimate.com/>\n\nThe Cloze Overlapper card template is licensed under the CC BY-SA 4.0\nlicense (https://creativecommons.org/licenses/by-sa/4.0/). This only\napplies to the card template, not the contents of your notes.\n\nGet Cloze Overlapper for Anki at:\nhttps://ankiweb.net/shared/info/969733775\n-->\n\n<div class=\"front\">\n    {{#Title}}<div class=\"title\">{{Title}}</div>{{/Title}}\n    <div class=\"text\">\n        <div id=\"clozed\">\n            {{cloze:Text1}}\n            {{cloze:Text2}}\n            {{cloze:Text3}}\n            {{cloze:Text4}}\n            {{cloze:Text5}}\n            {{cloze:Text6}}\n            {{cloze:Text7}}\n            {{cloze:Text8}}\n            {{cloze:Text9}}\n            {{cloze:Text10}}\n            {{cloze:Text11}}\n            {{cloze:Text12}}\n            {{cloze:Text13}}\n            {{cloze:Text14}}\n            {{cloze:Text15}}\n            {{cloze:Text16}}\n            {{cloze:Text17}}\n            {{cloze:Text18}}\n            {{cloze:Text19}}\n            {{cloze:Text20}}\n            {{cloze:Full}}\n        </div>\n        <div class=\"hidden\">\n            <div><span class=\"cloze\">[...]</span></div>\n            <div>{{Original}}</div>\n        </div>\n    </div>\n</div>\n\n<script>\n// Scroll to cloze\nfunction scrollToCloze () {\n    const cloze1 = document.getElementsByClassName(\"cloze\")[0];\n    const rect = cloze1.getBoundingClientRect();\n    const absTop = rect.top + window.pageYOffset;\n    const absBot = rect.bottom + window.pageYOffset;\n    if (absBot >= window.innerHeight) {\n        const height = rect.top - rect.bottom\n        const middle = absTop - (window.innerHeight/2) - (height/2);\n        window.scrollTo(0, middle);\n    };\n}\nif ( document.readyState === 'complete' ) {\n    setTimeout(scrollToCloze, 1);\n} else {\n    document.addEventListener('DOMContentLoaded', function() {\n        setTimeout(scrollToCloze, 1);\n    }, false);\n}\n</script>\n\n<!--\n######## CLOZE OVERLAPPER DEFAULT TEMPLATE END ######## */\ntemplate-->\n\n<!-- Add your customizations here: -->"
                }
            ],
            "type": 1
        }
    ],
    "notes": [
        {
            "__type__": "Note",
            "fields": [
                "\\(A \\implies B\\)<br>",
                "\"If A is true, B is also true.\" Does <i>not</i>&nbsp;express any causality like \"because A is true, B is true\"."
            ],
            "guid": "wqMx<V&Y_,",
            "note_model_uuid": "2ae32340-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem1::diskmat"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "{{c1::\\( \\neg (A \\land B) \\)}} \\( \\equiv \\)&nbsp;{{c2::\\( \\neg A \\lor \\neg B \\)}}<br>",
                "de Morgan rules"
            ],
            "guid": "kfsN#[8n@)",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem1::diskmat"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "{{c1::\\( \\neg (A \\lor B) \\)&nbsp;}} \\( \\equiv \\)&nbsp;{{c2::\\( \\neg A \\land \\neg B\\)}}<br>",
                "De Morgan rules"
            ],
            "guid": "%-v5b-!x=",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem1::diskmat"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Komplexer Kehrwert: {{c1::\\( \\frac{1}{z} \\)}}&nbsp;\\( = \\)&nbsp;{{c2::\\( \\frac{x - iy}{x^2 + y^2}\\)}}<br>",
                ""
            ],
            "guid": "PK*1xpYhw8",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem1::linalg"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "What is the difference between propositional and predicate logic?",
                "propositional: only values of \\(\\{0,1\\}\\), finite<div>predicate: any values in our universe, infinite</div>"
            ],
            "guid": "z;jp`Lcv<(",
            "note_model_uuid": "2ae32340-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem1::diskmat"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "What is a predicate?",
                "A k-ary predicate on&nbsp;\\( U \\) is a function&nbsp;\\( U^k \\rightarrow \\{0,1\\}\\).<div>It's like a function that takes any number of arguments, but only returns boolean results.</div>"
            ],
            "guid": "J!|K;g5R$4",
            "note_model_uuid": "2ae32340-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem1::diskmat"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "What is a tautology?",
                "A formula F (propositional logic) is a tautology/valid if it is true for all truth combinations of the involved symbols, so if it is always true. Symbol:&nbsp;\\( \\top \\)"
            ],
            "guid": "HV{[!>wU0*",
            "note_model_uuid": "2ae32340-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem1::diskmat"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "G is a <i>logical conse</i><i>qence </i>of F. What does that mean?",
                "\\( F \\models G\\) if G is always true if F is true, but not necessarily false when F is false. (No causality!)<br>"
            ],
            "guid": "rz^&c?ddI>",
            "note_model_uuid": "2ae32340-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem1::diskmat"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Predicate logic: universe",
                "A universe is the non-empty set that we work within. Examples:&nbsp;\\( \\mathbb{N}, \\mathbb{R}, \\{ 0,1,2,3,6 \\} \\)"
            ],
            "guid": "FDfn]bHyB6",
            "note_model_uuid": "2ae32340-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem1::diskmat"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Was ist der Rang eines LGS?",
                "Die Anzahl Pivotelemente bzw. die Anzahl Zeilen, welche nicht Nullzeilen sind."
            ],
            "guid": "lG3L]2Sq+d",
            "note_model_uuid": "2ae32340-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem1::linalg"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Was ist der volle Rang eines LGS der Form&nbsp;\\(m \\times n\\)?",
                "\\( r \\le m, r \\le n\\), also ist der volle / maximale Rang \\( r = \\text{min}(m,n)\\)<br>"
            ],
            "guid": "h8vM!D=]5*",
            "note_model_uuid": "2ae32340-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem1::linalg"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Proof method: \"Composition of Implications\"",
                "Idea: If&nbsp;\\( S \\implies T \\) and&nbsp;\\( T \\implies U \\) are both true, then&nbsp;\\( S \\implies U \\) is also true."
            ],
            "guid": "tg<_s~pb{P",
            "note_model_uuid": "2ae32340-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem1::diskmat"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Proof method: \"Direct Proof of an Implication\"",
                "Direct proof of&nbsp;\\( S \\implies T \\): assume S and prove T under that assumption"
            ],
            "guid": "y)<N|W:fKf",
            "note_model_uuid": "2ae32340-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem1::diskmat"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Proof method: \"Indirect Proof of an Implication\"",
                "Indirect proof of&nbsp;\\( S \\implies T \\): Assume T is false, prove that S is false.<div><br></div><div>Follows from&nbsp;\\( (\\neg B \\to \\neg A) \\models (A \\to B) \\)</div>"
            ],
            "guid": "mW<[l@|LPN",
            "note_model_uuid": "2ae32340-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem1::diskmat"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Proof method: \"Modus Ponens\"",
                "1. Find a suitable statement&nbsp;\\(R\\)<div>2. Prove&nbsp;\\(R\\)</div><div>3. Prove&nbsp;\\(R \\implies S\\)</div>"
            ],
            "guid": "O?~Mb}~!3:",
            "note_model_uuid": "2ae32340-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem1::diskmat"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Proof method: \"Case Distinction\"",
                "1. Find a finite list&nbsp;\\( R_1, \\ldots, R_k\\) of statements (cases)<div>2. Prove that one case applies for the situation (prove one \\(R_i\\))</div><div>3. Prove&nbsp;\\( R_i \\implies S\\) for&nbsp;\\(i = 1, \\ldots, k\\)</div><div><br></div><div>Basically, show for all cases that they are correct.</div>"
            ],
            "guid": "j0f>T<R:o&",
            "note_model_uuid": "2ae32340-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem1::diskmat"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Was ist eine <b>symmetrische</b> Matrix?",
                "Eine symmetrische Matrix hat eine \"Spiegelachse\" an der Hauptdiagonale. Hauptdiagonale selber unwichtig!<div>Beispiel:</div><div>\\( \\begin{pmatrix} 0 &amp; 5 &amp; 1 \\\\ 5 &amp; 2 &amp; 4 \\\\ 1 &amp; 4 &amp; 0 \\end{pmatrix} \\)<br></div>"
            ],
            "guid": "w;_;AaM4pf",
            "note_model_uuid": "2ae32340-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem1::linalg"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Cardinality of a set",
                "The number of elements in the set, written as&nbsp;\\( |A| \\)."
            ],
            "guid": "H5-[+SLX3[",
            "note_model_uuid": "2ae32340-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem1::diskmat"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Was ist eine <b>transponierte</b> Matrix?",
                "Entlang der Hauptdiagonale gespiegelte Matrix \\(\\mathbf{A}^\\top\\), d.h.&nbsp;\\( (\\mathbf{A}^\\top)_{ij} = (\\mathbf{A})_{ji} \\)"
            ],
            "guid": "p6e6T6[HIy",
            "note_model_uuid": "2ae32340-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem1::linalg"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Was ist eine <b>konjugiert-komplexe </b>Matrix?",
                "Wenn&nbsp;\\(\\mathbf{A}\\) eine komplexe Matrix ist, dann ist&nbsp;\\(\\overline{\\mathbf{A}}\\) mit&nbsp;\\( (\\overline{\\mathbf{A}})_{ij} = \\overline{(\\mathbf{A})_{ij}}\\) die konjugiert-komplexe Matrix."
            ],
            "guid": "vlkuMD-Ica",
            "note_model_uuid": "2ae32340-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem1::linalg"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Was ist eine <b>konjugiert-transponierte</b> (auch: Hermitesch-transponierte) Matrix?",
                "\\( \\mathbf{A}^H = (\\overline{\\mathbf{A}})^\\top = \\overline{\\mathbf{A}^\\top}\\)<br>"
            ],
            "guid": "gC,90MH_~p",
            "note_model_uuid": "2ae32340-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem1::linalg"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Wann ist eine Matrix <b>Hermitesch</b>?",
                "Falls&nbsp;\\( \\mathbf{A}^H = A\\)"
            ],
            "guid": "g[av;3n%%l",
            "note_model_uuid": "2ae32340-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem1::linalg"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Wann ist eine Matrix <b>schiefsymmetrisch</b>?",
                "Falls&nbsp;\\( \\mathbf{A}^\\top = -\\mathbf{A}\\)<div><br></div><div>Beispiel:</div><div>\\( \\begin{pmatrix} 0 &amp; -3 &amp; 5 \\\\ 3 &amp; 0 &amp; -4 \\\\ -5 &amp; 4 &amp; 0 \\end{pmatrix}\\)<br></div>"
            ],
            "guid": "OB6+3`~vyx",
            "note_model_uuid": "2ae32340-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem1::linalg"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Proof method: Proof by Contradiction",
                "1. Find a suitable statement&nbsp;\\( T\\)<div>2. Prove that&nbsp;\\( T \\) is false</div><div>3. Assume that&nbsp;\\( S \\) is false and prove that&nbsp;\\( T \\) is true (-&gt; contradiction)</div>"
            ],
            "guid": "xDDC{82KOB",
            "note_model_uuid": "2ae32340-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem1::diskmat"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Proof method: Existence Proof",
                "We just want to prove that there exists a&nbsp;\\( x \\) such that a statement&nbsp;\\( S_x \\) is true. (e.g. There exists a prime number such that&nbsp;\\( n - 10\\) and&nbsp;\\( n + 10\\) are also prime.)&nbsp;<div><br></div><div><i>constructive: </i>We know the x.</div><div><i>non-constructive: </i>We know that x has to exist, but we don't know its value.</div>"
            ],
            "guid": "y+DFM]G]@{",
            "note_model_uuid": "2ae32340-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem1::diskmat"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Proof method: Pigeonhole Principle",
                "If a set of&nbsp;\\( n \\) objects is divided into&nbsp;\\( k&nbsp; &lt; n\\) sets, then at least one of the sets contains at least&nbsp;\\( \\left \\lceil{\\frac{n}{k}}\\right \\rceil\\) objects.<div><br></div><div>Informally: If there are more objects than sets, there is a set with more than one object in it.</div>"
            ],
            "guid": "uO0tm0+UFa",
            "note_model_uuid": "2ae32340-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem1::diskmat"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Proof method: Proofs by counterexample",
                "Special case of constructive existence proofs. By finding a counter example&nbsp;\\( x\\) such that&nbsp;\\(S_x\\) is not true, we can prove that&nbsp;\\( S_i \\) isn't always true."
            ],
            "guid": "ih~tka$0AQ",
            "note_model_uuid": "2ae32340-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem1::diskmat"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Wann ist eine Matrix <b>invertierbar</b>?",
                "Falls eine Matrix&nbsp;\\( \\mathbf{X} \\) existiert, so dass&nbsp;\\( \\mathbf{AX} = \\mathbf{XA} = \\mathbf{I_n}\\)<div><br></div><div>Beispiel:&nbsp;\\( \\begin{pmatrix} 1 &amp; 2 \\\\ 0 &amp; 3 \\end{pmatrix} * \\begin{pmatrix} 1 &amp; -\\frac{2}{3} \\\\ 0 &amp; \\frac{1}{3} \\end{pmatrix} = \\mathbf{I_2}\\)&nbsp;</div>"
            ],
            "guid": "v`BTz<1Q{~",
            "note_model_uuid": "2ae32340-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem1::linalg"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Was ist eine <b>reguläre</b> Matrix?",
                "Eine Matrix \\( A \\) mit Rang&nbsp;\\(A = n\\).&nbsp;<div>regulär&nbsp;\\( \\iff \\) invertierbar</div>"
            ],
            "guid": "KW-&%*&l;g",
            "note_model_uuid": "2ae32340-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem1::linalg"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "{{c1:: Inverse eines Produkts: \\((\\mathbf{AB})^{-1}\\)}} = {{c2::\\(\\mathbf{B}^{-1} \\mathbf{A}^{-1}\\)}}&nbsp;<br>",
                ""
            ],
            "guid": "u65pI6|_4#",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem1::linalg"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "A relation&nbsp;ρ on a set A is called {{c1::reflexive}} if&nbsp;{{c2::\\( a \\ \\rho \\ a\\) is true for all&nbsp;\\( a \\in A\\), i.e. if&nbsp;\\( \\text{id} \\subseteq \\rho\\).}}",
                "Example:&nbsp;\\( \\ge, \\le \\) are reflexive, while&nbsp;\\( &lt;, &gt; \\) are not."
            ],
            "guid": "f?mV5JRdT{",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem1::diskmat"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "A relation&nbsp;ρ on a set A is called {{c1::symmetric}} if&nbsp;{{c2::\\( a \\ \\rho \\ b \\iff b \\ \\rho \\ a\\) is true, i.e. if&nbsp;\\( \\rho = \\hat{\\rho}\\)}}",
                "Examples:&nbsp;\\( \\equiv_m\\), marriage"
            ],
            "guid": "yJ}kX&Y9Od",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem1::diskmat"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "A relation&nbsp;ρ on a set A is called {{c2::antisymmetric}} if&nbsp;{{c1::\\( a \\ \\rho \\ b \\wedge b \\ \\rho \\ a \\implies a = b\\) is true, i.e. if&nbsp;\\( \\rho \\cap \\hat{\\rho} \\subseteq \\text{id}\\)}}",
                "Example:&nbsp;\\( \\le, \\ge\\) and the division relation:&nbsp;\\( a \\mid b \\wedge b \\mid a \\implies a = b\\)"
            ],
            "guid": "s[dJ]w<?0N",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem1::diskmat"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "A relation is {{c1::transitive}} if&nbsp;{{c2::\\((a \\ \\rho \\ b \\wedge b \\ \\rho \\ c) \\implies a \\ \\rho \\ c \\) is true.}}",
                "Examples:&nbsp;\\( \\le, \\ge, &lt;, |, \\equiv_m\\)"
            ],
            "guid": "H!j|tU4T~6",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem1::diskmat"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "The {{c2::inverse relation}} is&nbsp;{{c1::\\( a \\ \\rho \\ b \\iff b \\ \\hat{\\rho} \\ a\\)}}.",
                "Example: Inverse of parent relation is childhood relation. Also written as&nbsp;\\( \\rho^{-1}\\)"
            ],
            "guid": "C;65zxNGcG",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem1::diskmat"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Was ist eine <b>orthogonale</b> Matrix?",
                "Für eine orthogonale Matrix gilt&nbsp;\\( \\mathbf{A^\\top A = I}_n\\), d.h. die Inverse von A ist A transponiert. Orthogonal = reell, quadratisch, regulär"
            ],
            "guid": "eGgKwc!Y>B",
            "note_model_uuid": "2ae32340-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem1::linalg"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Was ist eine <b>unitäre</b> Matrix?",
                "Für eine unitäre Matrix gilt&nbsp;\\( \\mathbf{A^H A = I}_n\\), d.h. die komplex-transponierte von A ist die Inverse von A.&nbsp;<div>Unitär = regulär &amp; quadratisch&nbsp;</div>"
            ],
            "guid": "J,}qfri4M=",
            "note_model_uuid": "2ae32340-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem1::linalg"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Gilt für zwei Matrizen&nbsp;\\( \\mathbf{A}\\) und&nbsp;\\( \\mathbf{B}\\), dass&nbsp;{{c2::\\( \\mathbf{AB} = \\mathbf{BA}\\)}}, dann {{c1::kommutieren}} diese Matrizen.&nbsp;",
                ""
            ],
            "guid": "Oc<qX9GKUZ",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem1::linalg"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Eine {{c1::Linearkombination (LK)}} der Vektoren&nbsp;\\( a_1, \\ldots, a_n\\) ist {{c2::ein Ausdruck der Form&nbsp;\\( \\alpha_1 a_1 + \\cdots + \\alpha_n a_n\\) wobei&nbsp;\\( \\alpha_1, \\ldots, \\alpha_n \\in \\mathbb{R}\\)}}",
                ""
            ],
            "guid": "xn@gm`7I_o",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem1::linalg"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Für alle Vektorpaare&nbsp;\\( \\mathbf{x,y} \\in \\mathbb{E}^n \\) gilt die Schwarzsche Ungleichung:&nbsp;{{c1::\\( | \\langle \\mathbf{x, y} \\rangle | \\le ||\\mathbf{x}|| \\ ||\\mathbf{y}||\\)}}",
                "(auch Cauchy-Schwarz-Ungleichung genannt)"
            ],
            "guid": "uo#Gn+y8bD",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem1::linalg"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Ein LGS heisst {{c1::homogen}}, wenn {{c2::die rechte Seite Null ist}}.",
                "Besitzt immer triviale Lösung (alles 0)."
            ],
            "guid": "v#FTBh.m{S",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem1::linalg"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "{{c1::Eine Gruppe}} ist eine Menge {{c1::G mit Operation&nbsp;\\( * \\)}} mit folgenden Eigenschaften:<div>{{c2::<div>- Assoziotivität:&nbsp;\\((a * b) * c = a * (b*c)\\)</div><div>- Neutrales Element existiert:&nbsp;\\( a * e = e * a = e \\)</div><div>- Inverse existiert:&nbsp;\\( a * a^{-1} = a^{-1} * a = e\\)</div>}}<br></div>",
                ""
            ],
            "guid": "y`5($Q$d37",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem1::diskmat",
                "eth::sem1::linalg"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Eine Gruppe&nbsp;\\( (G, *) \\) heisst {{c1::abelsch (auch: kommutativ)}}, falls&nbsp;\\( * \\) ausserdem&nbsp;{{c2::\\(a * b = b * a\\), also das Kommutativitätgesetz erfüllt}}.",
                "Beispiel:&nbsp;\\( (\\mathbb{K}^{m\\times n}, + ) \\)"
            ],
            "guid": "EuJL{:A/EO",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem1::linalg"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "{{c1::Ein Körper}} ist eine Menge&nbsp;{{c1::\\( \\mathbb{K}\\) mit Operationen&nbsp;\\(+ , *\\)}} mit folgenden Eigenschaften:<div>{{c2::<div>-&nbsp;\\( (\\mathbb{K}, +)\\) ist eine abelsche Gruppe</div><div>-&nbsp;\\( (\\mathbb{K} \\backslash \\{0\\}, *)\\) ist eine abelsche Gruppe</div><div>- Distributivität:&nbsp;\\( a * (b+c) = a*b + a*c\\)</div>}}<br></div>",
                "Beispiel:&nbsp;\\( \\mathbb{Q}, \\mathbb{R}\\)"
            ],
            "guid": "BG+yKyLb,^",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem1::diskmat",
                "eth::sem1::linalg"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "{{c1::Ein Vektorraum}} ist eine Menge \\( \\mathbb{V}\\) über \\( \\mathbb{K}\\), auf der {{c2::eine Addition und eine Skalarmultiplikation definiert ist.}}",
                "Beispiele:&nbsp;\\(\\mathbb{R}^n, \\mathbb{K}^{m\\times n}, P_d(\\mathbb{K})\\) (Polynome von Grad&nbsp;\\( \\le d\\))"
            ],
            "guid": "BK[{yp^]zj",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem1::linalg"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Was ist ein Unterraum?",
                "Ein Unterraum ist eine Teilmenge&nbsp;\\( U \\subseteq \\mathbb{V}\\) falls&nbsp;\\( U \\) auch die Eigenschaften eines Vektorraums hat (d.h. abgeschlossen bezüglich Vektoraddition &amp; Skalarmultiplikation). Beispiel: Ebene in&nbsp;\\(\\mathbb{R}^3\\)"
            ],
            "guid": "M`sU@`yo=O",
            "note_model_uuid": "2ae32340-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem1::linalg"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "A function is {{c1::injective (or one-to-one)}} if {{c2::for&nbsp;\\(a \\ne b\\) we have&nbsp;\\(f(a) \\ne f(b)\\), i.e. no \"collisions\"}}",
                "Example:&nbsp;\\(f(x) = x\\), counterexample:&nbsp;\\(f(x) = x^2, x \\in \\mathbb{R}\\)"
            ],
            "guid": "fd?4%T(3|z",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem1::diskmat"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "A function&nbsp;\\( f: A \\rightarrow B\\) is {{c1::surjective (or onto)}} if&nbsp;{{c2::\\( \\forall b \\ \\exists a \\ , b = f(a)\\), i.e. every value is taken}}",
                ""
            ],
            "guid": "l];xKGd{%I",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem1::diskmat"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "A function is {{c1::bijective (one-to-one correspondence)}} if it is {{c2::both injective and surjective.}}",
                ""
            ],
            "guid": "dt/TXCWYbv",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem1::diskmat"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "The {{c2::power set of a set&nbsp;\\(A\\), denoted&nbsp;\\(\\mathcal{P}(A)\\)}}, is {{c1::the set of all subsets of&nbsp;\\(A\\)}}.",
                ""
            ],
            "guid": "u3RL+}XGYF",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem1::diskmat"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "{{c1::Equivalence relation}} is a relation on a set&nbsp;\\(A\\) that is<div>{{c2::<div>* reflexive</div><div>* symmetric</div><div>* transitive</div>}}<br></div>",
                "Example:&nbsp;\\(\\equiv_m \\)"
            ],
            "guid": "vnO<ZlO~=m",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem1::diskmat"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "{{c1::A partial order}} on a set&nbsp;\\(A\\) is a relation that is<div>{{c2::<div>* reflexive</div><div>* antisymmetric</div><div>* transitive</div>}}<br></div>",
                "Examples:&nbsp;\\(\\leq, \\geq\\)"
            ],
            "guid": "s(DE`)q*(T",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem1::diskmat"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "A set together with a partial order&nbsp;\\(\\preceq\\) is called {{c1::a partially ordered set or simply poset.}}",
                "Denoted&nbsp;\\((A; \\preceq)\\)"
            ],
            "guid": "IL3~+k+|$5",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem1::diskmat"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "{{c1::An algebra (also: algebraic structure,&nbsp;\\( \\Omega\\)-algebra)}} is a pair&nbsp;\\(\\langle S, \\Omega \\rangle\\) {{c2::where S is a set and&nbsp;\\(\\Omega = (\\omega_1, \\ldots, \\omega_n)\\) is a list of operations on S.}}",
                ""
            ],
            "guid": "x/&wX)sTYn",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem1::diskmat"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "In an algebra \\(\\langle S, \\Omega \\rangle\\), how is S usually called?",
                "carrier (of the algebra)"
            ],
            "guid": "C6/[-jy07I",
            "note_model_uuid": "2ae32340-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem1::diskmat"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "{{c1::A <b>monoid</b>}}<b>&nbsp;</b>is an algebra&nbsp;{{c2::\\( \\langle M; *, e \\rangle\\) where&nbsp;\\(*\\) is associative and&nbsp;\\(e\\) is the neutral element.}}",
                "Difference to group: Inverse missing"
            ],
            "guid": "N$(b/mcC}}",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem1::diskmat"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "In a poset&nbsp;\\( ( A; \\preceq )\\),&nbsp;\\(b\\) <b>covers</b>&nbsp;\\(a\\) if&nbsp;{{c1::\\(a \\prec b\\) and there does not exist a&nbsp;\\(c\\) with&nbsp;\\(a \\prec c \\land c \\prec b \\), so no elements are between&nbsp;\\(a\\) and&nbsp;\\(b\\).}}",
                "Example: direct superior in a company"
            ],
            "guid": "Fa&qY%lL0q",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem1::diskmat"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "A poset&nbsp;\\((A; \\preceq)\\) is called {{c2::<b>totally ordered</b>&nbsp;(also: linearly ordered) by&nbsp;\\(\\preceq\\)}}&nbsp;if {{c1::any two elements of the poset are comparable.}}",
                "Example:&nbsp;\\((\\mathbb{Z}; \\ge)\\)"
            ],
            "guid": "s4qU[:Rl0m",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem1::diskmat"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Special elements in posets:&nbsp;\\((A; \\preceq)\\) is a poset, \\( S \\subseteq A\\).<div>\\(a \\in A\\) is a {{c1::<b>minimal (maximal) element</b> of&nbsp;\\(A\\)}}&nbsp;if {{c2::there exists no&nbsp;\\(b \\in A\\) with&nbsp;\\(b \\prec a\\) (\\(b \\succ a \\) )}}<br></div>",
                ""
            ],
            "guid": "F:9iVjG>$B",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem1::diskmat"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Special elements in posets:&nbsp;\\((A; \\preceq)\\) is a poset, \\( S \\subseteq A\\).<div>\\(a \\in A\\) is the {{c1::<b>least (greatest)&nbsp;element</b>&nbsp;of&nbsp;\\(A\\)}}&nbsp;if {{c2::\\(a \\preceq b\\) (\\(a \\succeq b) \\) for all&nbsp;\\(b \\in A\\)}}</div>",
                ""
            ],
            "guid": "y4s0XCy@A",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem1::diskmat"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Special elements in posets:&nbsp;\\((A; \\preceq)\\) is a poset, \\( S \\subseteq A\\).<div>\\(a \\in A\\) is a {{c1::<b>lower (upper) bound</b>&nbsp;of&nbsp;\\(S\\)}}&nbsp;if {{c2::\\(b \\preceq a\\) (\\(b \\succeq a) \\) for all&nbsp;\\(b \\in S\\)}}</div>",
                ""
            ],
            "guid": "D`/l5%ja#*",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem1::diskmat"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Special elements in posets:&nbsp;\\((A; \\preceq)\\) is a poset, \\( S \\subseteq A\\).<div>\\(a \\in A\\) is the {{c1::<b>greatest&nbsp;lower (least upper) bound</b>&nbsp;of&nbsp;\\(S\\)}}&nbsp;if {{c2::\\(a\\) is the greatest (least) element of the set of all lower (upper) bounds of&nbsp;\\(S\\). }}</div>",
                ""
            ],
            "guid": "yF7brLJQxE",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem1::diskmat"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "A poset&nbsp;\\((A;\\preceq)\\) is <b>well-ordered </b>if {{c1::it is totally ordered and every non-empty subset has a least element.}}",
                "Every totally ordered finite poset&nbsp;\\(\\rightarrow\\) well-ordered<div>Infinite example: \\((N; \\le)\\)<br>Infinite counterexample&nbsp;\\((\\mathbb{Z}; \\le)\\)</div>"
            ],
            "guid": "B/hV<WXGve",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem1::diskmat"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "\\((A;\\preceq)\\) is a poset. If&nbsp;\\(\\{a,b\\}\\) have a {{c2::greatest lower bound}}, then it is called the {{c1::<b>meet </b>of&nbsp;\\(a\\) and&nbsp;\\(b\\) (also denoted&nbsp;\\(a \\land b\\)).}}<br>",
                ""
            ],
            "guid": "Gw~6}3;R1[",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem1::diskmat"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "\\((A;\\preceq)\\) is a poset. If&nbsp;\\(\\{a,b\\}\\) have a {{c2::least upper bound}}, then it is called the {{c1::<b>join&nbsp;</b>of&nbsp;\\(a\\) and&nbsp;\\(b\\) (also denoted&nbsp;\\(a \\lor b\\)).}}",
                ""
            ],
            "guid": "otWm4$@-u8",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem1::diskmat"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "A poset in which {{c2::every pair of elements has a meet and a join}} is called a {{c1::lattice}}.",
                "Examples:&nbsp;\\((\\mathbb{N}; \\le), \\ (\\mathcal{P}(S); \\subseteq)\\)"
            ],
            "guid": "I+oWgzW/bK",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem1::diskmat"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "The {{c2::subset&nbsp;\\(f(A)\\) of&nbsp;\\(B\\)}} is called the {{c1::<b>image</b> (also: range) of&nbsp;\\(f\\)}}&nbsp;and is also denoted&nbsp;\\(Im(f)\\).",
                "Example:&nbsp;\\(f(x) = x^2\\), the range of&nbsp;\\(f\\) is&nbsp;\\(\\mathbb{R}^{\\ge 0}\\)"
            ],
            "guid": "udpmH`a[=Y",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem1::diskmat"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "For a subset&nbsp;\\(T\\) of&nbsp;\\(B\\), the {{c1::<b>preimage </b>(in Linalg: Urbild) of&nbsp;\\(T\\), denoted&nbsp;\\(f^{-1}(T)\\)}}, is {{c2::the set of values in&nbsp;\\(A\\) that map into&nbsp;\\(T\\).}}",
                "Example:&nbsp;\\(f(x) = x^2\\), the preimage of&nbsp;\\([4,9]\\) is&nbsp;\\([-3,-2] \\cup [2,3]\\)"
            ],
            "guid": "E6{tZ_2cBJ",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem1::diskmat"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Two sets&nbsp;\\(A, B\\) are {{c1::<b>equinumerous </b>(denoted&nbsp;\\(A \\sim B\\))}}&nbsp;if {{c2::there exists a bijection&nbsp;\\(A \\rightarrow B\\).}}",
                "Example:&nbsp;\\(f: \\mathbb{N} \\rightarrow \\mathbb{Z} = (-1)^n \\lceil n/2 \\rceil\\)"
            ],
            "guid": "Lfk_~v/e2Q",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem1::diskmat"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "The set&nbsp;\\(B\\) {{c1::<b>dominates</b> (denoted&nbsp;\\(A \\preceq B\\))}} if {{c2::there exists an injective function&nbsp;\\(A \\rightarrow B\\).}}",
                "Example:&nbsp;\\(f(x): \\mathbb{N} \\rightarrow \\mathbb{R} = x\\)"
            ],
            "guid": "IhW:&11Iid",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem1::diskmat"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "A set&nbsp;\\(A\\) is called <b>countable </b>if {{c1::\\(A \\preceq \\mathbb{N}\\)}}, and <b>uncountable</b> otherwise.",
                ""
            ],
            "guid": "L,+=h7*qew",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem1::diskmat"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Is the set&nbsp;\\(\\{0,1\\}^*\\) (finite binary sequences) countable?",
                "Yes. A possible injection to \\(\\mathbb{N}\\) is to add a \"1\" at the beginning of each sequence and interpret it in binary."
            ],
            "guid": "lLOgs0U=^u",
            "note_model_uuid": "2ae32340-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem1::diskmat"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Is the set&nbsp;\\(\\{0,1\\}^\\infty\\) (semi-infinite binary sequences) countable?",
                "No. This can be proven by Cantor's diagonalization argument."
            ],
            "guid": "K(.[83d?32",
            "note_model_uuid": "2ae32340-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem1::diskmat"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "\\(a \\mid b\\) means that {{c1::\\(a\\) divides \\(b\\), that is, there exists a&nbsp;\\(c \\in \\mathbb{Z}\\) such that&nbsp;\\(b = ac\\)}}<br>",
                "\\(\\forall a \\ne 0 \\rightarrow a \\mid 0\\) and&nbsp;\\(\\forall a \\quad 1 \\mid a \\land -1 \\mid a\\)<br>"
            ],
            "guid": "Am`UxH.Oyx",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem1::diskmat"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "{{c1::\\(a \\mod m\\)}} is the same as&nbsp;{{c2::\\(R_m(a)\\)}}<br>",
                ""
            ],
            "guid": "AFt:;I:*/e",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem1::diskmat"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "\\(a&nbsp; \\equiv_m b \\stackrel{\\text{def}}{\\iff}\\)&nbsp;{{c1::\\(m \\mid (a-b)\\)}}<br>",
                ""
            ],
            "guid": "K4Ll=rR|5+",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem1::diskmat"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "The equation&nbsp;\\(ax \\equiv_m 1\\) has a unique solution&nbsp;\\(x \\in \\mathbb{Z}_m\\) if and only if&nbsp;{{c1::\\(\\gcd(a,m) = 1\\).}} This \\(x\\) is then called the multiplicative inverse of&nbsp;\\(a \\mod m\\).",
                ""
            ],
            "guid": "Fh4R-ccO%^",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem1::diskmat"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "The direct product of&nbsp;\\(n\\) groups&nbsp;\\(\\langle G_1; *_1 \\rangle, \\ldots, \\langle G_n; *_n \\rangle\\) is {{c1::the algebra&nbsp;\\(\\langle G_1 \\times \\cdots \\times G_n; \\star\\rangle\\)}}. The operation&nbsp;\\(\\star\\) is component-wise.",
                ""
            ],
            "guid": "gyJPNg>H@A",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem1::diskmat"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "A subgroup \\(H\\) of a group&nbsp;\\(G\\) is {{c1::a subset&nbsp;\\(H \\subseteq G\\) which is a group in itself (closed with respect to all operations).}}",
                "Trivial subgroups:&nbsp;\\(\\{e\\}, G\\)"
            ],
            "guid": "vt:Wqzxx@@",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem1::diskmat"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "The order of an element&nbsp;\\(a\\) in a group (denoted&nbsp;\\(\\text{ord}(a)\\)) is {{c1::the smallest&nbsp;\\(m \\ge 1\\) such that&nbsp;\\(a^m = e\\). If such an&nbsp;\\(m\\) does not exist,&nbsp;\\(\\text{ord}(a) = \\infty\\)}}",
                "\\(\\text{ord}(e) = 1\\) in any group<br>"
            ],
            "guid": "l]y7c-.I]L",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem1::diskmat"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "For a finite group&nbsp;\\(G\\), we call&nbsp;\\(|G|\\) the {{c1::order of&nbsp;\\(G\\)}}.",
                ""
            ],
            "guid": "o1a(R_.1]i",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem1::diskmat"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "A group&nbsp;\\(G = \\langle g \\rangle\\) generated by an element&nbsp;\\(g \\in G\\) is called {{c1::cyclic}}, and&nbsp;\\(g\\) is called {{c1::a <b>generator</b> of&nbsp;\\(G\\)}}.",
                ""
            ],
            "guid": "LFnfauD_]7",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem1::diskmat"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "If&nbsp;\\(G\\) is a finite group and&nbsp;\\(H\\) is a subgroup, then {{c1::the order of&nbsp;\\(H\\) divides the order of&nbsp;\\(G\\), i.e.&nbsp;\\(|H|\\) divides&nbsp;\\(|G|\\).}}",
                ""
            ],
            "guid": "PLw>#T/cN`",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem1::diskmat"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "The group&nbsp;\\(\\mathbb{Z}^*_m\\) contains all numbers&nbsp;\\(a \\in \\mathbb{Z}_m\\) that are {{c1::coprime to&nbsp;\\(m\\), that is,&nbsp;\\(\\gcd(a,m) = 1\\).}}",
                ""
            ],
            "guid": "j5a}0B}`Qc",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem1::diskmat"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "The Euler function&nbsp;\\(\\varphi: \\mathbb{Z}^+ \\rightarrow \\mathbb{Z}^+\\) is defined as {{c1::the cardinality of&nbsp;\\(\\mathbb{Z}^*_m\\).}}",
                "Example:&nbsp;\\(\\mathbb{Z}_{18}^* = \\{1,5,7,11,13,17\\}\\), so&nbsp;\\(\\varphi(18) = 6\\)"
            ],
            "guid": "hU:-C(Wl{v",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem1::diskmat"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "In graph theory, a {{c1::walk (<i>Weg</i>)}} is a {{c2::series of connected vertices}}.",
                ""
            ],
            "guid": "mBd+!cdp:/",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem1::and"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "In graph theory, a {{c2::path (<i>Pfad</i>)}} is a {{c1::walk without repeated vertices}}.",
                ""
            ],
            "guid": "z4Nw/I#?J^",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem1::and"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "In graph theory, a {{c2::closed walk (<i>Zyklus</i>)}} is a {{c1::walk where&nbsp;\\(v_0 = v_n\\) (start = end)}}.",
                ""
            ],
            "guid": "oSKGiZq$<Q",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem1::and"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "In graph theory, a {{c2::cycle (<i>Kreis</i>)}} is a {{c1::closed walk without repeated vertices}}.",
                ""
            ],
            "guid": "rzX#2=8CU?",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem1::and"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "In graph theory, an {{c2::Eulerian trail (misleadingly also called Eulerian path)}} is a {{c1::walk that visits each edge of the graph once}}.",
                ""
            ],
            "guid": "mhrX@w|*.`",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem1::and"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "In graph theory, a {{c2::Hamilton path}} is a {{c1::path that visits each vertex of the graph once}}.",
                ""
            ],
            "guid": "Gt4c53(i;/",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem1::and"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "{{c1::A ring&nbsp;\\(\\langle R, +, -, 0, \\cdot, 1 \\rangle\\)}} is an algebra with the properties that<br>{{c2::* \\(\\langle R, +, -, 0 \\rangle\\) is a commutative group}}<div>{{c3::*&nbsp;\\(\\langle R, \\cdot, 1 \\rangle\\) is a monoid}}<div>{{c4::*&nbsp;\\( a(b+c) = (ab) + (ac), (b+c)a = (ba) + (ca)\\) (left and right distributive laws)}}</div></div>",
                "Examples:&nbsp;\\(\\mathbb{Z}, \\mathbb{R}\\)"
            ],
            "guid": "s[Y-0E4#sz",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem1::diskmat"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "A ring is called {{c1::commutative}} if&nbsp;{{c2::\\(ab = ba\\).}}",
                ""
            ],
            "guid": "Pq[u}J3gBK",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem1::diskmat"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "An element \\(u\\) of a ring is called a {{c1::unit}} if&nbsp;\\(u\\) {{c2::is invertible, so&nbsp;\\(uu^{-1} = u^{-1}u = 1\\).}}",
                "Example: Units of&nbsp;\\(\\mathbb{Z}\\) are&nbsp;\\(-1, 1\\)"
            ],
            "guid": "QS$4YdV.SM",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem1::diskmat"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "The set of units of \\(R\\) is denoted by&nbsp;{{c1::\\(R^*\\)}}",
                ""
            ],
            "guid": "H+<9!8uj.@",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem1::diskmat"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "An {{c1::integral domain}} is a {{c2::commutative ring without zerodivisors (\\( \\forall a \\ \\forall b \\quad ab = 0 \\rightarrow a = 0 \\lor b = 0\\) ).}}",
                "Examples:&nbsp;\\(\\mathbb{Z}, \\mathbb{R}\\)<div>Counterexample:&nbsp;\\(\\mathbb{Z}_m, m\\) not prime</div>"
            ],
            "guid": "I1&*hbv&c,",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem1::diskmat"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "A {{c1::field (<i>Körper</i>)}}&nbsp;is {{c2::a nontrivial commutative ring&nbsp;\\(F\\) in which every nonzero element is a unit, so&nbsp;\\(F^* = F \\backslash \\{0\\}\\)}}",
                "Example:&nbsp;\\(\\mathbb{R}\\), but not&nbsp;\\(\\mathbb{Z}\\)"
            ],
            "guid": "J!)tsK,]3<",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem1::diskmat"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "\\(\\mathbb{Z}_p\\) is a field if and only if&nbsp;{{c1::\\(p\\) is prime.}}<br>",
                ""
            ],
            "guid": "l.<t])5Z&B",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem1::diskmat"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "A {{c1::root (also: zero)}} of&nbsp;\\(a(x) \\in \\mathbb{R}[x]\\) is {{c2::an element&nbsp;\\(y \\in \\mathbb{R}\\) for which&nbsp;\\(a(y) = 0\\).}}",
                "Example: \\(x^4 + x^3 + x + 1\\) in GF(2)\\([x]\\) has root 1."
            ],
            "guid": "m?%j+<a6[I",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem1::diskmat"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "In a field F,&nbsp;\\(y \\in F\\) is a root of&nbsp;\\(a(x)\\) if and only if&nbsp;{{c1::\\(x - y\\) divides&nbsp;\\(a(x)\\).}}",
                ""
            ],
            "guid": "v[{@yotn>*",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem1::diskmat"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "The idea of {{c2::Universal Instantiation}} is that {{c1::if a statement is true for all elements, it is also true for a particular element, so&nbsp;\\(\\forall x F \\models F[x/t]\\).}}",
                "Example: All elements in&nbsp;\\(\\mathbb{R}\\) are invertible. Thus, 2 is also invertible."
            ],
            "guid": "G)?a@}6F-&",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem1::diskmat"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Predicate logic: A formula in {{c2::prenex form}} has {{c1::all quantifiers in front and none afterwards.&nbsp;}}",
                ""
            ],
            "guid": "E8|8/h)Gv3",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem1::diskmat"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "<div style=\"text-align: center;\"><b>DFS</b></div><div><br></div><div><b>Runtime</b>: {{c1::\\( \\mathcal{O}(|E| + |V|) \\)}}</div><div><br></div><div><b>Approach</b>: {{c2::Explore as far as possible along each branch before backtracking. Potentially keep track of pre- / post-numbers to make edge classifications.}}</div><div><br></div><div><b>Uses</b>: {{c3::Detect cycles (if backward edge), path finding, topological sorting, test if bipartite, mazes, ...}}</div>",
                ""
            ],
            "guid": "BRmyi3>lm%",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem1::and"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "<div style=\"text-align: center;\"><b>BFS</b></div><div><br></div><div><b>Runtime</b>: {{c1::\\( \\mathcal{O}(|E| + |V|) \\)}}</div><div><br></div><div><b>Approach</b>: {{c2::First go through all direct successors of an edge, then move to a level deeper.}}</div><div><br></div><div><b>Uses</b>: {{c3::Shortest path in unweighted graphs, cycle detection, test if graph is bipartite, path finding}}</div>",
                ""
            ],
            "guid": "u%cN;v|jjQ",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem1::and"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "<div style=\"text-align: center;\"><b>Dijkstra</b></div><div><br></div><div><b>Runtime</b>: {{c1::\\( \\mathcal{O}((|E| + |V|) \\cdot \\log|V|) \\)}}</div><div><br></div><div><b>Approach</b>: {{c2::Put the starting node into the queue, take it out, and set the distance for all adjacent nodes and put them into the queue. Repeat, update distances and only put nodes into the queue if they weren't visited before.}}</div><div><br></div><div><b>Uses</b>: {{c3::Minimal-cost paths in non-negative weighted directed graphs}}</div>",
                ""
            ],
            "guid": "eGQw>urFaH",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem1::and"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "<div style=\"text-align: center;\"><b>Bellman-Ford</b></div><div style=\"text-align: center; \"><br></div><div><b>Runtime</b>: {{c1::\\( \\mathcal{O}(|E| \\cdot |V|)\\)}}</div><div><br></div><div><b>Approach</b>: {{c2::Initiate all distances with  \\(\\infty\\) . Then go&nbsp;\\(|V| - 1\\)&nbsp;times through every edge, and test for all (u,v) in E if&nbsp;\\(\\text{dist}[v] &gt; \\text{dist}[u] + w(u,v)\\). If yes, update the distance. If after&nbsp;\\(|V| - 1\\)&nbsp;iterations an edge can still be relaxed (in a last iteration), then there exists a negative cycle.}}</div><div><br></div><div><b>Uses</b>: {{c3::Detect negative cycles, find minimal-cost paths in weighted graphs with negative weights}}</div>",
                ""
            ],
            "guid": "j#w5w>dS6",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem1::and"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "<div style=\"text-align: center;\"><b>Boruvka</b></div><div><br></div><div><b>Runtime</b>: {{c1::\\( \\mathcal{O}((|E| + |V|) \\cdot \\log |V|)\\)}}</div><div><br></div><div><b>Approach</b>: {{c2::Add all vertices to the set of components (so every vertex has its own component). As long as the size of the components set is greater than 1, connect each component to the one with the cheapest edge.}}</div><div><br></div><div><b>Uses</b>: {{c3::Find MST in weighted, undirected graph}}</div>",
                ""
            ],
            "guid": "F^nhYx>fXl",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem1::and"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "<div style=\"text-align: center;\"><b>Kruskal</b></div><div><br></div><div><b>Runtime</b>: {{c1::\\( \\mathcal{O}(|E| \\log |E| + |E|  \\log|V|)\\)}}</div><div><br></div><div><b>Approach</b>: {{c2::Sort the edges by weight and add them one-by-one as long as they are in different components (which can be checked efficiently with Union Find).}}</div><div><br></div><div><b>Uses</b>: {{c3::Find MST in weighted, undirected graph}}</div>",
                ""
            ],
            "guid": "jcougdQ#0G",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem1::and"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "<div style=\"text-align: center;\"><b>Prim</b></div><div><br></div><div><b>Runtime</b>: {{c1::\\( \\mathcal{O}((|E| + |V|) \\cdot \\log|V|)\\)}}</div><div><br></div><div><b>Approach</b>: {{c2::We start at a given vertex. To this subtree we add one-by-one the cheapest edge connecting the subtree to another component until all vertices are connected. The implementation is very similar to Dijkstra.}}</div><div><br></div><div><b>Uses</b>: {{c3::Find MST in weighted, undirected graph}}</div>",
                ""
            ],
            "guid": "cKo%p6:M08",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem1::and"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "<div style=\"text-align: center;\"><b>Floyd-Warshall</b></div><div style=\"text-align: center; \"><br></div><div><b>Runtime</b>: {{c1::\\( \\mathcal{O}(|V|^3)\\)}}</div><div><br></div><div><b>Approach</b>: {{c2::3D DP: It is based on a triple-nested <code>for</code>-loop with the following recursion:&nbsp;\\(d[u][v] = \\min(d[u][v], d[u][i] + d[i][v])\\).}}</div><div><br></div><div><b>Uses</b>: {{c3::All-to-all shortest path in directed graph without negative cycles.}}</div>",
                ""
            ],
            "guid": "nfdJ7OmBdJ",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem1::and"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "<div style=\"text-align: center;\"><b>Johnson</b></div><div><br></div><div><b>Runtime</b>: {{c1::\\( \\mathcal{O}(|E| \\cdot |V| + |V|^2 \\cdot \\log|V|)\\)}}</div><div><br></div><div><b>Approach</b>: {{c2::Idea: Make all edges positive and then perform Dijkstra  \\(n\\)&nbsp;times. To do this, create an additional node that is linked to each node with edge weight 0 and store for each node a height&nbsp;\\(h(x)\\), where&nbsp;\\(h(x)\\)&nbsp;is equal to the shortest path from the new node n to the node x (might be negative). The new weights are calculated with&nbsp;\\(w'(u,v) = w(u,v) + h(u) - h(v)\\).}}</div><div><br></div><div><b>Uses</b>: {{c3::All-to-all shortest paths in directed graphs without negative cycles.}}</div>",
                ""
            ],
            "guid": "KD23pBO,?%",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem1::and"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "A graph&nbsp;\\(G = (V,E)\\) is k-connected (k-zusammenhängend) if<span style=\"color: var(--text-fg);\">&nbsp;</span>{{c1::you need to remove at least \\(k\\) vertices from the graph such that it becomes disconnected.}}",
                "<div><img src=\"Screenshot_20210223_144154.png\"></div><div>This graph is 2-connected. We need to remove 2 vertices to make the graph disconnected.</div>"
            ],
            "guid": "I+_KFb>Q>~",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem2::anw"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "A graph&nbsp;\\(G=(V,E)\\) is&nbsp;\\(k\\)<i>-edge-connected</i> (k-kanten-zusammenhängend) if {{c1::we need to remove at least&nbsp;\\(k\\) edges from&nbsp;\\(G\\) such that it becomes disconnected.}}",
                "<img src=\"Screenshot_20210223_144154.png\"><div>This graph is 2-edge-connected, we must remove 2 edges to make it disconnected.</div>"
            ],
            "guid": "i02xT{m[u@",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem2::anw"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "A \\(u\\)-\\(v\\)-separator is {{c1::a set&nbsp;\\(X\\) of vertices such that&nbsp;\\(u, v\\) are in different components after we remove these edges from&nbsp;\\(G\\), so in&nbsp;\\(G[V \\ \\backslash \\ X]\\).}}",
                ""
            ],
            "guid": "otRi.YaJGs",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem2::anw"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "\\(G = (V,E)\\) is&nbsp;\\(k\\)-connected iff&nbsp;\\(|V| \\ge k + 1\\) (otherwise not sensible) and every&nbsp;\\(u\\)-\\(v\\)-separator has {{c1::size&nbsp;\\(|X| \\ge k\\).}}&nbsp;",
                ""
            ],
            "guid": "HQJNl-v7.]",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem2::anw"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "(Menger's theorem)<div>{{c2::Every&nbsp;\\(u\\)-\\(v\\)-separator \\(X\\) has size&nbsp;\\(|X| \\ge k\\)&nbsp;}} \\(\\iff\\) {{c1::There exist&nbsp;\\(k\\) internally vertex-disjoint paths (i.e. they share no vertices) between&nbsp;\\(u, v\\).}}</div>",
                "(generalized by the max-flow min-cut theorem)"
            ],
            "guid": "I5[Jb@Xj@A",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem2::anw"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "atomic",
                "A statement / instruction is (truly) atomic if it is executed in a single, non-interruptible step by the CPU"
            ],
            "guid": "v7f%/A{M=P",
            "note_model_uuid": "2ae32340-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem2::pprog"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Amdahls's law",
                "Specifies the maximum amount of speedup that can be achieved for a program with a given sequential part. The pessimistic view on scalability."
            ],
            "guid": "fW6vNsAIF@",
            "note_model_uuid": "2ae32340-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem2::pprog"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "bad interleaving",
                "An interleaving that yields a problematic or otherwise undesirable computation, e.g. an incorrect result, a deadlock or non-deterministic output"
            ],
            "guid": "B,U=NeH8lD",
            "note_model_uuid": "2ae32340-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem2::pprog"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "busy waiting",
                "A thread busily / actively waits, e.g. by spinning in a loop, for a condition to be true. (as opposed to sleeping)<br>Trade-off: busy waiting uses up CPU time, whereas blocking may cause additional context switches."
            ],
            "guid": "ep4hX3V75z",
            "note_model_uuid": "2ae32340-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem2::pprog"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "concurrency",
                "Dealing with multiple things at the same time (as opposed to parallelism: doing multiple things at the same time). Reasoning about and managing shared resources. Often used interchangeably with parallelism."
            ],
            "guid": "tNKkN;So<b",
            "note_model_uuid": "2ae32340-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem2::pprog"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "context switch",
                "Switching a CPU from one computation to another. Usually for switching between processes, but can also refer to switching between threads. Incurs a <i>context switch overhead </i>(that is large for processes, small for threads)"
            ],
            "guid": "xi3)iirhy^",
            "note_model_uuid": "2ae32340-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem2::pprog"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "critical section",
                "A piece of code that may only be executed by one thread at a time to guarantee correctness."
            ],
            "guid": "waLUJVjSl|",
            "note_model_uuid": "2ae32340-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem2::pprog"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "data race",
                "A program has a data race if, at any point, a memory location could be written from one thread, whilst concurrently being read or written from another thread. (often used interchangably with <i>race condition</i>)"
            ],
            "guid": "qe-)By[okY",
            "note_model_uuid": "2ae32340-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem2::pprog"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "divide and conquer style parallelism",
                "Solve problems by recursively solving smaller sub-problems and combining them. You can solve the sub-problems in separate threads to parallelize effectively. These sub-problems can often be efficiently scheduled (less variety in task load)."
            ],
            "guid": "IunhX`@ZF(",
            "note_model_uuid": "2ae32340-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem2::pprog"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "deadlock",
                "Circular waiting/blocking (no instructions are executed/CPU time used) between treads, so that the system cannot make any progress anymore."
            ],
            "guid": "nA|^.F37<4",
            "note_model_uuid": "2ae32340-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem2::pprog"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Gustafson's law",
                "Specifies how much more work can be performed for a given amount of time by adding more processors. The optimistic view on scalability."
            ],
            "guid": "KlT9w/b`CV",
            "note_model_uuid": "2ae32340-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem2::pprog"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "instruction level parallelism (ILP)",
                "CPU-internal parallelisation of independent instructions, with the goal of improving performance by increasing utilisation of the functional units."
            ],
            "guid": "bV^hiT:sop",
            "note_model_uuid": "2ae32340-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem2::pprog"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "latency",
                "Evaluation metric for pipelines. Latency measures the time a pipeline needs to process a given work item (e.g. a CPU instruction)"
            ],
            "guid": "Q,UQm@hk;V",
            "note_model_uuid": "2ae32340-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem2::pprog"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "livelock",
                "A situation in which all threads starve by repeteadly trying to enter a critical section, but never succeeding. Similar to a deadlock - no real progress in the system."
            ],
            "guid": "k{}yV:WWvI",
            "note_model_uuid": "2ae32340-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem2::pprog"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "liveness property",
                "Property of a system: \"something good eventually happens\". Can only be violated in infinite time. Infinite loops &amp; starvation are typical safety properties."
            ],
            "guid": "sL]Am0)T`i",
            "note_model_uuid": "2ae32340-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem2::pprog"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "lock",
                "A lock on a token/resource. Usually provided by a programming language to enforce <i>mutual exclusion</i>&nbsp;by protecting a <i>critical section</i>. A lock can be acquired by a thread and is then held until it is released.<br><br>In Java, every object can be used as a lock (intrinsic/monitor lock), but the JDK also provides more complex locks."
            ],
            "guid": "DcR$)Evg~t",
            "note_model_uuid": "2ae32340-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem2::pprog"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "lockout",
                "Needlessly preventing a thread from entering a critical section"
            ],
            "guid": "qm}NGr(#B}",
            "note_model_uuid": "2ae32340-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem2::pprog"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "mutual exclusion",
                "Prevention of multiple threads being in a critical section at the same time"
            ],
            "guid": "oseToL3TeV",
            "note_model_uuid": "2ae32340-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem2::pprog"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "multiprocessing (multitasking)",
                "Concurrent execution of multiple tasks/processes, typically refers to parallelism on the operating system level"
            ],
            "guid": "vO|2sXvm})",
            "note_model_uuid": "2ae32340-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem2::pprog"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "multithreading",
                "Threads running in parallel"
            ],
            "guid": "I`eU-j3Vn3",
            "note_model_uuid": "2ae32340-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem2::pprog"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "parallelism",
                "Doing multiple things at the same time (as opposed to concurrency: dealing with multiple things at the same time)"
            ],
            "guid": "nW1ttfR]Mm",
            "note_model_uuid": "2ae32340-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem2::pprog"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "parallel execution time,&nbsp;\\(T_p, T_\\infty\\)",
                "\\(T_p\\): time required to perform some work on&nbsp;\\(p\\) processors<br>\\(T_\\infty\\): time required for some work if we had infinite processors (total runtime only depends on sequential part)"
            ],
            "guid": "zr1N.MJUr2",
            "note_model_uuid": "2ae32340-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem2::pprog"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "process",
                "Independently running instance of a program/application, typically on the OS level. Similar to a thread, but usually more heavy-weight and encapsulated in memory."
            ],
            "guid": "c#>9A1#}TE",
            "note_model_uuid": "2ae32340-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem2::pprog"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "process context",
                "All state associated with a process, including CPU state (registers, program counter), program state (stack, heap, resource handles) and additional management information.&nbsp;<br><br>A thread also has (much smaller) context"
            ],
            "guid": "D8q>=36%Xh",
            "note_model_uuid": "2ae32340-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem2::pprog"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "race condition",
                "A program has a race condition if at any point its results / output may change if events happen in different order. (events could be scheduling, network delays, etc.)<br><br>Often used interchangeable with <i>data race.</i>"
            ],
            "guid": "iU#P8_#>$?",
            "note_model_uuid": "2ae32340-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem2::pprog"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "A lock is reentrant if {{c1::it can be acquired / released multiple times by the same thread.}}",
                "If a lock is non-reentrant, when trying to acquire it again exceptions or other problems might occur."
            ],
            "guid": "x.1xQeEkwI",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem2::pprog"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "What are typical safety properties?",
                "Exceptions, absence of deadlocks and mutual exclusions"
            ],
            "guid": "G.8/H>kz9@",
            "note_model_uuid": "2ae32340-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem2::pprog"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "sequential execution time,&nbsp;\\(T_1\\)",
                "\\(T_1\\): The time that is required to perform some work on a single processor"
            ],
            "guid": "uPu(kKz^jE",
            "note_model_uuid": "2ae32340-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem2::pprog"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "sequential cutoff",
                "When decomposing work, stop splitting tasks at a given problem size (sequential cutoff). Problem size should be significantly larger than scheduling overhead"
            ],
            "guid": "B|K`S5Su[7",
            "note_model_uuid": "2ae32340-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem2::pprog"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "sequential part",
                "Part of a given program that can't be executed in parallel. Limits the maximum speedup."
            ],
            "guid": "xyGOskQ=9/",
            "note_model_uuid": "2ae32340-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem2::pprog"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "scheduler",
                "management process that peforms context switches and selects next processes / threads to run<br><br>Schedulers usually not give any guarantees when / how they act"
            ],
            "guid": "Bo57)^peCt",
            "note_model_uuid": "2ae32340-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem2::pprog"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "scheduling overhead",
                "extra time spent by the system or the algorithm to distribute work on multiple threads/tasks"
            ],
            "guid": "e/b+GC=!,H",
            "note_model_uuid": "2ae32340-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem2::pprog"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "shared resource",
                "any resource (memory location, input / output) shared by multiple threads"
            ],
            "guid": "uvdCn`E,JW",
            "note_model_uuid": "2ae32340-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem2::pprog"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "speedup,&nbsp;\\(S_p\\)",
                "\\(S_p\\): How much faster a program runs using&nbsp;\\(p\\) processors, compared to the sequential version.&nbsp;\\(S_p = \\frac{T_1}{T_p}\\)<br><br>Speedup is an absolute value; the relative value is <i>efficiency</i>"
            ],
            "guid": "bM%<```ZBo",
            "note_model_uuid": "2ae32340-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem2::pprog"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "A thread <b>starves</b> if {{c1::it can never enter a critical section}}.",
                ""
            ],
            "guid": "p~(sx=d6fm",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem2::pprog"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "synchronisation",
                "Some form of orchestration via threads, usually for preventing bad interleavings"
            ],
            "guid": "kMnITSSgxf",
            "note_model_uuid": "2ae32340-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem2::pprog"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "synchronised (keyword)",
                "Java keyword enforcing mutual exclusion for a critical section via some object's intrinsic lock"
            ],
            "guid": "OF>~=d#&y`",
            "note_model_uuid": "2ae32340-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem2::pprog"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "task graph, work, span",
                "Graph (DAG) created by nodes (tasks) and edges (spawns, joins).<br>Work (\\(T_1\\)) in a task graph: sum of the cost of all nodes in the graph<br>Span (\\(T_\\infty\\)) in a task graph: Critical path / height of the task graph"
            ],
            "guid": "fo!fM%L&J[",
            "note_model_uuid": "2ae32340-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem2::pprog"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "throughput",
                "evaluation metric for pipelines. amount of work that can be done by a pipeline in a given period of time"
            ],
            "guid": "t$.=MTMX45",
            "note_model_uuid": "2ae32340-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem2::pprog"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "thread",
                "Independent unit of computation that executes a piece of code. The concept of threads exists on<br>* hardware (CPU)<br>* OS<br>* programming language<br>level."
            ],
            "guid": "O&F2LhK=Sk",
            "note_model_uuid": "2ae32340-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem2::pprog"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "thread mapping",
                "How a Java thread maps to an OS thread.&nbsp;<br>Native threading: JVM thread one-to-one mapped to OS thread<br>Green threading: JVM threads multiple-to-one mapped to OS thread"
            ],
            "guid": "O`)xvU;%Bx",
            "note_model_uuid": "2ae32340-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem2::pprog"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "vectorisation",
                "special machine code instructions to perform an operation to a bigger chunk of data (SIMD)"
            ],
            "guid": "LS0cM;&5.4",
            "note_model_uuid": "2ae32340-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem2::pprog"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "work partitioning",
                "splitting a program into smaller tasks for parallelization. Ideally, every task performs work independently"
            ],
            "guid": "Ay?M}n.H=}",
            "note_model_uuid": "2ae32340-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem2::pprog"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "{{c3::Die geometrische Reihe}} konvergiert für&nbsp;\\(|q| &lt; 1\\):<br><br>{{c1::\\(\\sum_{k=0}^\\infty q^k\\)}}&nbsp;\\(=\\)&nbsp;{{c2::\\(\\frac{1}{1-q}\\)}}",
                ""
            ],
            "guid": "OAs;P;T5($",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem2::ana1"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Die harmonische Reihe&nbsp;\\(\\sum_{n=1}^\\infty \\frac{1}{n}\\) {{c1::divergiert.}}",
                ""
            ],
            "guid": "jrE@caEJjB",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem2::ana1"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "In a one-hot encoding, all {{c1::values are low (0) except one (1)}}.",
                "Advantage: reduces next-state logic"
            ],
            "guid": "jyA.%y9m|t",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem2::ddca"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "In a binary encoding, {{c1::each state is represented as a binary number.}}",
                "Advantage: very compact, reduces amount of Flip-Flops used for state<br>Disadvantage: other logic more complicated"
            ],
            "guid": "F%=1XZ8Sft",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem2::ddca"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "In an Output encoding, {{c1::outputs are directly accessible in state encoding.}}",
                "Example: 001, 010, 100, 110 for a (green, yellow, red) traffic light<br>Advantage: minimizes output logic"
            ],
            "guid": "J1p>lcN.5J",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem2::ddca"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "What is the big limitation of Output Encodings for FSMs?",
                "They only work for Moore machines, but not for Mealy ones."
            ],
            "guid": "g%ZC^dHG&H",
            "note_model_uuid": "2ae32340-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem2::ddca"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "interlocking",
                "Detecting dependencies between instructions for pipelining. Can be done in hardware or software"
            ],
            "guid": "kKc%J$N{jA",
            "note_model_uuid": "2ae32340-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem2::ddca"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "R-type instructions operate on {{c1::three registers}}",
                "Examples: add, and, slt"
            ],
            "guid": "q$(ZtVs!sX",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem2::ddca"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "I-type instructions operate on {{c1::two registers and a 16-bit immediate.}}",
                "Examples: addi, lw, beq"
            ],
            "guid": "JH$r/N4_i*",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem2::ddca"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "J-type instructions operate on {{c1::one 26-bit immediate.}}",
                "Examples: j, jal"
            ],
            "guid": "LI$<DaWL.L",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem2::ddca"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "In Boolean algebra, \\(\\bullet\\) means {{c1::AND}}.",
                ""
            ],
            "guid": "dOUJuy3CA[",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem2::ddca"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "In Boolean algebra,&nbsp;\\(+\\) means {{c1::OR}}.",
                ""
            ],
            "guid": "B}Rj(zK0.6",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem2::ddca"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Ein Graph ist \\(k\\)-zusammenhängend, wenn {{c1::wir mindestens&nbsp;\\(k\\) Knoten löschen müssen, damit er nicht mehr zusammenhängend ist.}}",
                ""
            ],
            "guid": "m.z>*Vj;0`",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem2::anw"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Wenn ein Graph&nbsp;\\(k\\)-zusammenhängend ist, ist er auch&nbsp;{{c1::\\(k-1\\)-zusammenhängend.}}",
                ""
            ],
            "guid": "wYNIl$6{KE",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem2::anw"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Es gibt&nbsp;{{c1::\\(n^k\\)}} Möglichkeiten,&nbsp;\\(k\\) Elemente <b>geordnet mit Zurücklegen</b> aus einer Menge mit \\(n\\) zu ziehen.",
                ""
            ],
            "guid": "x$+[>$U=Wl",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem2::anw"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Es gibt&nbsp;{{c1::\\(\\frac{n!}{(n-k)!}\\)}} Möglichkeiten,&nbsp;\\(k\\) Elemente&nbsp;<b>geordnet ohne Zurücklegen</b>&nbsp;aus einer Menge mit \\(n\\) Elementen zu ziehen.",
                ""
            ],
            "guid": "o+>y]EAyv&",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem2::anw"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Es gibt&nbsp;{{c1::\\(\\binom{n+k-1}{k}\\)}} Möglichkeiten,&nbsp;\\(k\\) Elemente <b>ungeordnet mit Zurücklegen</b>&nbsp;aus einer Menge mit \\(n\\) Elementen zu ziehen.",
                ""
            ],
            "guid": "HTQOog++F3",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem2::anw"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Es gibt&nbsp;{{c1::\\(\\binom{n}{k}\\)}} Möglichkeiten,&nbsp;\\(k\\) Elemente&nbsp;<b>ungeordnet&nbsp;ohne Zurücklegen</b>&nbsp;aus einer Menge mit \\(n\\) Elementen zu ziehen.",
                ""
            ],
            "guid": "L@~[[nY^&#",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem2::anw"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Ein induzierter Teilgraph entsteht, wenn man aus einem Graph {{c1::nur Knoten &amp; dessen verbundene Kanten entfernt.&nbsp;}} Man darf also nicht {{c1::nur Kanten entfernen}}.",
                ""
            ],
            "guid": "NK^)ecusK7",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem2::anw"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Eine {{c2::endliche, nichtleere Menge&nbsp;\\(\\Sigma\\)}} heisst {{c1::Alphabet}}.",
                ""
            ],
            "guid": "maqkZ_mRL^",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem3::ti"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Das leere Wort in einem Alphabet&nbsp;\\(\\Sigma\\) wird mit {{c1::\\(\\lambda\\)}} bezeichnet.",
                ""
            ],
            "guid": "gXd7.Yb9Uo",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem3::ti"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "The order of the differential equation is {{c1::the order of the highest derivative in the equation}}.",
                ""
            ],
            "guid": "j$!`:5QFF1",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem3::ana2"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "A differential equation is called <i>homogenous</i>&nbsp;if {{c1::its right hand side is 0}}.",
                ""
            ],
            "guid": "b4S$^<QF#/",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem3::ana2"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Ein deterministischer endlicher Automat (EA) ist ein Tupel&nbsp;\\(M = (Q, \\Sigma, \\delta, q_0, F)\\) wobei<br><ul><li>Q {{c1::eine endliche Menge von Zuständen}}</li><li>\\(\\Sigma\\) {{c2::ein Eingabealphabet}}<br></li><li>\\(q_0 \\in Q\\) {{c3::der Anfangszustand}}<br></li><li>\\(\\delta : Q \\times \\Sigma \\to Q\\) {{c4::die Übergangsfunktion}}</li><li>\\(F \\subseteq Q\\) {{c5::die Menge der akzeptierenden Zustände}}</li></ul>ist.",
                ""
            ],
            "guid": "O]s3MO,?Y_",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem3::ti"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "\\(\\delta(q,a) = p\\) bedeutet, {{c1::dass&nbsp;\\(M\\) in den Zustand&nbsp;\\(p\\) übergeht, falls&nbsp;\\(M\\) im Zustand&nbsp;\\(q\\) das Symbol&nbsp;\\(a\\) gelesen hat}}",
                ""
            ],
            "guid": "xeSD2qTh6x",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem3::ti"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Die Klasse der <b>regulären</b> Sprachen&nbsp;\\(\\mathcal{L}_{EA}\\) ist die Klasse der Sprachen, {{c1::welche von einem endlichen Automaten akzeptiert werden.}}",
                "Jede Sprache&nbsp;\\(L \\in \\mathcal{L}_{EA}\\) wird <b>regulär</b> genannt."
            ],
            "guid": "(1/Qvg]Xr",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem3::ti"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "A useful equation for avoiding cancellation is&nbsp;\\(a - b = \\)&nbsp;{{c1::\\(\\frac{a^2 - b^2}{a+b}\\)}}",
                ""
            ],
            "guid": "FCP0iDPrPM",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem3::numcs"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "A useful equation for avoiding cancellation is&nbsp;\\(\\log a - \\log b = \\)&nbsp;{{c1::\\(\\log \\frac{a}{b}\\)}}",
                ""
            ],
            "guid": "J|7tI:*3X~",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem3::numcs"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "A trap is {{c1::an intentional synchronous exception}}.",
                "Examples: syscalls, special instructions"
            ],
            "guid": "bkd.wM:Z2)",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem3::spca"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "A fault is an {{c1::unintential but potentially recoverable synchronous}} exception.",
                "Examples: page faults, floating point exceptions"
            ],
            "guid": "bU`YK(6JD3",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem3::spca"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "An abort is an {{c1::unintentional and unrecoverable}} exception.",
                "Example: division by 0, machine check"
            ],
            "guid": "EG0;aXhy.p",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem3::spca"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "An interrupt is an {{c1::asychronous signal from an I/O device}}.",
                ""
            ],
            "guid": "nC7Np_X*?[",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem3::spca"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "A page fault happens when {{c1::a user accesses a location in memory that is not in physical memory}}.",
                "Afterwards: returns to faulting instruction"
            ],
            "guid": "Ec9<`O#pu`",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem3::spca"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "If an interrupt is maskable, we can {{c1::choose to ignore or delay it}}.",
                ""
            ],
            "guid": ",5u*`n3pb",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem3::spca"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "IOMMU stands for {{c1::I/O Memory Management Unit}}.",
                ""
            ],
            "guid": "c*)gXQM;/x",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem3::spca"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "SAT =&nbsp;{{c1::\\(\\{\\Phi \\mid \\Phi \\) ist eine erfüllbare Formel in KNF\\(\\}\\) }}",
                "== Satisfiability"
            ],
            "guid": "ma``5@}g5!",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem3::ti"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "CLIQUE =&nbsp;{{c1::\\(\\{(G,k) \\mid G \\) ist ein ungerichteter Graph, der eine&nbsp;\\(k\\)-Clique enthält&nbsp;\\(\\}\\)}}",
                ""
            ],
            "guid": "N}5$B~v>B`",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem3::ti"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Eine&nbsp;\\(k\\)-Clique in einem Graphen ist {{c1::ein Subset an Knoten der Grösse \\(k\\), welche alle paarweise verbunden sind.}}",
                ""
            ],
            "guid": "hBv?,]U<hO",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem3::ti"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "VC =&nbsp;{{c1::\\(\\{(G,k) \\mid G\\) ist ein Graph mit Knotenüberdeckung der Grösse höchstens&nbsp;\\(k \\}\\)}}",
                ""
            ],
            "guid": "HdT~;:=bS>",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem3::ti"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "The TLB ({{c1::Translation Lookaside Buffer}}) is a {{c1::cache for mapping virtual page numbers to physical page numbers.}}",
                ""
            ],
            "guid": "lemIxrNw-J",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem3::spca"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "PTE stands for {{c1::Page Table Entry.}}",
                ""
            ],
            "guid": "iu+k%(lt#L",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem3::spca"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "\\(L_U = \\)&nbsp;{{c1::\\(\\{\\text{Kod}(M)\\#w \\mid w \\in \\{0,1\\}^* \\text{ und M akzeptiert } w\\}\\)}}",
                ""
            ],
            "guid": "C%bj;|h7KI",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem3::ti"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "\\(L_H = \\) {{c1::\\(\\{\\text{Kod}(M)\\# x \\mid x \\in \\{0,1\\}^*\\)&nbsp; und M hält auf \\(x\\}\\)}}",
                ""
            ],
            "guid": "E7o[D?o[Rp",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem3::ti"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "\\(L_{\\text{empty}} =\\) {{c1::\\(\\{\\text{Kod}(M) \\mid L(M) = \\varnothing \\}\\)}}",
                ""
            ],
            "guid": "nw`V)k:X;(",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem3::ti"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "\\(L_{EQ} =\\)&nbsp;{{c1::\\(\\{\\text{Kod}(M)\\#\\text{Kod}(\\bar{M}) \\mid L(M) = L(\\bar{M})\\}\\)}}",
                ""
            ],
            "guid": "Gy&l~&[T$h",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem3::ti"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "\\(L_{H,\\lambda} =\\)&nbsp;{{c1::\\(\\{\\text{Kod}(M) \\mid M \\text{ hält auf } \\lambda \\}\\)}}",
                ""
            ],
            "guid": "x@yx*7fr{}",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem3::ti"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Der Satz von Cook besagt, dass {{c1::SAT NP-vollständig ist.}}",
                ""
            ],
            "guid": "rb>u/2<`S]",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": []
        },
        {
            "__type__": "Note",
            "fields": [
                "Eine Grammatik ist eine Typ-3-Grammatik (<b>regulär</b>), falls {{c1::\\(\\forall (\\alpha,\\beta) \\in P: \\alpha \\in \\Sigma_N, \\beta \\in \\Sigma_T^* \\times \\Sigma_N \\cup \\Sigma_T^*\\).}}",
                "d.h. nur ein Nichtterminal und Terminale nur als Prefix"
            ],
            "guid": "sY00nMVq,]",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem3::ti"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Eine Grammatik ist eine Typ-2-Grammatik (<b>kontextfrei</b>), falls&nbsp;{{c1::\\(\\forall (\\alpha, \\beta) \\in P: \\alpha \\in \\Sigma_N, \\beta \\in (\\Sigma_N \\cup \\Sigma_T)^*\\).}}",
                ""
            ],
            "guid": "t/ki)fCFZ`",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem3::ti"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Eine Grammatik ist eine Typ-1-Grammatik (<b>kontextsensitiv</b>), falls&nbsp;{{c1::\\(\\forall (\\alpha, \\beta) \\in P: |\\alpha| \\le |\\beta|\\).}}",
                "d.h. kann nicht \"schrumpfen\""
            ],
            "guid": "st8gpJ{6.5",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem3::ti"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Der Satz von Rice besagt, dass {{c1::jedes semantisch nichttriviale Entscheidungsproblem über Turingmaschinen unentscheidbar ist.}}",
                "semantisch: unabhängig von Struktur der TM<br>nichttrivial: mindestens 1 aber nicht alle TM sind in der Sprache"
            ],
            "guid": "F<DaUVTC>X",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem3::ti"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Eine Sprache&nbsp;\\(L\\) ist NP-schwer, wenn {{c1::alle Sprachen in NP in polynomieller Zeit&nbsp;auf&nbsp;\\(L\\) reduziert werden können.}}",
                ""
            ],
            "guid": "dX|8rH#t|C",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": []
        },
        {
            "__type__": "Note",
            "fields": [
                "Eine Sprache&nbsp;\\(L\\) ist NP-vollständig, falls&nbsp;{{c1::\\(L \\in\\) NP und&nbsp;\\(L\\) NP-schwer ist.}}",
                "z.B. SAT"
            ],
            "guid": "AmB39:CR8:",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": []
        },
        {
            "__type__": "Note",
            "fields": [
                "Was ist das Nominalskalenniveau?",
                "Niedrigstes Skalenniveau, nur Klassifikation zulässig."
            ],
            "guid": "zA0fV^yC,x",
            "note_model_uuid": "2ae32340-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem4::wus"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Was ist das Ordinalskalenniveau?",
                "Skala mit Ordnung, aber Abstände sind unbedeutend."
            ],
            "guid": "F4x~P$3G=2",
            "note_model_uuid": "2ae32340-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem4::wus"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Was ist das Intervallskalenniveau?",
                "Metrische (d.h. gleiche Abstände) Skala ohne Nullpunkt"
            ],
            "guid": "Ow05$=:qu?",
            "note_model_uuid": "2ae32340-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem4::wus"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Was ist das Verhältnisskalenniveau?",
                "Metrische Skala mit Nullpunkt"
            ],
            "guid": "j&G==.^./d",
            "note_model_uuid": "2ae32340-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem4::wus"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "A compilation unit in C is roughly {{c1::a source file plus all of its includes.}}",
                ""
            ],
            "guid": "Oot<diX(:.",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem3::spca"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "What is the difference between coherence and consistency in multiprocessor systems?",
                "coherence: same values in cache<br>consistency: same order of changes"
            ],
            "guid": "JKlLb#{0L;",
            "note_model_uuid": "2ae32340-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem3::spca"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "<i>Referential transparency </i>means that {{c1::an expression always evaluates to the same value in every context}}.",
                ""
            ],
            "guid": "k(/Gu0354D",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem4::fmfp"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "ACK",
                "acknowledgment",
                "used in many network protocols to confirm the receipt of data"
            ],
            "guid": "sWxgNPT{ee",
            "note_model_uuid": "2ada207e-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem4::cn"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "AIMD",
                "additive increase, multiplicative decrease",
                "algorithm used by congestion-control algorithms to reach an efficient and fair bandwidth allocation"
            ],
            "guid": "sn(YVPAp|;",
            "note_model_uuid": "2ada207e-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem4::cn"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "AP",
                "access point",
                "device to provide WiFi connectivity"
            ],
            "guid": "vUI3=bE7tN",
            "note_model_uuid": "2ada207e-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem4::cn"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "API",
                "application programming interface",
                "interface that defines the interactions between different applications"
            ],
            "guid": "Fx+)=.T_@]",
            "note_model_uuid": "2ada207e-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem4::cn"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "ARP",
                "Address Resolution Protocol",
                "translates between IP and MAC addresses"
            ],
            "guid": "ikOi!tXsrX",
            "note_model_uuid": "2ada207e-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem4::cn"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "ARQ",
                "automatic repeat request",
                "strategy to handle errors in data transmission"
            ],
            "guid": "vQ#fYfZiv$",
            "note_model_uuid": "2ada207e-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem4::cn"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "AS",
                "autonomous system",
                "independent network that interconnects with others to form the Internet"
            ],
            "guid": "DVM!A*Q%4",
            "note_model_uuid": "2ada207e-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem4::cn"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "BCP",
                "best current practice",
                "rules and recommendations for the application of protocols"
            ],
            "guid": "L(R7:@ekm.",
            "note_model_uuid": "2ada207e-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem4::cn"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "BEB",
                "binary exponential backoff",
                "approach to double waiting time after each consecutive collision"
            ],
            "guid": "M.a/<o+#yA",
            "note_model_uuid": "2ada207e-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem4::cn"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "BGP",
                "Border Gateway Protocol",
                "today's de-facto standard inter-domain routing protocol (path-vector protocol)"
            ],
            "guid": "f3#@+Yk8+0",
            "note_model_uuid": "2ada207e-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem4::cn"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "CDN",
                "content distribution (or delivery) network",
                "distributed network of data centers and caches to deliver content to users with low latency"
            ],
            "guid": "NG[[Ew}S;?",
            "note_model_uuid": "2ada207e-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem4::cn"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "CRC",
                "cyclic redundancy check",
                "error-detection mechanism"
            ],
            "guid": "QPPdK!*fjV",
            "note_model_uuid": "2ada207e-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem4::cn"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "CSMA",
                "carrier-sense multiple access",
                "protocol that listens for other transmissions before sending data"
            ],
            "guid": "A4_R}Lj?3w",
            "note_model_uuid": "2ada207e-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem4::cn"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "CSMA/CD",
                "CSMA with collision detection",
                "additionally to CSMA check for collisions while sending"
            ],
            "guid": "DNM<L.7{D.",
            "note_model_uuid": "2ada207e-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem4::cn"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "CTS",
                "clear to send",
                "confirmation to send data in MACA"
            ],
            "guid": "F?=76r|7kr",
            "note_model_uuid": "2ada207e-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem4::cn"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "CWND",
                "congestion window",
                "maximum amount of data in flight to not overload the network"
            ],
            "guid": "jG#8V+uriO",
            "note_model_uuid": "2ada207e-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem4::cn"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "DHCP",
                "Dynamic Host Configuration Protocol",
                "protocol for automatically configuring IP hosts"
            ],
            "guid": "J^U0r(MjH8",
            "note_model_uuid": "2ada207e-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem4::cn"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "DNS",
                "Domain Name System",
                "hierarchical system mapping names to IP addresses and other data"
            ],
            "guid": "dFHi@msiZ@",
            "note_model_uuid": "2ada207e-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem4::cn"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "DoS",
                "denial of service",
                "type of attack where an attacker deteriorates service for legitimate users"
            ],
            "guid": "Ai]Ouo7(*!",
            "note_model_uuid": "2ada207e-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem4::cn"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "DSL",
                "digital subscriber line",
                "technology to transmit digital data over telephone lines"
            ],
            "guid": "OpC3RTFGe>",
            "note_model_uuid": "2ada207e-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem4::cn"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "DV",
                "distance vector",
                "one of two main approaches to intra-domain routing based on distributed Bellman-Ford"
            ],
            "guid": "bKdA<2|)8i",
            "note_model_uuid": "2ada207e-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem4::cn"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "ECMP",
                "equal-cost multi path",
                "approach to use multiple paths simultaneously when they have equal cost"
            ],
            "guid": "tR>MyA,t`2",
            "note_model_uuid": "2ada207e-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem4::cn"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "FDM",
                "frequency-division multiplexing",
                "one of two main types of sharing bandwidth"
            ],
            "guid": "i|OR%`>_bD",
            "note_model_uuid": "2ada207e-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem4::cn"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Gbps",
                "gigabit per second",
                "unit to measure network bandwidth (see also bps, kbps, Mbps)"
            ],
            "guid": "d1LPO+_-oh",
            "note_model_uuid": "2ada207e-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem4::cn"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "HTML",
                "HyperText Markup Language",
                "markup language for documents, primarily used for websites"
            ],
            "guid": "zDd}5STT96",
            "note_model_uuid": "2ada207e-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem4::cn"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "HTTP",
                "Hypertext Transfer Protocol",
                "application-layer protocol used (among others) for web browsing"
            ],
            "guid": "lon?cYS5jT",
            "note_model_uuid": "2ada207e-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem4::cn"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "ICMP",
                "Internet Control Message Protocol",
                "protocol to provide error and diagnostic information for IP"
            ],
            "guid": "g}JO~p3BH@",
            "note_model_uuid": "2ada207e-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem4::cn"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "IETF",
                "Internet Engineering Task Force",
                "standards organization which develops and Internet standards"
            ],
            "guid": "DBeU2$w&hX",
            "note_model_uuid": "2ada207e-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem4::cn"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "IGP",
                "interior gateway protocol",
                "intra-domain routing protocol"
            ],
            "guid": "u_N^IbqK.8",
            "note_model_uuid": "2ada207e-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem4::cn"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "IP",
                "Internet Protocol",
                "today's de-facto standard network-layer protocol"
            ],
            "guid": "JKF^G_oGn9",
            "note_model_uuid": "2ada207e-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem4::cn"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "ISM",
                "industrial, scientific, and medical",
                "unlicensed part of the wireless frequency spectrum"
            ],
            "guid": "L/2ULvwp&b",
            "note_model_uuid": "2ada207e-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem4::cn"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "ISP",
                "Internet service provider",
                "company that provides internet connectivity"
            ],
            "guid": "JWx;W#H&@,",
            "note_model_uuid": "2ada207e-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem4::cn"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "IS-IS",
                "Intermediate System to Intermediate System",
                "one of the two most common intra-domain routing protocols (link-state protocol)"
            ],
            "guid": "v:[m!Xehq$",
            "note_model_uuid": "2ada207e-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem4::cn"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "IXP",
                "Internet exchange point",
                "location where many ASes interconnect"
            ],
            "guid": "OZ|]CUm>f,",
            "note_model_uuid": "2ada207e-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem4::cn"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "LAN",
                "local area network",
                "small network within a household or organization"
            ],
            "guid": "uhTje%}K(i",
            "note_model_uuid": "2ada207e-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem4::cn"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "LDPC",
                "low-density parity-check",
                "type of error-correcting code"
            ],
            "guid": "IgI9$:yTxq",
            "note_model_uuid": "2ada207e-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem4::cn"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "LP",
                "linear program(ming)",
                "approach for optimization problems with linear constraints and objectives"
            ],
            "guid": "ndOZD!=q{L",
            "note_model_uuid": "2ada207e-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem4::cn"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "LS",
                "link state",
                "one of two main approaches to intra-domain routing based on flooding and Dijkstra"
            ],
            "guid": "zKL}k=o6F:",
            "note_model_uuid": "2ada207e-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem4::cn"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "LSP",
                "link-state packet",
                "local topology information flooded in a LS routing protocol"
            ],
            "guid": "t#/y5~aC$1",
            "note_model_uuid": "2ada207e-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem4::cn"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "MACA",
                "Multiple Access with Collision Avoidance",
                "protocol for wireless communication to mitigate issues with exposed and hidden terminals"
            ],
            "guid": "g#a=TtF;,y",
            "note_model_uuid": "2ada207e-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem4::cn"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "MitM",
                "man in the middle",
                "type of attack where an attacker inserts themselves into the communication of two parties"
            ],
            "guid": "o=@((uIr6e",
            "note_model_uuid": "2ada207e-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem4::cn"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "MPLS",
                "Multiprotocol Label Switching",
                "virtual-circuit protocol between link and network layer"
            ],
            "guid": "emnv=UhSvh",
            "note_model_uuid": "2ada207e-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem4::cn"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "MSS",
                "maximum segment size",
                "maximum size of a transport-layer payload"
            ],
            "guid": "qJX3WM/L*S",
            "note_model_uuid": "2ada207e-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem4::cn"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "MTU",
                "maximum transmission unit",
                "maximum size of a network-layer packet (for Ethernet: 1500 bytes)"
            ],
            "guid": "cOPs4M5u]m",
            "note_model_uuid": "2ada207e-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem4::cn"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "NAT",
                "network address translation",
                "system to replace IP address and port of packets at the network layer"
            ],
            "guid": "Qc=JMeO|K%",
            "note_model_uuid": "2ada207e-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem4::cn"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "NDP",
                "Neighbor Discovery Protocol",
                "protocol that provides ARP and DHCP functionality for IPv6"
            ],
            "guid": "Hb(XXgadf,",
            "note_model_uuid": "2ada207e-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem4::cn"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "NIC",
                "network interface card",
                "hardware component that connects a computer to the network"
            ],
            "guid": "N^,a_s~8KS",
            "note_model_uuid": "2ada207e-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem4::cn"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "OFDM",
                "orthogonal frequency-division multiplexing",
                "type of FDM to carry data in parallel"
            ],
            "guid": "PzEuiNqDFw",
            "note_model_uuid": "2ada207e-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem4::cn"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "OSPF",
                "Open Shortest Path First",
                "one of the two most common intra-domain routing protocols (link-state protocol)"
            ],
            "guid": "qQR9)!gkaN",
            "note_model_uuid": "2ada207e-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem4::cn"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "PPP",
                "Point-to-Point Protocol",
                "link-layer framing protocol"
            ],
            "guid": "Owv5]cIjEm",
            "note_model_uuid": "2ada207e-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem4::cn"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "RFC",
                "request for comment",
                "standards document, mainly published by IETF"
            ],
            "guid": "yo/ACo_uh;",
            "note_model_uuid": "2ada207e-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem4::cn"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "RIP",
                "Routing Information Protocol",
                "routing protocol in the early Internet"
            ],
            "guid": "F{dSqot,k4",
            "note_model_uuid": "2ada207e-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem4::cn"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "ROA",
                "route origin authorization",
                "certificate within RPKI to originate a certain IP prefix"
            ],
            "guid": "B1XTu2h{U3",
            "note_model_uuid": "2ada207e-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem4::cn"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "RPKI",
                "Resource Public Key Infrastructure",
                "hierarchy of resource certificates to mitigate BGP hijacks"
            ],
            "guid": "PwL}hnzKF+",
            "note_model_uuid": "2ada207e-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem4::cn"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "RTS",
                "request to send",
                "request to send data in MACA"
            ],
            "guid": "PbW0T$hdpc",
            "note_model_uuid": "2ada207e-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem4::cn"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "RTT",
                "round-trip time",
                "two-way latency of a connection"
            ],
            "guid": "oKN]CK~4T>",
            "note_model_uuid": "2ada207e-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem4::cn"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "RWND",
                "receiving window",
                "maximum amount of data in flight to not overload the receiver"
            ],
            "guid": "jpzUaLb}T?",
            "note_model_uuid": "2ada207e-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem4::cn"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "TCAM",
                "ternary content-addressable memory",
                "specialized hardware for longest-prefix matching"
            ],
            "guid": "l?=(![se8d",
            "note_model_uuid": "2ada207e-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem4::cn"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "TCP",
                "Transmission Control Protocol",
                "transport-layer protocol providing reliable stream transport"
            ],
            "guid": "3[{XeItrg",
            "note_model_uuid": "2ada207e-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem4::cn"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "TDM",
                "time-division multiplexing",
                "one of two main types of sharing bandwidth"
            ],
            "guid": "yP7=KZ_y}I",
            "note_model_uuid": "2ada207e-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem4::cn"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "TLD",
                "top level domain",
                "highest DNS hierarchy"
            ],
            "guid": "7w@C$+K70",
            "note_model_uuid": "2ada207e-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem4::cn"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "TLS",
                "transport-layer security",
                "security protocol building on TCP (*not relevant for this lecture*)"
            ],
            "guid": "xF~%Bvn&sg",
            "note_model_uuid": "2ada207e-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem4::cn"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "TTL",
                "time to live",
                "used in several protocols to define the validity of data or packets"
            ],
            "guid": "uY/+=~X,/|",
            "note_model_uuid": "2ada207e-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem4::cn"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "UDP",
                "User Datagram Protocol",
                "transport-layer protocol providing *un*reliable datagram transport"
            ],
            "guid": "G6?>]4H3t]",
            "note_model_uuid": "2ada207e-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem4::cn"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "URL",
                "Uniform Resource Locator",
                "reference to a web resource"
            ],
            "guid": "m{4KX{G|9$",
            "note_model_uuid": "2ada207e-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem4::cn"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "VC",
                "virtual circuit",
                "one of two main networking models"
            ],
            "guid": "p<vUxNt.Jf",
            "note_model_uuid": "2ada207e-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem4::cn"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "VoIP",
                "voice over IP",
                "technologies for voice communication over the Internet"
            ],
            "guid": "cM@CoeVf5?",
            "note_model_uuid": "2ada207e-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem4::cn"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "MAC (in the context of \"MAC address\")",
                "media access control",
                "part of the link layer; often used in \"MAC address\" for link-layer addresses"
            ],
            "guid": "O`-A?+3?/",
            "note_model_uuid": "2ada207e-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem4::cn"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "BDP",
                "bandwidth-delay product",
                "product of bandwidth and delay; measures amount of data in flight"
            ],
            "guid": "u~2Z0+jA>Z",
            "note_model_uuid": "2ada207e-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem4::cn"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "A Candidate Key is {{c1::the minimal set of fields that identifies each tuple in a relation uniquely.}}",
                ""
            ],
            "guid": "C[BU|b<B5v",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem4::dmdb"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "A Primary Key is {{c1::a chosen candidate key.}}<br>",
                "intutitively: unique identifier for data row"
            ],
            "guid": "sXbQ&Fe48.",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem4::dmdb"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "In Relational Algebra, the&nbsp;\\(\\sigma\\) operator means {{c1::Selection, so basically WHERE.}}",
                "e.g.&nbsp;\\(\\sigma_{price&gt;100}\\)"
            ],
            "guid": "oPdA>lNf,k",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem4::dmdb"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "In Relational Algebra, the&nbsp;\\(\\prod\\) operator means {{c1::Projection, so we select a subset of columns.}}",
                "e.g.&nbsp;\\(\\prod_{name,price}\\langle table \\rangle\\)"
            ],
            "guid": "JRBc]Z)OTu",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem4::dmdb"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "In Relational Algebra, the&nbsp;\\(\\rho\\) operator means {{c1::Renaming, so we change the name of the attributes.}}",
                ""
            ],
            "guid": "Hm!T4~r(8#",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem4::dmdb"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "In Relational Algebra, the&nbsp;\\(\\bowtie\\) operator means {{c1::Natural Join, so join on all common attributes.}}",
                "e.g. Customer&nbsp;\\(\\bowtie\\) Purchase"
            ],
            "guid": "K?9tQE7Tz8",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem4::dmdb"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "In TCP congestion control, <i>slow start</i> is {{c1::a phase in which we enlarge the CWND by 1 per received ACK.}}",
                "If all packets make it, this leads to a doubling of the CWND per RTT!"
            ],
            "guid": "kH>F},njo;",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem4::cn"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "In TCP congestion control, a <i>timeout</i> causes the CWND to {{c1::be reset to 1.}}",
                ""
            ],
            "guid": "i|#OK[j/MH",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem4::cn"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "In TCP congestion control, fast recovery causes CWND {{c1::to be halved.}}",
                ""
            ],
            "guid": "pZf]x$+2:S",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem4::cn"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "The Karn/Partridge-Algorithm estimates {{c1::Round Trip Times for setting good timeouts}}.",
                ""
            ],
            "guid": "Jy(nh2@i+B",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem4::cn"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "The Jacobson/Karels algorithm is an improvement over the {{c1::Karn/Partridge}} algorithm.",
                ""
            ],
            "guid": "s4OE}22i?,",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem4::cn"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "The loopback address in IPv6 is {{c1::⠶1/128.}}",
                ""
            ],
            "guid": "L3C~r!;%H#",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem4::cn"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "\"Happy Eyeballs\" is a networking algorithm that says that {{c1::clients should try both IPv4 and IPv6, but prefer an IPv6 connection to a server if available.}}",
                ""
            ],
            "guid": "FC?_@*D~T3",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem4::cn"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "The 4 goals of reliable transfer are:<br><ul><li>{{c1::Correctness}}</li><li>{{c2::Timeliness}}</li><li>{{c3::Efficiency}}</li><li>{{c4::Fairness}}</li></ul>",
                ""
            ],
            "guid": "n&?@7Mh9T>",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem4::cn"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "A reliable transport design is correct if&nbsp;{{c1::a packet is always resent if the previous packet was lost/corrupted.}}",
                ""
            ],
            "guid": "de5mYAM@HC",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem4::cn"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "To download a file with curl, use {{c1::<pre>curl -O</pre>}}",
                ""
            ],
            "guid": "u^R$XY$~W?",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": []
        },
        {
            "__type__": "Note",
            "fields": [
                "In an OS, a trampoline is a {{c1::part of the memory that is at the same address in both the user and kernel page tables.}}",
                ""
            ],
            "guid": "F2[du1bMu;",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": []
        },
        {
            "__type__": "Note",
            "fields": [
                "The Operating System is defined as the body of software that<br><ul><li>{{c1::Multiplexes hardware resources}}</li><li>{{c2::Abstracts the hardware away}}</li><li>{{c3::Protects programs from each other}}</li></ul>",
                ""
            ],
            "guid": "AReK9",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem5::compsys"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "The three roles of an OS are to be {{c1::<ul><li>Referee</li><li>Illusionist</li><li>Glue</li>}}<br></ul>",
                ""
            ],
            "guid": "EsKaK",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem5::compsys"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "A<b> name&nbsp;</b>is an {{c1::identifier for an object in a system}}.",
                ""
            ],
            "guid": "l6y93",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem5::compsys"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "A&nbsp;<b>binding</b>&nbsp;is an {{c1::association of a name to an object}}.",
                ""
            ],
            "guid": "_3dwF",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem5::compsys"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "A&nbsp;<b>context</b>&nbsp;is a {{c1::set of bindings}}. Also known as {{c1::<b>namespace</b> or <b>name scope</b>}}.",
                ""
            ],
            "guid": "Gj]cE",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem5::compsys"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "<b>Resolution </b>is {{c1::the process of taking a name + context and finding the object bound to the name in that context}}.",
                "The bound object could also be a new context."
            ],
            "guid": "{IP/B",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem5::compsys"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "A <b>naming network&nbsp;</b>is a {{c1::directed graph where nodes are either contexts or objects, and the edges are bindings}}.",
                ""
            ],
            "guid": "gMD>H",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem5::compsys"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "A <b>pathname&nbsp;</b>is a {{c1::ordered list of names (called&nbsp;<i>path components</i>)&nbsp;that specify a path in a naming network}}.",
                "A UNIX filename is&nbsp;a pathname."
            ],
            "guid": "9CO?E",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem5::compsys"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "The central nervous system (CNS) is made up of {{c1::the brain and the spinal cord.}}",
                ""
            ],
            "guid": "rR1E|Rtd{i",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::electives::neuroinf"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "The cerebral cortex is the {{c1::superficial gray matter of the brain hemispheres.}}",
                ""
            ],
            "guid": "5lzrcfSCS",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::electives::neuroinf"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "The <i>corpus callosum&nbsp;</i>is {{c1::the large midline fiber bundle connecting the two brain hemispheres.}}",
                "In German sometimes: <i>Balken</i>"
            ],
            "guid": "P?oxC{*aqn",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::electives::neuroinf"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "<i>Gray matter</i>&nbsp;is a term describing {{c1::regions of the CNS with many neuronal cell bodies, dendrites and synapses.}}",
                "It's gray because there isn't much myelin in the gray matter, and the myelin is white."
            ],
            "guid": "he%>mSIN1U",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::electives::neuroinf"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "The&nbsp;<i>gyrus</i>&nbsp;are {{c1::the ridges of the infolded cerebral cortex.}}",
                ""
            ],
            "guid": "j67EjJ[Ps6",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::electives::neuroinf"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "The <i>limbic system&nbsp;</i>is {{c1::the part of the brain concerned with emotions.}}",
                "e.g. hippocampus and amygdala"
            ],
            "guid": "ET#5&q4pOP",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::electives::neuroinf"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "The&nbsp;<i>neocortex</i>&nbsp;is the {{c1::six-layered cortex that makes up about 90% of the&nbsp;<i>cerebral cortex</i>.}}",
                "The other 10% is&nbsp;<i>allocortex</i>."
            ],
            "guid": "IvNXmK(`|=",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::electives::neuroinf"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "The&nbsp;<i>peripheral nervous system (PNS)</i>&nbsp;includes {{c1::all nerves and neurons outside the brain &amp; spinal cord.}}",
                ""
            ],
            "guid": "H`/#Ge6^rC",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::electives::neuroinf"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "The&nbsp;<i>soma</i>&nbsp;is {{c1::the cell body of a neuron.}}",
                ""
            ],
            "guid": "AM8Z[6%a%S",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::electives::neuroinf"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "a13fd99f70b04226b3a6c66c4ac1e073-ao-1",
                "Brain Lobes",
                "<img src=\"brain-lobes.png\">",
                "<img src=\"a13fd99f70b04226b3a6c66c4ac1e073-ao-1-Q.svg\">",
                "",
                "",
                "",
                "",
                "",
                "<img src=\"a13fd99f70b04226b3a6c66c4ac1e073-ao-1-A.svg\">",
                "<img src=\"a13fd99f70b04226b3a6c66c4ac1e073-ao-O.svg\">"
            ],
            "guid": "eOS)T-?-eh",
            "note_model_uuid": "2ade71c4-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::electives::neuroinf"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "a13fd99f70b04226b3a6c66c4ac1e073-ao-2",
                "Brain Lobes",
                "<img src=\"brain-lobes.png\">",
                "<img src=\"a13fd99f70b04226b3a6c66c4ac1e073-ao-2-Q.svg\">",
                "",
                "",
                "",
                "",
                "",
                "<img src=\"a13fd99f70b04226b3a6c66c4ac1e073-ao-2-A.svg\">",
                "<img src=\"a13fd99f70b04226b3a6c66c4ac1e073-ao-O.svg\">"
            ],
            "guid": "Bw]hRo(M)H",
            "note_model_uuid": "2ade71c4-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::electives::neuroinf"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "a13fd99f70b04226b3a6c66c4ac1e073-ao-3",
                "Brain Lobes",
                "<img src=\"brain-lobes.png\" />",
                "<img src=\"a13fd99f70b04226b3a6c66c4ac1e073-ao-3-Q.svg\" />",
                "",
                "",
                "",
                "",
                "",
                "<img src=\"a13fd99f70b04226b3a6c66c4ac1e073-ao-3-A.svg\">",
                "<img src=\"a13fd99f70b04226b3a6c66c4ac1e073-ao-O.svg\" />"
            ],
            "guid": "B;1FANZ5}|",
            "note_model_uuid": "2ade71c4-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::electives::neuroinf"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "a13fd99f70b04226b3a6c66c4ac1e073-ao-4",
                "Brain Lobes",
                "<img src=\"brain-lobes.png\" />",
                "<img src=\"a13fd99f70b04226b3a6c66c4ac1e073-ao-4-Q.svg\" />",
                "",
                "",
                "",
                "",
                "",
                "<img src=\"a13fd99f70b04226b3a6c66c4ac1e073-ao-4-A.svg\">",
                "<img src=\"a13fd99f70b04226b3a6c66c4ac1e073-ao-O.svg\" />"
            ],
            "guid": "i?ED>RN;2t",
            "note_model_uuid": "2ade71c4-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::electives::neuroinf"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "a13fd99f70b04226b3a6c66c4ac1e073-ao-5",
                "Brain Lobes",
                "<img src=\"brain-lobes.png\">",
                "<img src=\"a13fd99f70b04226b3a6c66c4ac1e073-ao-5-Q.svg\" />",
                "",
                "",
                "",
                "",
                "",
                "<img src=\"a13fd99f70b04226b3a6c66c4ac1e073-ao-5-A.svg\">",
                "<img src=\"a13fd99f70b04226b3a6c66c4ac1e073-ao-O.svg\" />"
            ],
            "guid": "zwcX%lt9?n",
            "note_model_uuid": "2ade71c4-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::electives::neuroinf"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "In scheduling, <i>priority inversion</i>&nbsp;is {{c1::a problem where a low-priority task holds a lock that a high-priority task needs. Then a middle-priority task gets scheduled instead, and the high-priority task is unable to run.}}",
                "This happened on the Mars Pathfinder rover."
            ],
            "guid": "K|11=(4kV3",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem5::compsys"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "A <i>preemptive</i>&nbsp;scheduler may {{c1::interrupt and suspend a task before it is completed.}}",
                ""
            ],
            "guid": "er_[@a/x|/",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem5::compsys"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "In scheduling,&nbsp;<i>priority inheritance</i>&nbsp;is {{c1::a solution to the priority inversion problem. If a task holds a lock, it temporarily has the priority of the highest process waiting for the lock.}}",
                "This requires the scheduler to be involved in lock operations."
            ],
            "guid": "Hy)8GV2.,x",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem5::compsys"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "In scheduling,&nbsp;<i>priority ceiling</i>&nbsp;is {{c1::a solution to the priority inversion problem. If a task holds a lock, it temporarily has the priority of the highest process which can ever hold the lock.}}",
                "This can require static analysis of the entire system."
            ],
            "guid": "qNO2x;^G`%",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem5::compsys"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "The <i>Goldman-Hodgkin-Katz equation</i> is used to determine the&nbsp;{{c1::reversal potential across a membrane including all permeable ions.}}",
                ""
            ],
            "guid": "Jt}2U{<M18",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::electives::neuroinf"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "An&nbsp;<i>afferent</i>&nbsp;neuron/axon conducts action potentials&nbsp;{{c1::from the periphery&nbsp;<b>towards</b>&nbsp;the CNS}}.",
                ""
            ],
            "guid": "Kg1]+B+yKs",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::electives::neuroinf"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "An&nbsp;<i>efferent</i>&nbsp;neuron/axon conducts action potentials {{c1::<b>away</b>&nbsp;from the CNS to the periphery.}}",
                ""
            ],
            "guid": "H:fht}fv0p",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::electives::neuroinf"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "The presynaptic terminal is also called&nbsp;{{c1::axon terminal or bouton}}.",
                ""
            ],
            "guid": "fsw>C@#+MB",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::electives::neuroinf"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "The <i>Nodes of Ranvier </i>are<i>&nbsp;</i>{{c1::myelin-sheath gaps along the axon where the action potential is regenerated}}.",
                ""
            ],
            "guid": "tVYOj@8P3{",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::electives::neuroinf"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "The <i>meninges</i>&nbsp;are {{c1::the three membranes that surround and protect the brain / spinal cord}}.",
                "(mammals have three, others not)"
            ],
            "guid": "HXUCFYhchr",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::electives::neuroinf"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "The&nbsp;<i>dura mater&nbsp;</i>is {{c1::the thick inelastic outermost layer of the&nbsp;<i>meninges</i>}}.",
                ""
            ],
            "guid": "Ln!A!2^MYs",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::electives::neuroinf"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "The&nbsp;<i>arachnoid mater</i>&nbsp;is {{c1::the thin middle layer of the <i>meninges</i>}}.",
                "Among other things, it keeps blood from getting into the cerebrospinal fluid."
            ],
            "guid": "Kfxefl7akn",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::electives::neuroinf"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "The&nbsp;<i>pia mater</i>&nbsp;is {{c1::the thin innermost layer of the&nbsp;<i>meninges</i>}}.",
                "Among other things, it prevents cerebrospinal fluid from reaching the brain."
            ],
            "guid": "b?Q>c_!^r`",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::electives::neuroinf"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "The CAP theorem says that any distributed system {{c1::can only have two of the three properties:<br><ul><li>Consistency</li><li>Availability</li><li>Partition tolerance}}</li></ul>",
                ""
            ],
            "guid": "A}wlY_JWE`",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem5::compsys"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "The shared state in Bitcoin is&nbsp;{{c1::the set of <i>unspent transaction outputs (UTXOs)&nbsp;</i>and some additional global parameters.}}",
                ""
            ],
            "guid": "KeXb5qzp`K",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem5::compsys"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "The Bitcoin PoW function is given by {{c1::\\[\\mathcal{F}_d(c,x) \\to \\text{SHA256}(\\text{SHA256}(c|x)) &lt; \\frac{2^{224} }{d}\\]}}",
                ""
            ],
            "guid": "unMRZ`+L=q",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem5::compsys"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "On success, <tt>fork()</tt> returns&nbsp;{{c1::the child PID}} to the parent and&nbsp;{{c1::0}} to the child.",
                ""
            ],
            "guid": "NKH]x`l+`D",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem5::compsys"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "On failure, <tt>fork()</tt> returns&nbsp;{{c1::-1}} to the parent and the child {{c1::is not created}}.",
                ""
            ],
            "guid": "Kvf>{OSF=r",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem5::compsys"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "The drift&nbsp;\\(\\delta\\)&nbsp;is {{c1::the predictable clock error}}.",
                ""
            ],
            "guid": "Hje6w~wY=U",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem5::compsys"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "TAI is a {{c1::time standard without leap seconds}}.",
                ""
            ],
            "guid": "h2#T5DY.KD",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem5::compsys"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Caller-save registers are {{c1::\"volatile\" across a call - the caller must save them}}. In constrast, callee-save registers are {{c1::\"non-volatile\" across a call - the called function must restore them}}.",
                ""
            ],
            "guid": "nEd$&|E5Cc",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": []
        },
        {
            "__type__": "Note",
            "fields": [
                "A <b>naming hierarchy</b>&nbsp;is a {{c1::naming network that is a tree}}.",
                ""
            ],
            "guid": "HO>.af]C*u",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem5::compsys"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "An&nbsp;<b>indirect entry</b>&nbsp;is a {{c1::name bound to another path name}}.",
                "The other path name is resolved in the same context as the indirect entry."
            ],
            "guid": "sfQf2o.KJK",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem5::compsys"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "A&nbsp;<b>pure name</b>&nbsp;tells us {{c1::nothing useful about the object it refers to}}.",
                ""
            ],
            "guid": "N#Em7vCe!k",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem5::compsys"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "An&nbsp;<b>address</b>&nbsp;is a name that {{c1::also encodes information about the object it refers to}}.",
                "Example: IPv4 address"
            ],
            "guid": "dhRXG*2Ox0",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem5::compsys"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "A&nbsp;<b>search path&nbsp;</b>is an {{c1::ordered list of contexts that are treated like a single context}}.",
                "e.g. the $PATH variable on Linux. We go through all the contexts until we find a binding for the given name."
            ],
            "guid": "gy)-6Sy4zf",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem5::compsys"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "<b>Synonyms&nbsp;</b>are {{c1::different names bound to the same object}}.<b>&nbsp;</b>",
                ""
            ],
            "guid": "gtAy<SsMZJ",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem5::compsys"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "<b>Bootstrapping</b> (also called <b>booting</b>) is the process {{c1::of starting the operating system when the machine is powered on / reset}}. It ends when {{c1::the operating system is running regular processes}}.",
                ""
            ],
            "guid": "r2X~V-BV.K",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem5::compsys"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "A computer boots by doing four steps:<br><ol><li>{{c1::CPU starts executing code at a fixed address, where the <i>Boot ROM</i> is.}}</li><li>{{c2::The Boot ROM code loads the second stage boot loader into RAM.}}</li><li>{{c3::The second stage boot loader loads the kernel and (sometimes) an initial file system into RAM.}}</li><li>{{c4::Jump to the kernel entry point.}}</li></ol>",
                ""
            ],
            "guid": "sKrZ!q+:vZ",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem5::compsys"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "In user mode, we have&nbsp;{{c1::limited}} privileges.",
                "e.g. we cannot write to any memory"
            ],
            "guid": "h|Cu&fMJ5M",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem5::compsys"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "We switch from user mode to kernel mode when {{c1::a processor exception happens (e.g. a syscall trap or a page fault)}}.",
                ""
            ],
            "guid": "kvhm6kMx2(",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem5::compsys"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "When an exception occurs, we<br><ol><li>{{c1::Finish executing the current instruction}}.</li><li>{{c2::Switch to kernel mode}}</li><li>{{c3::Look up exception cause in the exception vector table}}</li><li>{{c4::Jump to the address from the table}}</li></ol>",
                ""
            ],
            "guid": "ESJF/V;MUl",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem5::compsys"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "A <b>synchronous </b>exception happens because {{c1::we execute an instruction}}.",
                ""
            ],
            "guid": "x:F^pDT698",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem5::compsys"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "The <b>kernel</b>&nbsp;is {{c1::the code that runs in kernel mode}}.",
                ""
            ],
            "guid": "Hj-pfrl1qp",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem5::compsys"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "A&nbsp;<b>system library</b>&nbsp;is {{c1::a convenient interface to the kernel}}.",
                ""
            ],
            "guid": "i){xWs32PO",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem5::compsys"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "A&nbsp;<b>daemon</b>&nbsp;is {{c1::a user-space process which provides OS services}}.",
                "Example: crond for repeating tasks"
            ],
            "guid": "q]>i*4P],A",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem5::compsys"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "IPC stands for {{c1::Inter-Process Communication}}.",
                ""
            ],
            "guid": "P,:Q<gG]rt",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem5::compsys"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "A <b>hardware timer&nbsp;</b>regularly {{c1::causes an interrupt that returns control to the kernel handler}}.",
                ""
            ],
            "guid": "Lbp)Eg,*A2",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem5::compsys"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "<b>Homonyms</b>&nbsp;are {{c1::the same name being bound to different objects}}.&nbsp;",
                ""
            ],
            "guid": "Qqh<YKX71n",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem5::compsys"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "While the interrupt handler runs, interrupts {{c1::are turned off}}.",
                "Useful for implementing atomic operations"
            ],
            "guid": "l3u2Q*]s1Y",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem5::compsys"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "A&nbsp;<b>process</b>&nbsp;is {{c1::the execution of a program with restricted rights}}.",
                ""
            ],
            "guid": "M?Z7<gsL1f",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem5::compsys"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "A&nbsp;<b>thread</b>&nbsp;is {{c1::a sequence of instructions within a process}}.",
                ""
            ],
            "guid": "l,T%K.3/Vx",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem5::compsys"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "The name of a process is {{c1::its PID}}.",
                ""
            ],
            "guid": "F:-OGW,!D{",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem5::compsys"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "The Process Control Block (PCB) is a {{c1::data structure holding information about a process}}.",
                ""
            ],
            "guid": "L^/Vqd~l3P",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem5::compsys"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "There are two main approaches for creating a process:&nbsp;{{c1::spawn}} and&nbsp;{{c2::fork/exec}}.",
                ""
            ],
            "guid": "JC@Kw3[u0$",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem5::compsys"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "d730da8d1307491e857e43889d325dc5-oa-2",
                "Fill in the missing process state / transition.",
                "<img src=\"tmp662mxaz0.jpg\" />",
                "<img src=\"d730da8d1307491e857e43889d325dc5-oa-2-Q.svg\" />",
                "",
                "",
                "",
                "",
                "",
                "<img src=\"d730da8d1307491e857e43889d325dc5-oa-2-A.svg\">",
                "<img src=\"d730da8d1307491e857e43889d325dc5-oa-O.svg\" />"
            ],
            "guid": "l9tu8%>KSV",
            "note_model_uuid": "2ade71c4-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem5::compsys"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "d730da8d1307491e857e43889d325dc5-oa-3",
                "Fill in the missing process state / transition.",
                "<img src=\"tmp662mxaz0.jpg\" />",
                "<img src=\"d730da8d1307491e857e43889d325dc5-oa-3-Q.svg\" />",
                "",
                "",
                "",
                "",
                "",
                "<img src=\"d730da8d1307491e857e43889d325dc5-oa-3-A.svg\">",
                "<img src=\"d730da8d1307491e857e43889d325dc5-oa-O.svg\" />"
            ],
            "guid": "h[aOiaXbdU",
            "note_model_uuid": "2ade71c4-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem5::compsys"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "The <b>trap frame</b> contains {{c1::values of certain registers saved there before a syscall is handled}}.",
                ""
            ],
            "guid": "n5fV]Uya3&",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem5::compsys"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "The kernel switches processes when either {{c1::a timer interrupts it}} or when {{c1::a process blocks}}.",
                ""
            ],
            "guid": "e;}MfYGPp}",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem5::compsys"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "One of the main purposes of the <code>init</code> process is to {{c1::wait for any child to <code>exit()</code> so that there are no orphans}}.",
                ""
            ],
            "guid": "N~>1j^pxGg",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem5::compsys"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "The two ways for processes to communicate are through {{c1::message passing}} or through {{c2::shared memory}}.",
                ""
            ],
            "guid": "~5$:%)t|)",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem5::compsys"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "<b>Marshalling</b> is {{c1::the process of converting data into a format suitable for transmission}}.",
                "e.g. arguments in a RPC are marshalled."
            ],
            "guid": "c5zl!6P.,2",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem5::compsys"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "A <b>zombie&nbsp;</b>is a {{c1::process that has died, but is still around because its parent hasn't called <code>wait()</code>.}}",
                ""
            ],
            "guid": "wscm2:ZzpT",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem5::compsys"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "A zombie process has to continue to exist because {{c1::the exit status must be preserved}}.",
                ""
            ],
            "guid": "b>!vbB%tin",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem5::compsys"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "We need only three concepts to build all OS structures:<br><ul><li>{{c1::Mode switch}}<br></li><li>{{c2::Page tables}}<br></li><li>{{c3::Timer interrupts}}<br></li></ul>",
                ""
            ],
            "guid": "LaMG.yz?Ow",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem5::compsys"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "<b>Uniprocessor scheduling</b>&nbsp;is {{c1::the problem of scheduling tasks on a single processor core}}.",
                ""
            ],
            "guid": "v>sN<J--du",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem5::compsys"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "<b>Batch scheduling</b>&nbsp;is {{c1::the problem of scheduling a (potentially unbounded) set of finite tasks}}.",
                ""
            ],
            "guid": "wB1/]TBw+a",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem5::compsys"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "The&nbsp;<b>execution time&nbsp;</b>(or&nbsp;<b>run time</b>) of a job is {{c1::the time it takes for the job to execute once started}}.",
                ""
            ],
            "guid": "P)MPQj)WGN",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem5::compsys"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "The&nbsp;<b>hold time</b>&nbsp;of a job is {{c1::the time it takes for the job from arriving at the scheduler to start executing}}.",
                ""
            ],
            "guid": "L];d#pl8K]",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem5::compsys"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "The&nbsp;<b>wait time</b>&nbsp;of a job is {{c1::the total time it takes from arriving to finishing the job}}.",
                "hold time + execution time"
            ],
            "guid": "ECA36ueMh5",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem5::compsys"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "The&nbsp;<b>arrival time&nbsp;</b>(or&nbsp;<b>release time</b>) of a job is {{c1::the time where it arrives at the scheduler}}.&nbsp;",
                ""
            ],
            "guid": "IVW>~8oRKC",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem5::compsys"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "In scheduling, <b>First Come First Served</b> (FCFS) works by always dispatching the job&nbsp;{{c1::with the earliest arrival time.}}&nbsp;",
                ""
            ],
            "guid": "v{)Jt{3I9X",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem5::compsys"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "The <b>convoy phenomenon</b>&nbsp;is a problem in scheduling where {{c1::many short jobs are stalled because of a long-running job, which inflates mean wait times}}.",
                ""
            ],
            "guid": "j1,7?fguK=",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem5::compsys"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "<b>Multi-level feedback queues</b>&nbsp;is a class of scheduling algorithms that {{c1::penalize CPU-bound tasks in favor of I/O-bound tasks}}.",
                ""
            ],
            "guid": "ra7X;b:QSF",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem5::compsys"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "The aim of <b>multi-level feedback queue&nbsp;</b>algorithms is to {{c1::get good response times for interactive jobs and good throughput for background jobs}}.",
                ""
            ],
            "guid": "C$y3%bGS<E",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem5::compsys"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "In scheduling,&nbsp;<b>Earliest Deadline First</b>&nbsp;works by dispatching the job that {{c1::has the earliest deadline}}.",
                "Would be implemented with a Priority Queue to work in&nbsp;\\(\\mathcal{O}(\\log n)\\)"
            ],
            "guid": "o9V/e-c~vk",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem5::compsys"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "<b>Reservation-based scheduling&nbsp;</b>guarantees {{c1::a minimum amount of CPU time to each job.}}",
                ""
            ],
            "guid": "k?8h]~A9$U",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem5::compsys"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "A scheduler is <b>work conserving</b> if {{c1::no processor is ever idle when there is a runnable task.}}",
                ""
            ],
            "guid": "q:Zx:vTIk}",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem5::compsys"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "The <b>First-level Interrupt Service Routine</b> (FLISR) is {{c1::the code that executes immediately as a result of a (device) interrupt}}.",
                ""
            ],
            "guid": "F2%x-aHHFi",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem5::compsys"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "A&nbsp;<b>character device</b>&nbsp;is used for&nbsp;{{c1::unstructured}} IO and we access&nbsp;{{c1::single bytes in a byte-stream}}.",
                ""
            ],
            "guid": "fbVLg]V0@7",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem5::compsys"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "A&nbsp;<b>block device</b>&nbsp;is used for&nbsp;{{c1::structured}} IO and we access {{c1::whole blocks, e.g. disk blocks}}.",
                ""
            ],
            "guid": "j^-RT?@Xbv",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem5::compsys"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "The Process Control Block must contain at least {{c1::the page table, trap frame, kernel stack, open files, program name, scheduling state, PID}}.",
                "Very bad card. Improve ASAP"
            ],
            "guid": "p@f#]O^4D<",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem5::compsys",
                "marked"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "<b>Affinity scheduling</b>&nbsp;is the idea that {{c1::we should schedule jobs on the same core as much as possible}}.",
                ""
            ],
            "guid": "v*nRJY[3+n",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem5::compsys"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "A&nbsp;<b>deferred procedure call&nbsp;</b>(DPC, also known as&nbsp;<b>soft interrupt handler</b>) is {{c1::a program created by the first-level interrupt handler to handle a device interrupt}}.",
                ""
            ],
            "guid": "LvH3t1!`I)",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem5::compsys"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "With&nbsp;<b>base and limit registers</b>, programs had to be compiled to {{c1::position-independent code}} because {{c1::the base address is not known at compile time}}.",
                "(unless relocation registers were used)"
            ],
            "guid": "codoKAyp{;",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem5::compsys"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "A disadvantage of relocation registers is that they do not allow {{c1::sharing code / data}}.",
                ""
            ],
            "guid": "P2k0n@Bjx@",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem5::compsys"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "With segmentation, each process has a {{c1::segment table containing segments (offset + size)}}.",
                ""
            ],
            "guid": "f|.u17fg{G",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem5::compsys"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "An advantage of segmentation for MMU is that we can {{c1::share code/data between processes}}.",
                ""
            ],
            "guid": "OVPFg=!XX~",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem5::compsys"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "A disadvantage of segmentation for MMU is {{c1::external fragmentation - wasted space}}.",
                ""
            ],
            "guid": "xLQi$?H9Vf",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem5::compsys"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "With&nbsp;<b>zero-on-reference</b>, we {{c1::zero the memory when allocated}} to avoid {{c2::leaking information}}.",
                ""
            ],
            "guid": "HAv2G}T=9L",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem5::compsys"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "With&nbsp;<b>fill-on-demand</b>, we can {{c2::start a program before its code is in physical memory}} by {{c1::bringing in pages from disk when needed}}.",
                ""
            ],
            "guid": "A7*k587ot%",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem5::compsys"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "<b>Copy-on-write&nbsp;</b>(COW) optimizes {{c1::copying large regions of virtual memory}}.",
                ""
            ],
            "guid": "A?e}V|<vEC",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem5::compsys"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "When calling <code>fork()</code> with <b>Copy-on-write</b>, we {{c1::copy the page table and set all mappings to read-only in both address spaces}}.",
                ""
            ],
            "guid": "yj]E)FK%VO",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem5::compsys"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "When we write to a read-only page with&nbsp;<b>copy-on-write</b>, we {{c1::allocate a new page, copy the contents, and change the mapping to the new page}}.",
                ""
            ],
            "guid": "l4o5?`X2P@",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem5::compsys"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "<b>Bélády's Anomaly</b>&nbsp;is the anomaly that {{c1::for some replacement algorithms <i>increasing</i> cache size can <i>reduce</i> the hit rate for certain access patterns}}.",
                "e.g. FIFO has this anomaly"
            ],
            "guid": "ER<FIPEC?;",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem5::compsys"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "The <b>clock&nbsp;</b>(or <b>second chance</b>) replacement policy approximates {{c1::LRU}}, but {{c2::is much cheaper}}.",
                ""
            ],
            "guid": "bi]7]PTX5U",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem5::compsys"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "A security&nbsp;<b>principal</b>&nbsp;or&nbsp;<b>subject</b>&nbsp;is {{c1::an entity to which we give access rights}}.",
                ""
            ],
            "guid": "B@BErQ%/*Y",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem5::compsys"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "The&nbsp;<b>protection domain</b>&nbsp;of a principal is {{c1::the set of objects for which the principal has some rights}}.",
                ""
            ],
            "guid": "D%)RCGuH3$",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem5::compsys"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "The&nbsp;<b>access control matrix</b>&nbsp;is a table where {{c2::the rows are principals and the columns are objects}}. A cell is {{c1::a list of the rights the principal has over the object}}.",
                ""
            ],
            "guid": "LGJQ3`r,?2",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem5::compsys"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "An&nbsp;<b>access control list&nbsp;</b>(<b>ACL</b>) is a {{c1::list for a column of the access control list, so a set of the rights principals have over an object}}.",
                ""
            ],
            "guid": "CWy*s$#F,R",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem5::compsys"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Cranial nerves are the nerves {{c1::emerging directly from the brain}} and connect to {{c2::our primary senses (vision / taste / smell / hearing)}}.",
                ""
            ],
            "guid": "sDjsI.g!,|",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::electives::neuroinf"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "The <b>ventricular system </b>is {{c1::a set of four holes (<i>cerebral ventricles)</i>&nbsp;in the brain}}. In there {{c2::the cerebrospinal fluid (CSF)}} is produced.",
                ""
            ],
            "guid": "ju>g#H;:h]",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::electives::neuroinf"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "The <b>basal ganglia</b>&nbsp;is a {{c1::part of the brain that is (among other things) involved in voluntary movement}}.",
                ""
            ],
            "guid": "bjUw*%v0~f",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::electives::neuroinf"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "The&nbsp;<b>thalamus</b>&nbsp;is a {{c1::large mass of gray matter that also acts as a relay for sensory signals}}.",
                ""
            ],
            "guid": "h3olXpK^6Y",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::electives::neuroinf"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "The&nbsp;<b>hypothalamus</b>&nbsp;is {{c1::a part of the brain that connects the nervous system to the hormone system}}.",
                ""
            ],
            "guid": "BIlN1.JV2>",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::electives::neuroinf"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "The&nbsp;<b>cerebellum&nbsp;</b>(\"little brain\") is a {{c1::part of the brain that is important for motor control}}.",
                ""
            ],
            "guid": "kt&]kaMV%t",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::electives::neuroinf"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Camillo Golgi discovered a {{c1::technique to stain neurons in nervous tissue}}.",
                ""
            ],
            "guid": "bJiAU2H)~j",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::electives::neuroinf"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Hodgkin and Huxley were able to {{c1::describe how ionic currents caused the action potential}}.",
                ""
            ],
            "guid": "kX)cVyJuw+",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::electives::neuroinf"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "When neurotransmitter vesicles undergo&nbsp;<b>priming</b>, {{c2::they become ready to be released}}. This corresponds to {{c1::the assembly of the SNARE complex}}.",
                ""
            ],
            "guid": "F9]ZUtLJ~&",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::electives::neuroinf"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "SNARE complexes are {{c1::protein structures which help with vesicle priming &amp; fusion}}.&nbsp;",
                ""
            ],
            "guid": "tBu|bk=f;>",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::electives::neuroinf"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "<b>Hebb's law</b>&nbsp;says that {{c1::neurons that fire together, wire together}}.",
                ""
            ],
            "guid": "NJ*dyw++I?",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::electives::neuroinf"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "The&nbsp;<b>axon hillock</b>&nbsp;is the {{c1::part of the soma that connects to the axon}}.",
                ""
            ],
            "guid": "CL+F<]eW(z",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::electives::neuroinf"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "In the axon hillock, {{c1::potentials are summed and if a threshold is exceeded, an action potential propagates through the axon}}.",
                ""
            ],
            "guid": "F(W+6cp|O|",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::electives::neuroinf"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "When the action potential arrives at the presynaptic terminal, {{c2::voltage-gated&nbsp;\\(Ca^{2+}\\)&nbsp;channels are opened}}, which cause {{c1::neurotransmitter to be released}}.",
                ""
            ],
            "guid": "A?.Syey&Bz",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::electives::neuroinf"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "<b>Long-term potentiation&nbsp;</b>(<b>LTP</b>) is {{c1::a strengthening of synapses}} and happens {{c2::after short but high-frequency stimulation}}.",
                ""
            ],
            "guid": "koU>}z6#%8",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::electives::neuroinf"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "<b>Long Term Depression&nbsp;</b>(<b>LTD</b>) is {{c2::a weakening of synapses}} and happens after {{c1::long but low frequency stimulation}}.",
                ""
            ],
            "guid": "Px[p|VUH3",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::electives::neuroinf"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "A <b>Hopfield network</b>&nbsp;consists of {{c1::multiple McCulloch-Pitts neurons that are fully connected}}.",
                ""
            ],
            "guid": "Itnn>r2wqH",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::electives::neuroinf"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "The receptor {{c1::NMDA}} is critically involved in Long-Term Potentiation.",
                ""
            ],
            "guid": "M++ZgS-YUk",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::electives::neuroinf"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "<b>Population codes</b> are {{c1::neural representations at the level of groups of cells}}.",
                ""
            ],
            "guid": "LLxTD2CGz6",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::electives::neuroinf"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "The&nbsp;<b>association cortex</b>&nbsp;is the part of the cerebral cortex that is {{c1::not involved in sensory / motor processing}}.",
                ""
            ],
            "guid": "vq^:lBS9xZ",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::electives::neuroinf"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Potassium is a chemical element called {{c1::Kalium}} in German.",
                ""
            ],
            "guid": "oL82K.iqM}",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": []
        },
        {
            "__type__": "Note",
            "fields": [
                "Sodium is a chemical element called {{c1::Natrium}} in German.",
                ""
            ],
            "guid": "D%n:xT4NsA",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": []
        },
        {
            "__type__": "Note",
            "fields": [
                "In an asynchronous environment, a message will {{c1::arrive in a finite but unbounded time}}.",
                ""
            ],
            "guid": "s?,>Bm1om[",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem5::compsys"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Any-Input validity says that {{c1::the decision value must be the input of <b>any</b> node}}.",
                ""
            ],
            "guid": "hb*O9R!dzI",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem5::compsys"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "All-Same Validity says that {{c1::if&nbsp;<b>all</b>&nbsp;nodes start with the same input, that must be the decision value}}.",
                ""
            ],
            "guid": "Bs#TY+1BK",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem5::compsys"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "A network with&nbsp;\\(n\\)&nbsp;nodes cannot reach byzantine agreement with {{c1::&nbsp;\\(f \\ge \\frac{n}{3}\\)}}&nbsp;byzantine nodes.",
                ""
            ],
            "guid": "z&&CL8ndFC",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem5::compsys"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "The King algorithm has three phases:{{c1::<br><ol><li>Vote (broadcast value)</li><li>Propose (if a value is received often, propose it)</li><li>King (if few proposals, follow the king)</li></ol>}}",
                ""
            ],
            "guid": "f>;WqcK&;S",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem5::compsys"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "In a distributed system,&nbsp;<b>churn&nbsp;</b>is {{c1::how much nodes are joining and leaving the system}}.",
                ""
            ],
            "guid": "wG?*pt$)Rv",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem5::compsys"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "A <b>quorum&nbsp;</b>is a {{c1::subset of nodes of a system}}.",
                ""
            ],
            "guid": "cjL90/.XaW",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem5::compsys"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "A&nbsp;<b>quorum system</b>&nbsp;is a {{c1::set of quorums such that every two quorums intersect}}.",
                ""
            ],
            "guid": "j<s9~<6yd)",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem5::compsys"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "In the&nbsp;<b>Majority</b>&nbsp;quorum system, {{c1::every quorum has&nbsp;\\(\\lfloor\\frac{n}{2}\\rfloor +1\\)&nbsp; nodes}}.",
                ""
            ],
            "guid": "OPET[/g@ia",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem5::compsys"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "An&nbsp;<b>access strategy</b>&nbsp;\\(Z\\) defines {{c1::the probability&nbsp;\\(P_Z(Q)\\)&nbsp; of accessing a quorum&nbsp;\\(Q \\in S\\)&nbsp; such that&nbsp;\\(\\sum_{Q\\in S}P_Z(Q) = 1\\)&nbsp;.}}",
                ""
            ],
            "guid": "m(1lxss1wc",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem5::compsys"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "The&nbsp;<b>work&nbsp;</b>of a&nbsp;<b>quorum</b>&nbsp;is {{c1::the number of nodes in it}}.",
                ""
            ],
            "guid": "y_pY&S5HO_",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem5::compsys"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "The&nbsp;<b>resilience</b>&nbsp;of a quorum system is {{c1::the largest number of nodes that can fail such that there's always a quorum without failed nodes}}.",
                ""
            ],
            "guid": "m#2Ws$gx<^",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem5::compsys"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Every quorum system has a load of at least&nbsp;{{c1::\\(\\frac{1}{\\sqrt{n} }\\)}}.",
                ""
            ],
            "guid": "P<79Ac2]?k",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem5::compsys"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "A&nbsp;<b>uniform</b>&nbsp;quorum system is one in which {{c1::all quorums have the same number of nodes}}.",
                ""
            ],
            "guid": "oZ_F.r}X_n",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem5::compsys"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "The load in a (B-)grid quorum system is&nbsp;{{c1::\\(\\Theta(\\frac{1}{\\sqrt{n} })\\), which is optimal}}.",
                ""
            ],
            "guid": "gyBHHll*`s",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem5::compsys"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "The <b>Precise Time Protocol</b> (PTP) is similar to NTP, but {{c1::uses MAC layer timestamps}}.",
                "This removes software delay."
            ],
            "guid": "Ip,B$&2mQS",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem5::compsys"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "A <b>logical volume&nbsp;</b>can {{c1::merge multiple physical devices into a single volume}}.",
                ""
            ],
            "guid": "IaVx}BG;GX",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem5::compsys"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "The <b>superblock</b>&nbsp;is the {{c1::area of a disk which holds information about the layout of the file system (how large, where inode tables are, etc.)}}.",
                "In FAT: the Master Boot Record"
            ],
            "guid": "ye;Mj!,B7W",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem5::compsys"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "A <b>virtual machine monitor</b>&nbsp;does {{c1::virtualize an entire machine}}.",
                ""
            ],
            "guid": "eQtj[(^2Gp",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem5::compsys"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "A <b>Type-1</b> hypervisor runs {{c1::directly on the hardware}}.",
                ""
            ],
            "guid": "M2`Ujt9I`,",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem5::compsys"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "A&nbsp;<b>Type-2</b>&nbsp;hypervisor runs {{c1::on a conventional OS like normal software}}.",
                ""
            ],
            "guid": "fBDorDp;.;",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem5::compsys"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "A&nbsp;<b>paravirtualized</b>&nbsp;guest OS is one that {{c1::has been modified for running inside a VM}}.",
                "Fast, but cannot run arbitrary OS binaries"
            ],
            "guid": "M@E3{pU|8[",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem5::compsys"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Virtualization with <b>binary rewriting</b>&nbsp;{{c1::patches the kernel on the fly to remove unvirtualizable instructions}}.",
                ""
            ],
            "guid": "no.}289bF9",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem5::compsys"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "With&nbsp;<b>directly writable tables</b>, a guest OS can {{c1::create page tables the hardware uses to directly translate virtual adresses to machine addresses}}.",
                ""
            ],
            "guid": "oHa$AhOy#,",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem5::compsys"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "With&nbsp;<b>directly writable tables</b>, the VMM has to {{c1::check all writes to page table entries, such that the guest cannot escape the VM}}.",
                "Bad for performance"
            ],
            "guid": "c?6X(`YqDk",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem5::compsys"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "A strategy profile is a&nbsp;<b>social optimum</b>&nbsp;if it {{c1::minimizes the sum of all costs (or maximizes payoff)}}.",
                ""
            ],
            "guid": "KIcd~.{OLn",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem5::compsys"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "A <b>Nash Equilibrirum</b>&nbsp;is a {{c1::strategy profile where nobody can improve their strategy alone (without others changing)}}.",
                ""
            ],
            "guid": "bgH!EUFW|p",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem5::compsys"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "The&nbsp;<b>Price of Anarchy</b>&nbsp;is {{c1::the ratio between the Nash Equilibrium with the highest cost (smallest payoff) and the social optimum}}.",
                ""
            ],
            "guid": "m&(Dpj@skK",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem5::compsys"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "The <b>Optimistic</b>&nbsp;<b>Price of Anarchy</b>&nbsp;is {{c1::the ratio between the Nash Equilibrium with the smallest cost (highest payoff) and the social optimum}}.",
                ""
            ],
            "guid": "cafEI$y4F>",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem5::compsys"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "<b>Braess's paradox</b>&nbsp;says that {{c1::adding one or more roads to a road network can slow down overall traffic flow}}.",
                ""
            ],
            "guid": "Jr|[;FW0:J",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem5::compsys"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "A&nbsp;<b>ticket</b>&nbsp;is a weaker form of a lock that {{c1::can be reissued and that expires (if a new ticket was issued since by a server, the old one is no longer accepted)}}.",
                ""
            ],
            "guid": "b%T,*)s}y$",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem5::compsys"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Paxos cannot make progress anymore if {{c1::half or more of the servers crash}}.",
                ""
            ],
            "guid": "G13bJGzCCl",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem5::compsys"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "There is no deterministic algorithm that achieves consensus in {{c1::the asynchronous model for&nbsp;\\(f &gt; 0\\).}}",
                ""
            ],
            "guid": "C^Jc)5rzai",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem5::compsys"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "A transaction with a&nbsp;<b>timelock</b>&nbsp;is {{c1::not released into the network until the timelock expires}}.",
                ""
            ],
            "guid": "J$3IJ4uMC-",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem5::compsys"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "The diameter of a graph is the {{c1::longest shortest path}}.",
                ""
            ],
            "guid": "gmL3-FGTW$",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem5::compsys"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "The&nbsp;<i>span</i>&nbsp;of a set of vectors is {{c1::the set of all possible linear combinations of them}}.",
                "The span is a linear subspace."
            ],
            "guid": "oVmXrU@C,D",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem1::linalg"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "The&nbsp;<i>p</i>-norm of a vector&nbsp;\\(x \\in \\mathbb{R}^n\\)&nbsp;is defined as&nbsp;{{c1::\\(||x||_p=\\left(\\sum_{i=1}^n |x_i|^p\\right)^{1/p}\\)}}.",
                ""
            ],
            "guid": "H3<#NN+ZEG",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem1::linalg"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "The&nbsp;<i>loss function</i>&nbsp;\\(l(f(x),y)\\)&nbsp;tells us {{c1::how good the predicted value&nbsp;\\(f(x)\\)&nbsp;is compared to the true value&nbsp;\\(y\\)}}.",
                "e.g. squared loss"
            ],
            "guid": "hIZBW%wW@-",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem6::iml"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "The&nbsp;<i>training loss&nbsp;</i>\\(L(f)\\)&nbsp;is {{c1::the average loss over the training set for a predictor&nbsp;\\(f\\).}}",
                ""
            ],
            "guid": "d4:]NJ>Tt4",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem6::iml"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Documentation should focus on&nbsp;{{c1::what}} the essential properties are, not&nbsp;{{c1::how}} these are implemented<br>",
                "- “Whenever a ListRep object’s shared-field is false, it is used as representation of at most one List object”<br>Rather than:<br>- “When creating a new List object with an existing ListRep object, the shared-field is set to true”"
            ],
            "guid": "E=:2Wv-cl/",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem6::rse"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "What makes a Java exception&nbsp;<b>checked</b>?",
                "If it has to be added with the&nbsp;<b>throws</b>&nbsp;keyword and is checked at compile time."
            ],
            "guid": "MVtb[B2Wo}",
            "note_model_uuid": "2ae32340-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem6::rse"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "What are the 3 elements in a <b>documentation</b>&nbsp;<b>contract</b>?",
                "<ul><li>Precondition (<code>//requires</code>)</li><li>Postcondition (<code>//ensures</code>)</li><li>Invariant (<code>//invariant</code>)</li></ul>"
            ],
            "guid": "IwHG!:%Fh3",
            "note_model_uuid": "2ae32340-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem6::rse"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Documentation contract: What is in the <b>preconditions</b>?",
                "The conditions the caller of a method must fullfill.<br><br>Example: \"To call getRoot(x), the caller has to provide a value x &gt;= 0\""
            ],
            "guid": "CLxk$$tu>G",
            "note_model_uuid": "2ae32340-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem6::rse"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Documentation contract: What is in the <b>postconditions</b>?",
                "The guarantees provided to the caller after executing the method, given the caller satisfied the precondition."
            ],
            "guid": "Bvk(o/$M:?",
            "note_model_uuid": "2ae32340-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem6::rse"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Documentation: What 2 arguments can be used in the postcondition?",
                "<ul><li>old(...): refers to the previous state</li><li>result: return value</li></ul>"
            ],
            "guid": "GK=-x;q~,=",
            "note_model_uuid": "2ae32340-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem6::rse"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Documentation contracts of&nbsp;{{c1::public methods}} should not refer to&nbsp;{{c2::private fields}}",
                "(as clients may not have direct access to these fields)"
            ],
            "guid": "Lb$9SF|p._",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem6::rse"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "The&nbsp;<i>flyweight pattern&nbsp;</i>{{c1::minimizes memory usage and coupling}} by {{c2::sharing data of (often immutable) objects.}}",
                ""
            ],
            "guid": "z4LU850Knr",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": []
        },
        {
            "__type__": "Note",
            "fields": [
                "{{c1::Coupling}} measures&nbsp;{{c2::interdependence}} between different&nbsp;{{c3::modules}}",
                "<img src=\"paste-6725aff76c37882399c37da8a1351b8542d9f7d8.jpg\">"
            ],
            "guid": "qHQ?3b9n#8",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem6::rse"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Modules that&nbsp;{{c1::expose}} their&nbsp;{{c2::internal}} data representation become&nbsp;{{c3::tightly-coupled}} to their clients",
                ""
            ],
            "guid": "PN|p^wy`+r",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem6::rse"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "{{c1::Information hiding}} is when we&nbsp;{{c2::hide implementation details behind the interface}}",
                ""
            ],
            "guid": "q^)l,&K}Eu",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem6::rse"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "With \"No leaking\" we mean that we&nbsp;{{c1::do not return references to sub-objects}}",
                ""
            ],
            "guid": "C6pcL?!}7f",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem6::rse"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Design patterns are&nbsp;{{c1::general, reusable solutions}} to commonly occuring design problems",
                ""
            ],
            "guid": "z[5cW&xLye",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem6::rse"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "The&nbsp;{{c1::flyweight}} pattern maximizes {{c2::sharing of immutable objects}}",
                ""
            ],
            "guid": "s#h<bFT:$S",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem6::rse"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "021ee8071c62479b8d1629359a00cab7-oa-1",
                "",
                "<img src=\"tmpm0aqus3y.jpg\">",
                "<img src=\"021ee8071c62479b8d1629359a00cab7-oa-1-Q.svg\" />",
                "",
                "",
                "",
                "",
                "",
                "<img src=\"021ee8071c62479b8d1629359a00cab7-oa-1-A.svg\">",
                "<img src=\"021ee8071c62479b8d1629359a00cab7-oa-O.svg\">"
            ],
            "guid": "p_5V-uIdhN",
            "note_model_uuid": "2ae3a982-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem6::rse"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "021ee8071c62479b8d1629359a00cab7-oa-2",
                "",
                "<img src=\"tmpm0aqus3y.jpg\" />",
                "<img src=\"021ee8071c62479b8d1629359a00cab7-oa-2-Q.svg\" />",
                "",
                "",
                "",
                "",
                "",
                "<img src=\"021ee8071c62479b8d1629359a00cab7-oa-2-A.svg\" />",
                "<img src=\"021ee8071c62479b8d1629359a00cab7-oa-O.svg\" />"
            ],
            "guid": "z,lq&zpwbq",
            "note_model_uuid": "2ae3a982-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem6::rse"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "021ee8071c62479b8d1629359a00cab7-oa-4",
                "",
                "<img src=\"tmpm0aqus3y.jpg\" />",
                "<img src=\"021ee8071c62479b8d1629359a00cab7-oa-4-Q.svg\" />",
                "",
                "",
                "",
                "",
                "",
                "<img src=\"021ee8071c62479b8d1629359a00cab7-oa-4-A.svg\">",
                "<img src=\"021ee8071c62479b8d1629359a00cab7-oa-O.svg\">"
            ],
            "guid": "f8opgNn>sM",
            "note_model_uuid": "2ae3a982-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem6::rse"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "22eb571924bc4f0ebd6a2543eb8dd86b-oa-1",
                "",
                "<img src=\"tmpgalvqimz.jpg\" />",
                "<img src=\"22eb571924bc4f0ebd6a2543eb8dd86b-oa-1-Q.svg\" />",
                "",
                "",
                "",
                "",
                "",
                "<img src=\"22eb571924bc4f0ebd6a2543eb8dd86b-oa-1-A.svg\" />",
                "<img src=\"22eb571924bc4f0ebd6a2543eb8dd86b-oa-O.svg\" />"
            ],
            "guid": "K6Ds,^8I*>",
            "note_model_uuid": "2ae3a982-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem6::rse"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "22eb571924bc4f0ebd6a2543eb8dd86b-oa-2",
                "",
                "<img src=\"tmpgalvqimz.jpg\" />",
                "<img src=\"22eb571924bc4f0ebd6a2543eb8dd86b-oa-2-Q.svg\" />",
                "",
                "",
                "",
                "",
                "",
                "<img src=\"22eb571924bc4f0ebd6a2543eb8dd86b-oa-2-A.svg\" />",
                "<img src=\"22eb571924bc4f0ebd6a2543eb8dd86b-oa-O.svg\" />"
            ],
            "guid": "EYI/p4%T-t",
            "note_model_uuid": "2ae3a982-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem6::rse"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "22eb571924bc4f0ebd6a2543eb8dd86b-oa-3",
                "",
                "<img src=\"tmpgalvqimz.jpg\" />",
                "<img src=\"22eb571924bc4f0ebd6a2543eb8dd86b-oa-3-Q.svg\" />",
                "",
                "",
                "",
                "",
                "",
                "<img src=\"22eb571924bc4f0ebd6a2543eb8dd86b-oa-3-A.svg\" />",
                "<img src=\"22eb571924bc4f0ebd6a2543eb8dd86b-oa-O.svg\" />"
            ],
            "guid": "bH~ou{!Tpd",
            "note_model_uuid": "2ae3a982-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem6::rse"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "22eb571924bc4f0ebd6a2543eb8dd86b-oa-4",
                "",
                "<img src=\"tmpgalvqimz.jpg\" />",
                "<img src=\"22eb571924bc4f0ebd6a2543eb8dd86b-oa-4-Q.svg\" />",
                "",
                "",
                "",
                "",
                "",
                "<img src=\"22eb571924bc4f0ebd6a2543eb8dd86b-oa-4-A.svg\" />",
                "<img src=\"22eb571924bc4f0ebd6a2543eb8dd86b-oa-O.svg\" />"
            ],
            "guid": "J}ae^<`~$Q",
            "note_model_uuid": "2ae3a982-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem6::rse"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "22eb571924bc4f0ebd6a2543eb8dd86b-oa-5",
                "",
                "<img src=\"tmpgalvqimz.jpg\" />",
                "<img src=\"22eb571924bc4f0ebd6a2543eb8dd86b-oa-5-Q.svg\" />",
                "",
                "",
                "",
                "",
                "",
                "<img src=\"22eb571924bc4f0ebd6a2543eb8dd86b-oa-5-A.svg\" />",
                "<img src=\"22eb571924bc4f0ebd6a2543eb8dd86b-oa-O.svg\" />"
            ],
            "guid": "ClAPmUr_m9",
            "note_model_uuid": "2ae3a982-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem6::rse"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "22eb571924bc4f0ebd6a2543eb8dd86b-oa-6",
                "",
                "<img src=\"tmpgalvqimz.jpg\" />",
                "<img src=\"22eb571924bc4f0ebd6a2543eb8dd86b-oa-6-Q.svg\" />",
                "",
                "",
                "",
                "",
                "",
                "<img src=\"22eb571924bc4f0ebd6a2543eb8dd86b-oa-6-A.svg\" />",
                "<img src=\"22eb571924bc4f0ebd6a2543eb8dd86b-oa-O.svg\" />"
            ],
            "guid": "fY&fY8C2)F",
            "note_model_uuid": "2ae3a982-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem6::rse"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "22eb571924bc4f0ebd6a2543eb8dd86b-oa-7",
                "",
                "<img src=\"tmpgalvqimz.jpg\" />",
                "<img src=\"22eb571924bc4f0ebd6a2543eb8dd86b-oa-7-Q.svg\" />",
                "",
                "",
                "",
                "",
                "",
                "<img src=\"22eb571924bc4f0ebd6a2543eb8dd86b-oa-7-A.svg\" />",
                "<img src=\"22eb571924bc4f0ebd6a2543eb8dd86b-oa-O.svg\" />"
            ],
            "guid": "EG$~UcI!Vi",
            "note_model_uuid": "2ae3a982-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem6::rse"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "22eb571924bc4f0ebd6a2543eb8dd86b-oa-8",
                "",
                "<img src=\"tmpgalvqimz.jpg\" />",
                "<img src=\"22eb571924bc4f0ebd6a2543eb8dd86b-oa-8-Q.svg\" />",
                "",
                "",
                "",
                "",
                "",
                "<img src=\"22eb571924bc4f0ebd6a2543eb8dd86b-oa-8-A.svg\" />",
                "<img src=\"22eb571924bc4f0ebd6a2543eb8dd86b-oa-O.svg\" />"
            ],
            "guid": "N)q.NBx/Ve",
            "note_model_uuid": "2ae3a982-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem6::rse"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "22eb571924bc4f0ebd6a2543eb8dd86b-oa-9",
                "",
                "<img src=\"tmpgalvqimz.jpg\" />",
                "<img src=\"22eb571924bc4f0ebd6a2543eb8dd86b-oa-9-Q.svg\" />",
                "",
                "",
                "",
                "",
                "",
                "<img src=\"22eb571924bc4f0ebd6a2543eb8dd86b-oa-9-A.svg\" />",
                "<img src=\"22eb571924bc4f0ebd6a2543eb8dd86b-oa-O.svg\" />"
            ],
            "guid": "AG]zm#U3mS",
            "note_model_uuid": "2ae3a982-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem6::rse"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "In the {{c1::observer}} pattern components may&nbsp;{{c2::generate events}} or&nbsp;{{c3::register for events}} of other components using {{c4::a callback}}",
                ""
            ],
            "guid": "uf5n?WE,d$",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem6::rse"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Main strengths of Event-Based Style:<br>-&nbsp;{{c1::Reuse: plug in new components by registering them for events}}<br>-&nbsp;{{c2::Adaptation: add, remove, replace components with minimum effect on other components in the system}}",
                ""
            ],
            "guid": "wFlN54|NsF",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem6::rse"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Weaknesses of event-based-style:<br><ul><li>{{c1::Loss of control: In which order will the components be invoked?}}</li><li>{{c2::Ensuring correctness is difficult, because it depends on the context}}</li></ul>",
                ""
            ],
            "guid": "AI$34=Pl-!",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem6::rse"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "{{c1::Inheritance}} couples the&nbsp;{{c2::sub}}-class to the&nbsp;{{c2::super}}-class",
                ""
            ],
            "guid": "uvYecvWsii",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem6::rse"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "{{c1::Allocations}} couple the&nbsp;{{c2::clients}} to the&nbsp;{{c3::instantiated class}}",
                ""
            ],
            "guid": "exqNcTD~^q",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem6::rse"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "ab341a5be75644eaa7368f793528f1d7-oa-1",
                "",
                "<img src=\"tmpowffrao_.jpg\" />",
                "<img src=\"ab341a5be75644eaa7368f793528f1d7-oa-1-Q.svg\" />",
                "",
                "",
                "",
                "",
                "",
                "<img src=\"ab341a5be75644eaa7368f793528f1d7-oa-1-A.svg\" />",
                "<img src=\"ab341a5be75644eaa7368f793528f1d7-oa-O.svg\" />"
            ],
            "guid": "MPh&dG|<*7",
            "note_model_uuid": "2ae3a982-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem6::rse"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "ab341a5be75644eaa7368f793528f1d7-oa-2",
                "",
                "<img src=\"tmpowffrao_.jpg\">",
                "<img src=\"ab341a5be75644eaa7368f793528f1d7-oa-2-Q.svg\">",
                "",
                "",
                "",
                "",
                "",
                "<img src=\"ab341a5be75644eaa7368f793528f1d7-oa-2-A.svg\">",
                "<img src=\"ab341a5be75644eaa7368f793528f1d7-oa-O.svg\">"
            ],
            "guid": "jw<F,B[F$.",
            "note_model_uuid": "2ae3a982-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem6::rse"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Modules can be made parametric by using&nbsp;{{c1::interfaces}} and&nbsp;{{c1::factories}} instead of {{c2::concrete classes}}",
                ""
            ],
            "guid": "z1pY`-jH4Y",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem6::rse"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Modules can be made parametric by using&nbsp;{{c1::variable values}} instead of constant values",
                ""
            ],
            "guid": "tW7AHJ,L`J",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem6::rse"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "6a9d207efcd3458b956be868beb9cbde-oa-1",
                "",
                "<img src=\"tmpuwcj9g07.jpg\" />",
                "<img src=\"6a9d207efcd3458b956be868beb9cbde-oa-1-Q.svg\" />",
                "",
                "",
                "",
                "",
                "",
                "<img src=\"6a9d207efcd3458b956be868beb9cbde-oa-1-A.svg\" />",
                "<img src=\"6a9d207efcd3458b956be868beb9cbde-oa-O.svg\" />"
            ],
            "guid": "r)XO}$Z`ro",
            "note_model_uuid": "2ae3a982-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem6::rse"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "6a9d207efcd3458b956be868beb9cbde-oa-2",
                "",
                "<img src=\"tmpuwcj9g07.jpg\" />",
                "<img src=\"6a9d207efcd3458b956be868beb9cbde-oa-2-Q.svg\" />",
                "",
                "",
                "",
                "",
                "",
                "<img src=\"6a9d207efcd3458b956be868beb9cbde-oa-2-A.svg\" />",
                "<img src=\"6a9d207efcd3458b956be868beb9cbde-oa-O.svg\" />"
            ],
            "guid": "D$Ybvt.-bk",
            "note_model_uuid": "2ae3a982-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem6::rse"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "6a9d207efcd3458b956be868beb9cbde-oa-3",
                "",
                "<img src=\"tmpuwcj9g07.jpg\" />",
                "<img src=\"6a9d207efcd3458b956be868beb9cbde-oa-3-Q.svg\" />",
                "",
                "",
                "",
                "",
                "",
                "<img src=\"6a9d207efcd3458b956be868beb9cbde-oa-3-A.svg\" />",
                "<img src=\"6a9d207efcd3458b956be868beb9cbde-oa-O.svg\" />"
            ],
            "guid": "NPtU3JVM]J",
            "note_model_uuid": "2ae3a982-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem6::rse"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "In Unit Testing we are testing {{c1::individual subsystems (collection of classes, or a single class)}}",
                ""
            ],
            "guid": "D0u4{mBGHt",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem6::rse"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "{{c2::Exhaustive}} testing is when a unit is tested for&nbsp;{{c1::every possible input}}",
                ""
            ],
            "guid": "nzkJu|rCi",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem6::rse"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "{{c1::Random}} testing is when a unit is tested&nbsp;{{c2::with random inputs}}",
                ""
            ],
            "guid": "u41B9imTVk",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem6::rse"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "What is the main disadvantage of random testing?<br>-&nbsp;{{c1::Treats all inputs as equally valuable}}",
                ""
            ],
            "guid": "Hb#v9j|Ffq",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem6::rse"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "{{c1::Functional}} testing&nbsp;tests units by&nbsp;{{c2::using requirements knowledge to derive test cases}}",
                ""
            ],
            "guid": "L[1$v]wr$I",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem6::rse"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "What is a limitation of functional testing?<br>-&nbsp;{{c1::Does not reveal errors in the specification (missing cases)}}",
                ""
            ],
            "guid": "ht%}>4U?im",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem6::rse"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "{{c1::Structural}} testing&nbsp;uses&nbsp;{{c2::design knowledge about the system structure, algorithms}} to&nbsp;{{c3::derive test cases that exercise a large portion of the code}}",
                "<img src=\"paste-e87f2d290398114b64a91247adf2baee01fd5c4d.jpg\">"
            ],
            "guid": "gK>:g@46}n",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem6::rse"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "What is a limitation for structural testing?<br>-&nbsp;{{c1::It requires design knowledge of the algorithm.}}",
                ""
            ],
            "guid": "DYp*ax]L{4",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem6::rse"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "In&nbsp;{{c1::partition}} testing inputs are divided into&nbsp;{{c2::equivalence classes}}.",
                "<img src=\"paste-5fe060e70f819572e68ca9ef0f78d2d5bccf4c89.jpg\">"
            ],
            "guid": "qKi6AEUtUh",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem6::rse"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "In&nbsp;{{c1::combinatorial}} testing we combine {{c2::equivalence classes}} and&nbsp;{{c3::boundary testing}}",
                ""
            ],
            "guid": "eoK{q9uGmh",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem6::rse"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "In the&nbsp;<b>Observer Pattern</b>, the&nbsp;<i>subject</i>&nbsp;has {{c1::a list of dependents (observers) and notifies them of state changes through calling a method.}}",
                ""
            ],
            "guid": "Ci>!E>7&JJ",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem6::rse"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "In the <b>Model-View-Controller</b>&nbsp;architecture,&nbsp;<br><ul><li>the model {{c1::contains core functionality &amp; data}}</li><li>the views {{c2::display information to the user}}</li><li>the controllers {{c3::handle user input}}</li></ul>",
                ""
            ],
            "guid": "k1fk*C<rL0",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem6::rse"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "A disadvantage of event-based architectures is that we {{c1::lose control (who responds, in what order, etc.)}}.",
                ""
            ],
            "guid": "!ZrKZ;Af;",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem6::rse"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "The <b>Strategy Pattern</b>&nbsp;allows {{c1::selecting an algorithm / option at runtime}}.",
                "e.g. different filters depending on type"
            ],
            "guid": "Eu_*si.M)P",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem6::rse"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "CI stands for&nbsp;{{c1::continuous integration}}",
                ""
            ],
            "guid": "duva[q!ps:",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem6::rse"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "CFG stands for&nbsp;{{c1::Control Flow Graph}}",
                ""
            ],
            "guid": "OXs57+IG3>",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem6::rse"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "An <b>intraprocedural </b>CFG of a procedure&nbsp;\\(p\\)&nbsp;is a graph (\\(N\\),\\(E\\)) where:<br><ul><li>N is the set of {{c2::basic blocks in&nbsp;\\(p\\) plus designated entry and exit blocks}}</li><li>E contains</li><ul><li>an edge from&nbsp;\\(a\\)&nbsp;to&nbsp;\\(b\\)&nbsp;with condition&nbsp;\\(c\\)&nbsp;iff {{c1::the execution of the basic block&nbsp;\\(a\\)&nbsp;is succeeded by the execution of&nbsp;\\(b\\)&nbsp;if the condition&nbsp;\\(c\\)&nbsp;holds}}</li><li>an edge (entry,&nbsp;\\(a\\), true) if {{c3::\\(a\\)&nbsp;is the first basic block of&nbsp;\\(p\\)}}</li><li>edges (\\(b\\), exit, true) {{c4::for each basic block&nbsp;\\(b\\)&nbsp;that ends with a return statement}}</li></ul></ul>",
                ""
            ],
            "guid": "i^<X,%0sPr",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem6::rse"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Statement coverage is {{c1::how many of the statements were executed}}",
                "<img src=\"paste-d179af7f24cde56feec56201e8f2ee4fa0a3812a.jpg\">"
            ],
            "guid": "w0I3y6[k!2",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem6::rse"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Branch coverage tests {{c1::all the possible branches in the control flow}}",
                "<img src=\"paste-89f5462098516e5b4526a8847e7a17fc022efcd3.jpg\">"
            ],
            "guid": "f3c^U*Cu<K",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem6::rse"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Branch coverage =&nbsp;{{c1::\\(\\frac{\\text{Number of executed branches} }{\\text{Total number of branches} }\\)}}",
                ""
            ],
            "guid": "E=,-:(D2hT",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem6::rse"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Statement coverage =&nbsp;{{c1::\\(\\frac{\\text{Number of executed statements} }{\\text{Total number of statements} }\\)}}",
                ""
            ],
            "guid": "bDIEBR7Bg,",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem6::rse"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Branch coverage leads to&nbsp;{{c1::more}} thorough testing than statement coverage",
                ""
            ],
            "guid": "o+s{V}k&WV",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem6::rse"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Path coverage tests&nbsp;{{c1::all possible paths through the CFG}}",
                "<img src=\"paste-73ec765fe2842f3ad6e18c35769888542745d24f.jpg\">"
            ],
            "guid": "QKgYYEk0e*",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem6::rse"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Path coverage =&nbsp;{{c1::\\(\\frac{\\text{Number of executed paths} }{\\text{Total number of paths} }\\)}}",
                ""
            ],
            "guid": "CO0jjb|r,s",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem6::rse"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Path coverage leads to&nbsp;{{c1::more}}&nbsp;thorough testing&nbsp;than both statement and branch coverage",
                ""
            ],
            "guid": "HU1f9eoB{X",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem6::rse"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Loop coverage =&nbsp;{{c1::\\(\\frac{\\binom{\\text{Number of executed loops} }{\\text{with 0,1 and more than 1 iterations} } }{\\text{Total number of loops * 3} }\\)}}",
                ""
            ],
            "guid": "k&+-G-#4Yx",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem6::rse"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "In <b>loop coverage</b>, for each loop, test&nbsp;{{c1::zero, one and more than one consecutive iterations}}",
                "<img src=\"paste-7edbf0e01c6293c344cc63b00901549adde7273e.jpg\">"
            ],
            "guid": "w[GPqNkK+f",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem6::rse"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "An advantage of holding out less data (smaller test set) is that we are {{c1::more likely to get a better model}}.",
                ""
            ],
            "guid": "s~L^mS%.Jj",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem6::iml"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "An advantage of holding out more data (larger test set) is that we are {{c1::able to better estimate the generalization error}}.",
                ""
            ],
            "guid": "Ph$)qEq~M]",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem6::iml"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "The training set is used to {{c1::find the best parameters of a given method}}.",
                ""
            ],
            "guid": "ct!1<E>7Ok",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem6::iml"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "The validation set is used to {{c1::find the best method}}.",
                ""
            ],
            "guid": "deEOh9$*%)",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem6::iml"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "The test set is used to {{c1::check how good our model performs}}.",
                ""
            ],
            "guid": "P^c[xpcuo-",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem6::iml"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Underfitting is driven by the {{c1::bias}}.",
                ""
            ],
            "guid": "w@Gz>T$yfx",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem6::iml"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Overfitting is driven by the {{c1::variance}}.",
                ""
            ],
            "guid": "EDF!D_MATb",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem6::iml"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Lasso regression limits the&nbsp;{{c1::\\(l_1\\)-norm}}.",
                ""
            ],
            "guid": "EN=(HA};&h",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem6::iml"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Ridge regression limits the&nbsp;{{c1::\\(l_2\\)-norm}}.",
                ""
            ],
            "guid": "qPR^$NQVU1",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem6::iml"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "In classification,&nbsp;<b>precision</b>&nbsp;is {{c1::the number of true positives over the number of elements labelled as positive}}.",
                ""
            ],
            "guid": "jD{x4[R;Q2",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem6::iml"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "In classification,&nbsp;<b>recall</b>&nbsp;is the {{c1::number of true positives divided by the number of actually positive elements}}.",
                ""
            ],
            "guid": "GslpMQ%i4D",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem6::iml"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Statement coverage leads to&nbsp;{{c1::less}} thorough testing than branch coverage",
                ""
            ],
            "guid": "e&u81Mhltk",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem6::rse"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Statement and branch coverage&nbsp;lead to&nbsp;{{c1::less}}&nbsp;thorough testing&nbsp;than path coverage&nbsp;",
                ""
            ],
            "guid": "zQup>b%|WT",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem6::rse"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "A complete lattice is a poset where {{c1::every subset has a least upper and greatest lower bound.}}&nbsp;",
                ""
            ],
            "guid": "dnJ=^oKkX+",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem6::rse"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "<b>Step 1</b> of proving an assertion",
                "<img src=\"paste-db1b5d120a685054395f3bc087b70846da437d5c.jpg\">"
            ],
            "guid": "pZ/XsR,sgT",
            "note_model_uuid": "2ae32340-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem6::rse"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "<b>Step 2</b>&nbsp;of proving an assertion<br>(after abstraction)",
                "<img src=\"paste-c84fafc48a0d1bb11bcbfef690d281dfb87a47d1.jpg\"><br><img src=\"paste-615ba6ef6072a1dc13391f80f8ac2d9094a1d03f.jpg\">"
            ],
            "guid": "Dq5@|.#@9W",
            "note_model_uuid": "2ae32340-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem6::rse"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "<b>Step 3</b>&nbsp;of proving an assertion<br>(after transformation)",
                "<img src=\"paste-1793e63e5d1784d095cd692abf42ffcb9452a2b2.jpg\">"
            ],
            "guid": "nEkIW?=w#x",
            "note_model_uuid": "2ae32340-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem6::rse"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "<b>Step 4</b>&nbsp;of proving an assertion<br>(after iterating to a fixed point)",
                "<img src=\"paste-8eb3e3a8ebe34dfd14f253af2a555c2b1569eb0c.jpg\">"
            ],
            "guid": "juXEdz.}w>",
            "note_model_uuid": "2ae32340-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem6::rse"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "A {{c2::join}} between A and B is denoted as&nbsp;{{c1::\\(A \\sqcup B\\)}}",
                ""
            ],
            "guid": "mp@Z?01%6_",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem6::rse"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "A&nbsp;{{c1::<span style=\"color: rgb(255, 0, 0);\">complete lattice</span>}} (L,&nbsp;\\(\\sqsubseteq\\),&nbsp;\\(\\sqcup\\)) is a {{c2::poset}} where {{c3::\\(\\sqcup Y\\)&nbsp;and&nbsp;\\(\\sqcap Y\\)}} exist for any&nbsp;\\(Y\\subseteq L\\)",
                "(For example, for a set&nbsp;\\(L\\), \\((\\mathcal{P}(L),\\subseteq, \\cup, \\cap)\\)&nbsp;is a complete<br>lattice.)<br><img src=\"paste-e3e2228747b18747d291f49eff9b24c97f545256.jpg\">"
            ],
            "guid": "h.W,AkHKnQ",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem6::rse"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "A&nbsp;{{c1::function f}}:&nbsp;\\(A \\to B\\)&nbsp;between two posets (A,&nbsp;\\(\\sqsubseteq\\)) and (B,&nbsp;\\(\\leq\\)) is {{c2::<span style=\"color: rgb(255, 0, 0);\">increasing (monotone)</span>}}:&nbsp;\\(\\forall a,b\\in A:\\)&nbsp;{{c3::\\(a\\sqsubseteq b\\Rightarrow f(a)\\leq f(b)\\)}}",
                ""
            ],
            "guid": "ekl?NLMcrS",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem6::rse"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "For a poset (L,&nbsp;\\(\\sqsubseteq\\)), function f:&nbsp;\\(L\\to L\\), and element&nbsp;\\(x\\in L\\):<br>- x is a {{c1::fixed point}} iff f(x) = x",
                ""
            ],
            "guid": "DkKd1ZguM=",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem6::rse"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "{{c2::Fix(f)}} denotes the set of all {{c1::fixed points}}",
                ""
            ],
            "guid": "o!)HPR@]=|",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem6::rse"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "{{c2::Red(f)}} denotes the set of all {{c1::post-fixedpoints}}",
                ""
            ],
            "guid": "j;{O$^.NF6",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem6::rse"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "For a poset (L,&nbsp;\\(\\sqsubseteq\\)), function&nbsp;\\(f:L\\to L\\), we say that&nbsp;{{c2::\\(lfp^\\sqsubseteq f\\)}}&nbsp;\\(\\in L\\)&nbsp;is a {{c1::least fixed point}} of&nbsp;\\(f\\)",
                ""
            ],
            "guid": "c+aGa7;*sj",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem6::rse"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "For a poset (L,&nbsp;\\(\\sqsubseteq\\)), function&nbsp;\\(f:L\\to L\\), we say that&nbsp;{{c2::\\(\\text{lfp}^\\sqsubseteq f\\)}}&nbsp;\\(\\in L\\)&nbsp;is a {{c1::least fixed point}} of&nbsp;\\(f\\)&nbsp;if:<br><ul><li>{{c3::\\(\\text{lfp}^\\sqsubseteq f\\)&nbsp;is a fixed point.}}</li><li>{{c4::It is the least fixed point:&nbsp;\\(\\forall a\\in L: a = f(a) \\Rightarrow lfp^\\sqsubseteq f\\sqsubseteq a\\)}}<br></li></ul>",
                "<img src=\"paste-428c02a526438244adf3e2e04adb2bd973e8619a.jpg\">"
            ],
            "guid": "mJY<O]P0P,",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem6::rse"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "{{c1::Tarski's fixed point}}<b>&nbsp;theorem</b>:&nbsp;<br>If&nbsp;\\((L,\\sqsubseteq,\\sqcup,\\sqcap,\\bot,\\top)\\)&nbsp;is a {{c4::complete lattice}} and&nbsp;\\(f:L\\to L\\)&nbsp;is a {{c5::monotone function}}, then:<br>{{c2::\\(\\text{lfp}^\\sqsubseteq f\\)&nbsp;exists}}, and<br>\\({{c2::\\text{lfp}^\\sqsubseteq f}} = {{c3::\\sqcap \\text{ Red}(f)\\in \\text{Fix}(f)}}\\)",
                ""
            ],
            "guid": "f-{gPNFq/[",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem6::rse"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "{{c1::Tarski}}'s theorem tells us that a fixed point exists, but {{c2::does not actually suggest an algorithm for computing it}}.",
                ""
            ],
            "guid": "O?cQ(E8U5}",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem6::rse"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "\\(f^{{{c2::n+1}}}(a)=f({{c1::f^n(a)}})\\)",
                ""
            ],
            "guid": "q(^eHmv!UM",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem6::rse"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Given a poset of {{c1::finite height}}, a {{c1::least element}}&nbsp;\\(\\bot\\), a {{c1::<span style=\"color: rgb(255, 0, 0);\">monotone</span>}}&nbsp;\\(f\\).<br><br>Then the iterates&nbsp;\\(f^0(\\bot), f^1(\\bot), f^2(\\bot), \\ldots\\)&nbsp;eventually stabilize for some&nbsp;\\(n\\in N\\), that is:<br>\\(f^{{{c2::n}} }(\\bot)=f^{{{c2::n+1}}}(\\bot)\\)&nbsp;and:<br>\\({{c3::lfp^\\sqsubseteq f}}={{c4::f^n(\\bot)}}\\)",
                ""
            ],
            "guid": "Mm[`BkomRg",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem6::rse"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "{{c2::\\([\\![P]\\!]\\)}} is the&nbsp;{{c1::set of reachable states of a program&nbsp;\\(P\\)}}",
                ""
            ],
            "guid": "KS3h[c3}0`",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem6::rse"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Given functions:<br>\\(F:C\\to C\\)<br>\\(F^\\#:A\\to A\\)<br>what does it mean for&nbsp;\\(F^\\#\\)&nbsp;to approximate&nbsp;\\(F\\)?<br>\\(\\forall x\\in C: {{c1::F(x)\\sqsubseteq_C F^\\#(x)}}\\)",
                ""
            ],
            "guid": "q?{}!t5>f6",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem6::rse"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "How to approximate a function given:<br>\\(F:X\\to X\\)<br>\\(F^\\#:Y\\to Y\\)<br>{{c2::\\(Y\\)}}&nbsp;is the {{c1::abstract}} and&nbsp;{{c2::\\(X\\)}}&nbsp;is the {{c1::concrete}}",
                ""
            ],
            "guid": "C8T_Os`?hA",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem6::rse"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "How to approximate a function given:<br>\\(F:C\\to C\\)<br>\\(F^\\#:A\\to A\\)<br>We need to connect the {{c1::concrete&nbsp;\\(C\\)}}&nbsp;and the {{c1::abstract&nbsp;\\(A\\)}}",
                ""
            ],
            "guid": "unkEEcc=h2",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem6::rse"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "How to approximate a function given:<br>\\(F:C\\to C\\)<br>\\(F^\\#:A\\to A\\)<br><br>{{c2::\\(\\alpha:C\\to A\\)}}&nbsp;is called the {{c1::<span style=\"color: rgb(255, 0, 0);\">abstraction</span>}} function<br>{{c2:: \\(\\gamma:A\\to C\\)}}&nbsp;is called the {{c1::<span style=\"color: rgb(255, 0, 0);\">concretization</span>}} function",
                "<img src=\"paste-375d775a9b1bc0b9c8fe04f548f5deb82eb83ed3.jpg\">"
            ],
            "guid": "NIxXv;mXHM",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem6::rse"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "The {{c2::<span style=\"color: rgb(255, 0, 0);\">least precise</span>}} approximation&nbsp;for&nbsp;\\(F\\)&nbsp;is simply {{c1::\\(F^\\#(z)=\\top\\)}}",
                "(However, it is not practically useful as it is too imprecise. It is always <b><span style=\"color: rgb(255, 0, 0);\">sound</span></b>.)"
            ],
            "guid": "kQlM=_H)ma",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem6::rse"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "The {{c2::<span style=\"color: rgb(255, 0, 0);\">most precise</span>}}&nbsp;approximation&nbsp;for&nbsp;\\(F\\)&nbsp;is {{c1::\\(F^\\#(z)=\\alpha(F(\\gamma(z)))\\)}}",
                "<img src=\"paste-d4b3f7a5e2a953c75298bdcbb23c0c56e7715914.jpg\">"
            ],
            "guid": "Ml3N0Eo_=;",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem6::rse"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "{{c2::\\([\\![action]\\!]\\)}} is often referred to as the&nbsp;{{c1::<span style=\"color: rgb(255, 0, 0);\">abstract transformer</span>}}",
                ""
            ],
            "guid": "u]&8K>C>AF",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem6::rse"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Mathematical Concept:<br>{{c2::Bottom&nbsp;\\((\\bot)\\)}}<br><br>Use in Static Analysis:<br>{{c1::Used for initialization of all but initial elements}}",
                ""
            ],
            "guid": "DC~kXK)5#c",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem6::rse"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Mathematical Concept:<br>{{c2::Joins&nbsp;\\((\\sqcup)\\)}}<br><br>Use in Static Analysis:<br>{{c1::Combines facts arriving at a program point}}",
                ""
            ],
            "guid": "b`U7~PQp;g",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem6::rse"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Mathematical Concept:<br>{{c2::Complete Lattice}}<br><br>Use in Static Analysis:<br>{{c1::Defines Abstract Domain and ensure joins exist}}",
                ""
            ],
            "guid": "e#L{TF:M]K",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem6::rse"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Mathematical Concept:<br>{{c2::Widening&nbsp;\\((\\triangledown)\\)}}<br><br>Use in Static Analysis:<br>{{c1::Used to guarantee analysis termination}}",
                ""
            ],
            "guid": "t=:#D.4iqK",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem6::rse"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Mathematical Concept:<br>{{c2::Tarski's Theorem}}<br><br>Use in Static Analysis:<br>{{c1::Ensures fixed points exist}}",
                ""
            ],
            "guid": "uv!~&yr~lo",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem6::rse"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "<b>Example of lifting</b>:<br>We have x, y, and we lift to&nbsp;\\(\\text{Var}\\to L^i\\):<br><br>Let map1 be:&nbsp;\\(\\{x\\to[1,5], y\\to[7,10]\\}\\)<br>Let map2 be:&nbsp;\\(\\{x\\to[2,6], y\\to[6,9]\\}\\)<br><br>Then<br><ul><li>map3 = (map1&nbsp;\\(\\sqcap\\)&nbsp;map2) =&nbsp;{{c2::\\(\\{x\\to[2,5], y\\to[7,9]\\}\\)}}</li><li>map4 = (map1&nbsp;\\(\\sqcup\\)&nbsp;map2) =&nbsp;{{c2::\\(\\{x\\to[1,6], y\\to[6,10]\\}\\)}}</li><li>(map3&nbsp;\\(\\sqsubseteq\\)&nbsp;map4) is {{c1::true}}</li></ul>",
                ""
            ],
            "guid": "B-q:n_8+h3",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem6::rse"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "If we add&nbsp;\\(\\bot_i\\)&nbsp;to any other element, we get&nbsp;{{c1::\\(\\bot_i\\)}}",
                ""
            ],
            "guid": "w`j<(P0<pH",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem6::rse"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "If both operands are not&nbsp;\\(\\bot_i\\), we get:<br>\\([x,y] + [p,q] = {{c1::[x+p, y+q]}}\\)",
                "(Same for&nbsp;\\(*\\))"
            ],
            "guid": "jfI3Kd._PP",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem6::rse"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "The operator {{c1::\\(\\triangledown: L\\times L\\to L\\)}}&nbsp;is called a {{c2::<span style=\"color: rgb(255, 0, 0);\">widening</span>}}&nbsp;operator",
                ""
            ],
            "guid": "x>HaVGa#9I",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem6::rse"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "The operator \\(\\triangledown: L\\times L\\to L\\)&nbsp;is called a <span style=\"color: rgb(255, 0, 0);\">widening</span>&nbsp;operator if:<br><ul><li>{{c2::\\(\\forall a,b\\in L: a\\sqcup b\\sqsubseteq a\\triangledown b\\)&nbsp;(widening <span style=\"color: rgb(255, 0, 0);\">approximates</span> the join)}}<br></li><li>if&nbsp;\\(x^0\\sqsubseteq x^1\\sqsubseteq x^2 \\sqsubseteq\\ldots\\sqsubseteq x^n\\)&nbsp;is {{c3::an increasing sequence}},<br>then&nbsp;\\(y^0\\sqsubseteq y^1\\sqsubseteq y^2 \\sqsubseteq\\ldots\\sqsubseteq y^n\\)&nbsp;{{c4::<span style=\"color: rgb(255, 0, 0);\">stabilizes</span> after a <span style=\"color: rgb(255, 0, 0);\">finite number of steps</span>}}<br>where&nbsp;\\(y^0=x^0\\)&nbsp;and&nbsp;\\(\\forall i\\geq 0: y^{i+1}={{c1::y^i\\triangledown x^{i+1} }}\\)<br></li></ul>",
                ""
            ],
            "guid": "s_xfj%k<}(",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem6::rse"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "The <span style=\"color: rgb(255, 0, 0);\">fixed point</span> is the&nbsp;{{c1::over-approximation}} of the program",
                ""
            ],
            "guid": "J}g-qJ6cXQ",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem6::rse"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "We select/define an abstract domain based on the&nbsp;{{c1::type of <span style=\"color: rgb(255, 0, 0);\">properties</span> we want to prove}}",
                ""
            ],
            "guid": "l{ym$xRM:t",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem6::rse"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Interval Domain:<br>\\([a,b]\\sqsubseteq_i [c,d]\\)&nbsp;if&nbsp;{{c1::\\(a\\geq c, b \\leq d\\)}}",
                ""
            ],
            "guid": "mE~kfAC@ES",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem6::rse"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Interval Domain:<br>\\([a,b]\\sqcup_i [c,d] = {{c1::[\\min(\\{a,c\\}), \\;\\max(\\{b,d\\})] }}\\)",
                ""
            ],
            "guid": "w0Wq[iANd}",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem6::rse"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "{{c2::\\(\\text{wdi}(a,b)\\)}} is the&nbsp;{{c1::well-defined interval}}",
                ""
            ],
            "guid": "x)|a{GHY$Z",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem6::rse"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "\\(L^i\\)&nbsp;domain defines&nbsp;{{c1::intervals}}",
                "<img src=\"paste-d3c832516e4c6fba578d627a1673fd102c9299b0.jpg\">"
            ],
            "guid": "D(+~q,c=ca",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem6::rse"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "\\(\\text{Var}\\)&nbsp;defines the&nbsp;{{c1::variables}} in a program",
                ""
            ],
            "guid": "bd]yVrl02u",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem6::rse"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "\\(\\text{Lab} \\to (\\text{Var} \\to \\text{L}^i)\\)&nbsp;means that&nbsp;{{c1::at each label}} and {{c1::for each variable}}, we will {{c2::keep the interval for that variable}}",
                ""
            ],
            "guid": "dlv_A71uGN",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem6::rse"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Generic Template:<br>\\(F^\\#: {{c1::(Lab \\to A)}} \\to {{c1::(Lab \\to A)}}\\)",
                ""
            ],
            "guid": "Pg;hYwGSpO",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem6::rse"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "What is&nbsp;\\((\\ell',\\text{action},\\ell)\\)?<br><br>({{c1::program counter}}, {{c1::action that will be executed}}, {{c1::next program counter}})",
                "<img src=\"paste-3715dace1d8462a21e74b3b7c524a70adfc6cb15.jpg\">"
            ],
            "guid": "fw2p->/<04",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem6::rse"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "\\((\\ell',\\text{action},\\ell)\\)&nbsp;is an&nbsp;{{c1::edge}} in the control-flow graph",
                ""
            ],
            "guid": "JgrFXSiE)o",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem6::rse"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "If there exists a transition&nbsp;\\(t=\\langle\\ell',\\sigma'\\rangle\\to\\langle\\ell,\\sigma\\rangle\\)&nbsp;in a program trace in&nbsp;\\(P\\), then {{c1::\\((\\ell',\\text{action},\\ell)\\)}} must exist.<br>This says that we are&nbsp;{{c2::sound}}:&nbsp;{{c2::we never miss a flow}}",
                "<img src=\"paste-dff51e4848feb8bc0024b48f3bd8f6e27d2b8e94.jpg\">"
            ],
            "guid": "Es<YWVZtg>",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem6::rse"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Iterate abstract transformers over the {{c2::abstract domain}} until&nbsp;{{c1::we reach a fixed point}}",
                ""
            ],
            "guid": "z)mE*$4N/-",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem6::rse"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "The solution to {{c1::a function that keeps iterating}} is to use the&nbsp;{{c2::widening}} operator",
                ""
            ],
            "guid": "JIv4*@!T)Z",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem6::rse"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Widening approximates the&nbsp;{{c1::join}}",
                ""
            ],
            "guid": "cQ]X?l+j^a",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem6::rse"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "a5af1529db054270983497285ee2ce55-ao-1",
                "",
                "<img src=\"tmpocamsn1a.jpg\" />",
                "<img src=\"a5af1529db054270983497285ee2ce55-ao-1-Q.svg\" />",
                "",
                "",
                "",
                "",
                "",
                "<img src=\"a5af1529db054270983497285ee2ce55-ao-1-A.svg\" />",
                "<img src=\"a5af1529db054270983497285ee2ce55-ao-O.svg\" />"
            ],
            "guid": "q]q,bz$}5d",
            "note_model_uuid": "2ae3a982-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem6::rse"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "a5af1529db054270983497285ee2ce55-ao-2",
                "",
                "<img src=\"tmpocamsn1a.jpg\" />",
                "<img src=\"a5af1529db054270983497285ee2ce55-ao-2-Q.svg\" />",
                "",
                "",
                "",
                "",
                "",
                "<img src=\"a5af1529db054270983497285ee2ce55-ao-2-A.svg\" />",
                "<img src=\"a5af1529db054270983497285ee2ce55-ao-O.svg\" />"
            ],
            "guid": "u&d.:xuKix",
            "note_model_uuid": "2ae3a982-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem6::rse"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "a5af1529db054270983497285ee2ce55-ao-3",
                "",
                "<img src=\"tmpocamsn1a.jpg\" />",
                "<img src=\"a5af1529db054270983497285ee2ce55-ao-3-Q.svg\" />",
                "",
                "",
                "",
                "",
                "",
                "<img src=\"a5af1529db054270983497285ee2ce55-ao-3-A.svg\" />",
                "<img src=\"a5af1529db054270983497285ee2ce55-ao-O.svg\" />"
            ],
            "guid": "NSw:VccYH!",
            "note_model_uuid": "2ae3a982-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem6::rse"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "a5af1529db054270983497285ee2ce55-ao-4",
                "",
                "<img src=\"tmpocamsn1a.jpg\" />",
                "<img src=\"a5af1529db054270983497285ee2ce55-ao-4-Q.svg\" />",
                "",
                "",
                "",
                "",
                "",
                "<img src=\"a5af1529db054270983497285ee2ce55-ao-4-A.svg\" />",
                "<img src=\"a5af1529db054270983497285ee2ce55-ao-O.svg\" />"
            ],
            "guid": "z%I:]`@[#+",
            "note_model_uuid": "2ae3a982-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem6::rse"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "\\([a,b]\\triangledown[c,d] = [e,f]\\)&nbsp;where:<br><ul><li>if&nbsp;{{c1::\\(a&gt;c\\)}}, then {{c1::\\(e=-\\infty\\)}}, else {{c1::\\(e=a\\)}}<br></li><li>if&nbsp;{{c1::\\(b&lt;d\\)}}, then {{c1::\\(f=\\infty\\)}}, else {{c1::\\(f=b\\)}}<br></li></ul>",
                ""
            ],
            "guid": "DQ5]V<R%kT",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem6::rse"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "For&nbsp;\\([a,b]\\triangledown[c,d] = [e,f]\\), if one of the operands is&nbsp;\\(\\bot\\)&nbsp;the result is&nbsp;{{c1::the other operand}}.",
                ""
            ],
            "guid": "b-YuJ/5GF2",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem6::rse"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "When using the widening operator we are able to reach a&nbsp;{{c1::fixed point}} in a program where there is a variable that keeps increasing",
                "Notice the&nbsp;\\([7,\\infty]\\)&nbsp;that happen because&nbsp;\\(y\\)&nbsp;is at least 7 at those points and always increases with each iteration<br><img src=\"paste-900a0d10aecea56a5ca890654592b4d95691d29d.jpg\">"
            ],
            "guid": "F_2t0+hlgN",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem6::rse"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Looking at the concrete store:<br><ul><li>\\(\\text{Objs}\\)&nbsp;is the&nbsp;{{c1::set of all possible objects}}<br></li><li>\\(\\text{PtrVal} = {{c2::\\text{Objs}\\cup\\{\\text{null}\\} }}\\)<br></li></ul>",
                ""
            ],
            "guid": "OwDF^@tj#d",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem6::rse"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Two pointers are {{c1::aliases}} if {{c2::they point to the same object}}",
                ""
            ],
            "guid": "bFa/unFJMe",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem6::rse"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "{{c2::Points-to pair (p,A)}} means {{c1::p holds the address of object A}}",
                ""
            ],
            "guid": "pn8Y)d]$/(",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem6::rse"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "<ul><li>Divide heap into a fixed partition based on allocation site (the statement label)</li><li>All objects located at the same program point (label get represented by a single \"abstract object\"</li></ul>",
                "How to handle dynamically allocated objects:",
                "<img src=\"paste-dcf031581a2d8e864ded340b1e24747a9b0e332f.jpg\"><br><img src=\"paste-e4ee92045b6c2c5267ea1f031151bc83246e99c0.jpg\">",
                "",
                "0,1,0 | n,n,n,n",
                "<ul><li>{{c1::Divide heap into a fixed partition based on allocation site (the statement label)}}</li><li>...</li></ul>",
                "<ul><li>...</li><li>{{c2::All objects located at the same program point (label get represented by a single \"abstract object\"}}</li></ul>",
                "<ul></ul>",
                "<ul></ul>",
                "<ul></ul>",
                "<ul></ul>",
                "<ul></ul>",
                "<ul></ul>",
                "<ul></ul>",
                "<ul></ul>",
                "<ul></ul>",
                "<ul></ul>",
                "<ul></ul>",
                "<ul></ul>",
                "<ul></ul>",
                "<ul></ul>",
                "<ul></ul>",
                "<ul></ul>",
                "<ul></ul>",
                "<ul></ul>",
                "<ul><li>{{c21::Divide heap into a fixed partition based on allocation site (the statement label}}</li><li>{{c21::All objects located at the same program point (label get represented by a single \"abstract object\"}}</li></ul>"
            ],
            "guid": "nXyxR5FIdN",
            "note_model_uuid": "2ae7be8c-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem6::rse"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Using <span style=\"color: rgb(255, 0, 0);\">allocation sites</span> (labels), abstract objects are defined as:<br>\\(\\text{AbsObj}={{c1::\\{\\ell\\;|\\;\\text{statement is }p:=\\text{alloc}^\\ell\\} }}\\)",
                ""
            ],
            "guid": "h>+[#iI+EK",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem6::rse"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Two kinds of pointer analysis:<br><ul><li>{{c1::Flow sensitive}}</li><li>{{c1::Flow insensitive}}<br></li></ul>",
                ""
            ],
            "guid": "qC/$[u$~[R",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem6::rse"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Flow {{c2::sensitive}} pointer analysis {{c1::respects the program control flow}}",
                ""
            ],
            "guid": "hb^K`J0/)_",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem6::rse"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Flow {{c2::insensitive}} pointer analysis {{c1::assumes all execution orders are possible (abstracts away order between statements)}}",
                ""
            ],
            "guid": "ncLwF:n2dd",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem6::rse"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Flow {{c2::insensitive}} pointer analysis is good for&nbsp;{{c1::concurrency (if not too imprecise)}}",
                ""
            ],
            "guid": "7fiYeT>!9",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem6::rse"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Two pointers a and b&nbsp;<span style=\"color: rgb(255, 0, 0);\">may alias</span> if:<br>{{c1::points-to (a)&nbsp;\\(\\cap\\)&nbsp;points-to (b)&nbsp;\\(\\neq \\emptyset\\)}}",
                ""
            ],
            "guid": "F`yV^x4}P}",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem6::rse"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "A function <span style=\"color: rgb(255, 0, 0);\">points-to (p)</span> returns the {{c1::set of all abstract objects that a pointer <span style=\"color: rgb(255, 0, 0);\">p</span> can point to}}",
                ""
            ],
            "guid": "GfOk&$7JJe",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem6::rse"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Coupling measures {{c1::how much modules depend on each other}}.",
                "<img src=\"Screenshot_20230509_085330.jpeg\">"
            ],
            "guid": "m<EZOz;g9.",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem6::rse"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Procedural Coupling: Modules are coupled to other modules {{c1::whose methods they call}}.",
                ""
            ],
            "guid": "mm7Zv0,o?8",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem6::rse"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "An event-based style (e.g. MVC) helps with {{c1::procedural}} coupling.",
                ""
            ],
            "guid": "sT57ik6&l.",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem6::rse"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Class Coupling: {{c1::Inheritance}} couples a class to another class.",
                ""
            ],
            "guid": "J[%<|JIFB,",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem6::rse"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "The \"Fragile base class problem\" is an OOP problem where {{c1::seemingly safe modifications to a base class may break subclasses}}.",
                ""
            ],
            "guid": "Q;3J;IavU*",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem6::rse"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "By using interfaces, we can often reduce {{c1::class}} coupling.",
                ""
            ],
            "guid": "v0TOi]x`nA",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem6::rse"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "We can reduce class coupling from allocations by delegating these to a so-called {{c1::<i>abstract factory</i>}}.",
                ""
            ],
            "guid": "oO?xg8a/!a",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem6::rse"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "We can prepare modules for future change by {{c1::parametrizing}} them.",
                ""
            ],
            "guid": "vG*8Z<uBg{",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem6::rse"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Sources of <b>unboundedness</b>:<br><ul><li>Unbounded {{c1::heap}}</li><li>Unbounded&nbsp;{{c1::range of array indices}}</li><li>Unbounded {{c1::number of threads}}<br></li></ul>",
                ""
            ],
            "guid": "w~|,vKL,bq",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem6::rse"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "The <i>vanishing gradient problem</i>&nbsp;is a problem in machine learning where {{c1::during training the gradient becomes very small, which prevents our weights from changing &amp; further training}}.",
                ""
            ],
            "guid": "CbI&TbkZzP",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem6::iml"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "<ol><li>Compute all reachable&nbsp;abstract&nbsp;states</li><li>Check if abstract states are&nbsp;data-race free&nbsp;(no read-write conflicts)</li></ol>",
                "Steps to check (Abstract) Data-Race-Freedom:",
                "",
                "",
                "0,1,0 | n,n,n,n",
                "<ol><li>{{c1::Compute all reachable abstract states}}</li><li>...</li></ol>",
                "<ol><li>...</li><li>{{c2::Check if abstract states are data-race free (no read-write conflicts)}}</li></ol>",
                "<ol></ol>",
                "<ol></ol>",
                "<ol></ol>",
                "<ol></ol>",
                "<ol></ol>",
                "<ol></ol>",
                "<ol></ol>",
                "<ol></ol>",
                "<ol></ol>",
                "<ol></ol>",
                "<ol></ol>",
                "<ol></ol>",
                "<ol></ol>",
                "<ol></ol>",
                "<ol></ol>",
                "<ol></ol>",
                "<ol></ol>",
                "<ol></ol>",
                "<ol><li>{{c21::Compute all reachable abstract states}}</li><li>{{c21::Check if abstract states are data-race free (no read-write conflicts)}}</li></ol>"
            ],
            "guid": "RaBa4gSgSW",
            "note_model_uuid": "2ae7be8c-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem6::rse"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "What is the solution to using sequentially computed <span style=\"color: rgb(255, 0, 0);\">abstract states</span> for parallel programs?",
                "Cartesian States<br><img src=\"paste-cad6b8d912e75035083cfb918d2b29243fe29927.jpg\">"
            ],
            "guid": "d7U:_O,.eB",
            "note_model_uuid": "2ae32340-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem6::rse"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "ALoc stands for&nbsp;{{c1::abstract location}}",
                ""
            ],
            "guid": "m.:^HgFKSQ",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem6::rse"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "<span style=\"color: rgb(255, 0, 0);\">When may&nbsp;</span>\\(\\text{ALoc}(st_1):=(a,i)\\)&nbsp;<span style=\"color: rgb(255, 0, 0);\">equal&nbsp;</span>\\(\\text{ALoc}(st_2):=(b,k)\\)&nbsp;in abstract state&nbsp;\\(A\\)?",
                "<img src=\"paste-ddebe004fd2c01d31c3108f88e8938759841bce0.jpg\">"
            ],
            "guid": "q%86.s`V=W",
            "note_model_uuid": "2ae32340-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem6::rse"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Widening (\\(\\triangledown\\)) operator jumps&nbsp;{{c1::upwards (above least fixedpoint)}}",
                ""
            ],
            "guid": "m$D[=6VH^2",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem6::rse"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Widening (\\(\\triangledown\\)) ensures&nbsp;{{c1::termination}}",
                ""
            ],
            "guid": "q?g$1kQ@qF",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem6::rse"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Widening (\\(\\triangledown\\)) operator&nbsp;{{c1::costs/reduces}} precision",
                ""
            ],
            "guid": "b#.C0Pz!tW",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem6::rse"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Narrowing (\\(\\triangle\\)) operator jumps&nbsp;{{c1::downwards (but stays above least fixedpoint)}}",
                ""
            ],
            "guid": "fAL#ZC-rWK",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem6::rse"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Narrowing (\\(\\triangle\\)) operator&nbsp;{{c1::improves}} precision",
                ""
            ],
            "guid": "K^Ao728gF~",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem6::rse"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "{{c2::Forwards}} analysis overapproximates {{c1::output}} state from {{c1::input}} state",
                ""
            ],
            "guid": "Eu%leaUU!u",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem6::rse"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "{{c2::Backwards}} analysis overapproximates {{c1::input}} state from {{c1::output}} state",
                ""
            ],
            "guid": "C!KCSMuXQN",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem6::rse"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "{{c1::Forwards}} analysis computes {{c2::postcondition <b>from</b> given precondition}}",
                ""
            ],
            "guid": "h8}A$xdmmb",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem6::rse"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "{{c1::Backwards}} analysis computes {{c2::precondition <span style=\"color: rgb(255, 0, 0);\">avoiding</span> given postcondition}}",
                ""
            ],
            "guid": "#Iv3!tdQn",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem6::rse"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "<span style=\"color: rgb(0, 0, 0);\">How do we combine facts in m</span><span style=\"color: rgb(0, 170, 0);\">ay-analysis</span> vs <span style=\"color: rgb(0, 170, 255);\">must-analysis?</span><br><ul><li>May:&nbsp;{{c1::overapprox. via join}}</li><li>Must:&nbsp;{{c1::underapprox. via meet}}</li></ul>",
                "<img src=\"paste-8d4dfc8b0c60ef1b6d3de1425ecc33fe18cf8c53.jpg\">"
            ],
            "guid": "g!=g4+ya1B",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem6::rse"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "What are the main limitations of SMT solvers?<br><ul><li>{{c1::Many theories aren't decidable (e.g. non-linear integers)}}<br></li><li>{{c1::Constraint solving may take too long}}<br></li></ul>",
                ""
            ],
            "guid": "l&n,&Ex1tA",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem6::rse"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "{{c2::<span style=\"color: rgb(255, 0, 0);\">Concolic execution</span>}} combines {{c1::<span style=\"color: rgb(255, 0, 0);\">conc</span>rete}} and {{c1::symb<span style=\"color: rgb(255, 0, 0);\">olic</span>}} execution",
                ""
            ],
            "guid": "G[k^:-*-Z|",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem6::rse"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "The high-level idea in the concolic execution is that the {{c1::concrete execution drives the symbolic one}}",
                "<img src=\"paste-711b5f5b921db7220d3afec3e49602b616bd0c1f.jpg\">"
            ],
            "guid": "ua$dS|W73K",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem6::rse"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Concolic execution uses a solver to {{c1::query legal values to go down the other branch}}",
                "<img src=\"paste-e26dba5ae8ded8dd8da77576353a3a48dd2faecb.jpg\"><br><img src=\"paste-a88a665c2e146d2fc3cf947cb5bd19723908a713.jpg\"><img src=\"paste-f8f300330e7541209ad27ddf66c73d9fa72f123b.jpg\"><br>And then all the paths have been explored"
            ],
            "guid": "u#~UN@e{Hf",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem6::rse"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "<img src=\"paste-065043d9f5230de73636ad302c55dae66ac6f002.jpg\">",
                "<img src=\"paste-5d2a037da08c0fff583447aaaa78522dedc48908.jpg\">"
            ],
            "guid": "n;GV2+y?RO",
            "note_model_uuid": "2ae32340-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem6::rse"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Symbolically executing native code is difficult/impossible because {{c1::sources may not be available}} or&nbsp;{{c1::written in an unsupported language}}",
                ""
            ],
            "guid": "O!2Kcye;pc",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem6::rse"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "The <b>softmax</b>&nbsp;function is often used in the {{c2::final}} layer of a {{c1::neural network-based classifier}}.",
                ""
            ],
            "guid": "Gtf}}jL&I;",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem6::iml"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "A&nbsp;<b>gradient descent</b>&nbsp;iteration updates&nbsp;\\(w^{next}\\)&nbsp;to be {{c1::\\(w^{now} -\\eta\\cdot\\nabla L(w^{now})\\).}}",
                ""
            ],
            "guid": "JIG(]z]OI`",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem6::iml"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "In&nbsp;<b>gradient descent</b>,&nbsp;\\(\\eta\\)&nbsp;is the {{c1::learning rate}}.",
                ""
            ],
            "guid": "KGqQ``lr&]",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem6::iml"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "The closed form solution of <b>d-dim linear regression</b>&nbsp;for&nbsp;\\(w_{min}\\)&nbsp;is&nbsp;{{c1::\\((X^TX)^{-1}X^Ty\\).}}",
                ""
            ],
            "guid": "HLknPr2Z/U",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem6::iml"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "In gradient descent,&nbsp;<b>momentum</b>&nbsp;incorporates {{c2::the gradient of the previous step}} to {{c1::remove oscillations and speed up convergence}}.",
                ""
            ],
            "guid": "O=NEFB;h6E",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem6::iml"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Minibatch SGD uses {{c2::a subset of points}}, whereas normal SGD uses {{c1::just one point}}.&nbsp;",
                ""
            ],
            "guid": "AuTV*PszQf",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem6::iml"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "In&nbsp;<b>one-vs-rest</b>, we try to learn classes by {{c1::relabeling points from all classes except one as&nbsp;\\(-1\\) and the one from that class as&nbsp;\\(1\\).}}",
                ""
            ],
            "guid": "LfcJJx/%n&",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem6::iml"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "The ROC curve plots the {{c1::TPR (True Positive Rate)}} against the {{c2::FPR (False Positive Rate)}}.",
                ""
            ],
            "guid": "6+*XPUsf",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem6::iml"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "AUROC stands for {{c1::Area Under the Receiver Operating Characteristic (curve)}}.",
                ""
            ],
            "guid": "Opx|X)ie?z",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem6::iml"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Ideally, the AUROC is equal to&nbsp;{{c1::\\(1\\)}}.",
                ""
            ],
            "guid": "o/+IipWh-D",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem6::iml"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "A&nbsp;<b>pooling layer</b>&nbsp;helps by {{c1::reducing the width of the network / number of parameters}}.",
                ""
            ],
            "guid": "s3TE=|@|*j",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem6::iml"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "A&nbsp;<b>prior</b>&nbsp;(distribution) is an {{c1::assumed probability distribution before some evidence is taken into account}}.",
                ""
            ],
            "guid": "El*X&$}Qu-",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem6::iml"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "We call <b>Gaussian Naive Bayes</b> naive because it assumes that {{c1::every pair of features is conditionally independent}}.",
                ""
            ],
            "guid": "t$}W>t9!-8",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem6::iml"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Static analysis is the&nbsp;{{c1::over}}-approximation",
                ""
            ],
            "guid": "j6(.@K<>Px",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem6::rse"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Dynamic analysis is the {{c1::under}}-approximation",
                ""
            ],
            "guid": "O`8_iWH_Wz",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem6::rse"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Symbolic execution is the&nbsp;{{c1::over- &amp; under}}-approximation",
                ""
            ],
            "guid": "f`O~3D1cVu",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem6::rse"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Core idea of symbolic execution is to {{c1::compute the symbolic constraints per path, and then solve these constraints to have inputs that explore all paths}}",
                ""
            ],
            "guid": "t5uBTdj0cI",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem6::rse"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "<ul><li>maps variables to symbolic expressions</li><li>is used to evaluate program expressions to symbolic exprs.</li><li>is updated by assignment statements</li></ul>",
                "A symbolic store&nbsp;\\(\\sigma\\):",
                "<img src=\"paste-895ace1b661f4db5c33b8ca798be3c89f5e8e0de.jpg\">",
                "",
                "1,1,0 | n,n,n,n",
                "<ul><li>{{c1::maps variables to symbolic expressions}}</li><li>...</li><li>...</li></ul>",
                "<ul><li>maps variables to symbolic expressions</li><li>{{c2::is used to evaluate program expressions to symbolic exprs.}}</li><li>...</li></ul>",
                "<ul><li>...</li><li>is used to evaluate program expressions to symbolic exprs.</li><li>{{c3::is updated by assignment statements}}</li></ul>",
                "<ul></ul>",
                "<ul></ul>",
                "<ul></ul>",
                "<ul></ul>",
                "<ul></ul>",
                "<ul></ul>",
                "<ul></ul>",
                "<ul></ul>",
                "<ul></ul>",
                "<ul></ul>",
                "<ul></ul>",
                "<ul></ul>",
                "<ul></ul>",
                "<ul></ul>",
                "<ul></ul>",
                "<ul></ul>",
                "<ul></ul>",
                "<ul><li>{{c21::maps variables to symbolic expressions}}</li><li>{{c21::is used to evaluate program expressions to symbolic exprs.}}</li><li>{{c21::is updated by assignment statements}}</li></ul>"
            ],
            "guid": "cR0Bd;]B<e",
            "note_model_uuid": "2ae7be8c-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem6::rse"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Path conditions&nbsp;\\(\\pi\\)&nbsp;are the {{c1::conditions under which a path is taken}}",
                "<img src=\"paste-895ace1b661f4db5c33b8ca798be3c89f5e8e0de.jpg\">"
            ],
            "guid": "Ho^?o[b1e&",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem6::rse"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "We have a symbolic state per&nbsp;{{c1::program point}}",
                "<img src=\"paste-895ace1b661f4db5c33b8ca798be3c89f5e8e0de.jpg\">"
            ],
            "guid": "Q_$@!|w>Q|",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem6::rse"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "<ol><li>Start with an initial symbolic state</li><li>Propagate this across all statements, i.e. symbolically execute the program</li><li>Duplicate the current state at branch points: one copy per branch</li><li>When following a branch, add the corresponding condition to the state</li><li>Eventually, we’ll have a final state per path</li><li>Per final state, solve the path conditions to obtain test inputs that exercise the path<br></li></ol>",
                "Symbolic Execution Algorithm",
                "<img src=\"paste-9fcb15b1676491fded7238f27ff970ab7304de3c.jpg\">",
                "",
                "2,1,0 | n,n,n,n",
                "<ol><li>{{c1::Start with an initial symbolic state}}</li><li>...</li><li>...</li><li>...</li><li>...</li><li>...</li></ol>",
                "<ol><li>Start with an initial symbolic state</li><li>{{c2::Propagate this across all statements, i.e. symbolically execute the program}}</li><li>...</li><li>...</li><li>...</li><li>...</li></ol>",
                "<ol><li>Start with an initial symbolic state</li><li>Propagate this across all statements, i.e. symbolically execute the program</li><li>{{c3::Duplicate the current state at branch points: one copy per branch}}</li><li>...</li><li>...</li><li>...</li></ol>",
                "<ol><li>...</li><li>Propagate this across all statements, i.e. symbolically execute the program</li><li>Duplicate the current state at branch points: one copy per branch</li><li>{{c4::When following a branch, add the corresponding condition to the state}}</li><li>...</li><li>...</li></ol>",
                "<ol><li>...</li><li>...</li><li>Duplicate the current state at branch points: one copy per branch</li><li>When following a branch, add the corresponding condition to the state</li><li>{{c5::Eventually, we’ll have a final state per path}}</li><li>...</li></ol>",
                "<ol><li>...</li><li>...</li><li>...</li><li>When following a branch, add the corresponding condition to the state</li><li>Eventually, we’ll have a final state per path</li><li>{{c6::Per final state, solve the path conditions to obtain test inputs that exercise the path}}</li></ol>",
                "<ol></ol>",
                "<ol></ol>",
                "<ol></ol>",
                "<ol></ol>",
                "<ol></ol>",
                "<ol></ol>",
                "<ol></ol>",
                "<ol></ol>",
                "<ol></ol>",
                "<ol></ol>",
                "<ol></ol>",
                "<ol></ol>",
                "<ol></ol>",
                "<ol></ol>",
                "<ol><li>{{c21::Start with an initial symbolic state}}</li><li>{{c21::Propagate this across all statements, i.e. symbolically execute the program}}</li><li>{{c21::Duplicate the current state at branch points: one copy per branch}}</li><li>{{c21::When following a branch, add the corresponding condition to the state}}</li><li>{{c21::Eventually, we’ll have a final state per path}}</li><li>{{c21::Per final state, solve the path conditions to obtain test inputs that exercise the path}}</li></ol>"
            ],
            "guid": "q4!2q+a_<x",
            "note_model_uuid": "2ae7be8c-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem6::rse"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "In Alloy, facts add&nbsp;{{c1::constraints that always hold}}",
                "<img src=\"paste-e0e2442850efef9b3668af82dd522d6b00735d90.jpg\">"
            ],
            "guid": "Ae6=).x8!=",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem6::rse"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "The Alloy Analyzer is <b>decidable</b>, because&nbsp;{{c1::it searches for structures <b>up to a given size</b> making the problem become <b>finite</b>}}",
                ""
            ],
            "guid": "f*Sez^$9eb",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem6::rse"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "In linear temporal logic the&nbsp;\\(\\phi\\)&nbsp;symbol denotes&nbsp;{{c1::what holds now}}",
                ""
            ],
            "guid": "Ch}Kuqg|/N",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem6::rse"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "In linear temporal logic&nbsp;\\(X\\phi\\)&nbsp;or&nbsp;\\(\\circ\\phi\\)&nbsp;denotes&nbsp;{{c1::that&nbsp;\\(\\phi\\)&nbsp;holds in the next step}}",
                ""
            ],
            "guid": "e.eq(T@u/6",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem6::rse"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "In linear temporal logic&nbsp;\\(\\phi U \\psi\\)&nbsp;denotes&nbsp;{{c1::that&nbsp;\\(\\phi\\)&nbsp;holds until&nbsp;\\(\\psi\\)&nbsp;holds}}",
                ""
            ],
            "guid": "f_-$S0s{@[",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem6::rse"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "In linear temporal logic&nbsp;\\(F\\phi\\)&nbsp;or&nbsp;\\(\\diamond\\phi\\)&nbsp;denotes&nbsp;{{c1::that&nbsp;\\(\\phi\\)&nbsp;holds eventually}}",
                "(F = finally)"
            ],
            "guid": "NA%+S9sSi]",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem6::rse"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "In linear temporal logic&nbsp;\\(G\\phi\\)&nbsp;or&nbsp;\\(\\square\\phi\\)&nbsp;denotes&nbsp;{{c1::that&nbsp;\\(\\phi\\)&nbsp;always&nbsp;holds}}",
                "(G = globally)"
            ],
            "guid": "k{D:|@W,PW",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem6::rse"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "<img src=\"paste-411e9def31aa702646c15e88ced7211c4c369a8f.jpg\"><br>Which type of Polymorphism is shown here?",
                "Parametric Polymorphism (generic types)"
            ],
            "guid": "rx%`cbe3h?",
            "note_model_uuid": "2ae32340-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::coop"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "<img src=\"paste-ef4155eb70beff91d5a2a159e9d78246c46a1257.jpg\"><br>Which type of Polymorphism is shown here?",
                "Ad-hoc Polymorphism (method overloading)"
            ],
            "guid": "P$HSM:@ZM(",
            "note_model_uuid": "2ae32340-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::coop"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Weakly-typed languages do {{c1::classify values into types}}, but do not {{c1::enforce additional restrictions}}.",
                ""
            ],
            "guid": "N9w!CC-Z]C",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::coop"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Strongly-typed languages enforce that {{c1::all arguments to an operation have the correct types}}.&nbsp;",
                ""
            ],
            "guid": "dQh^IW/k)x",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::coop"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "A type is a {{c1::set of values sharing some properties}}.",
                ""
            ],
            "guid": "k27S$rV~n|",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::coop"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "In static type checking, we determine {{c1::at compile time}} if a program is correctly typed.",
                ""
            ],
            "guid": "qoA|R*5Az>",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::coop"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "In dynamic type checking, we determine {{c1::at run time}} if the arguments to an operation are of the expected type.",
                ""
            ],
            "guid": "bN]A1Bv?:F",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::coop"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "The type invariant for statically type-safe OOP language is \"{{c1::In every program state, the value of the variable <b>v</b> is an element of the declared type of <b>v</b>.}}\"",
                ""
            ],
            "guid": "Q]rekwf&t#",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::coop"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Gradual Typing is {{c1::optional static type checking}} for dynamically-typed languages.",
                ""
            ],
            "guid": "f>Ch=D*lsn",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::coop"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Two examples for gradual typing are {{c1::TypeScript for JavaScript and mypy for Python}}.&nbsp;",
                ""
            ],
            "guid": "HS&*pcBK}*",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::coop"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Duck typing is an informal name for {{c1::structural dynamic type systems}}.",
                ""
            ],
            "guid": "t)Da)2xZ_j",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::coop"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "A&nbsp;<b>persona&nbsp;</b>is&nbsp;{{c1::a precise description of a user as a stand-in for a real user}}.",
                ""
            ],
            "guid": "p)B-LoXd2^",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem5::hci"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "With the&nbsp;<b>analytical&nbsp;</b>method, we look at {{c1::<i>inherent attributes</i> of the design rather than seeing the design in use}}.",
                ""
            ],
            "guid": "yQ^3mS7^Bk",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem5::hci"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "With the&nbsp;<b>empirical</b>&nbsp;method, we look at {{c1::how a design (change) affects&nbsp;<i>observable usage</i>}}.",
                ""
            ],
            "guid": "c!YxySw+r)",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem5::hci"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "There are five principal components to Usability:<br><ul><li>{{c1::Learnability}}</li><li>{{c1::Efficiency}}</li><li>{{c1::Memorability}}</li><li>{{c1::Errors}}</li><li>{{c1::Satisfaction}}</li></ul>",
                ""
            ],
            "guid": "eRvt6)zVlf",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem5::hci"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "An&nbsp;<b>affordance</b>&nbsp;is an {{c1::action that the design of an object suggests to a user}}.",
                "A button&nbsp;<i>affords</i>&nbsp;pushing."
            ],
            "guid": "oIA6UabC=c",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem5::hci"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "<b>KLM</b>&nbsp;stands for {{c1::Keystroke Level Model}}.",
                ""
            ],
            "guid": "D[%5/M72xV",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem5::hci"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "In HCI,<b>&nbsp;priming&nbsp;</b>means that {{c1::we ask questions that already imply a certain answer}}.",
                ""
            ],
            "guid": "rYI)(<NN92",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem5::hci"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "The&nbsp;<b>Karatsuba</b>&nbsp;algorithm provides an asymptotically faster way to {{c1::multiply numbers}}.",
                ""
            ],
            "guid": "t]QH{.^=tP",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem1::and"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "<b>Kadane's</b>&nbsp;<b>algorithm</b>&nbsp;solves the {{c1::Maximum Subarray Sum (MSS)}} problem in {{c2::linear (\\(\\mathcal{O}(n)\\))}} time.",
                "This is the optimal solution for MSS."
            ],
            "guid": "ge[wn7-Qb.",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem1::and"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "<b>Insertion Sort</b>&nbsp;is used in practice for {{c1::sorting small arrays}}.",
                "Example: In gcc, for (sub)arrays with length&nbsp;\\(\\le 16\\), insertion sort is used, because it is faster."
            ],
            "guid": "ph8S[}`Eh]",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem1::and"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "In every iteration of&nbsp;<b>insertion sort</b>, we {{c1::take the first element from the unsorted input and place it correctly in the sorted output}}.",
                ""
            ],
            "guid": "oOY},#*:q]",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem1::and"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "In graph theory, a {{c2::circuit or tour (<i>kantendisjunkter Zyklus</i>)}} is a {{c1::closed walk without repeated edges}}.",
                ""
            ],
            "guid": "y$P^lc2?l?",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem1::and"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "In graph theory, an {{c2::Eulerian circuit (misleadingly also called Eulerian cycle)}} is an {{c1::Eulerian trail that ends at the start vertex}}.",
                ""
            ],
            "guid": "C1$vvwFoR0",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem1::and"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Subtypes may {{c1::add, but not remove}} methods and fields.",
                ""
            ],
            "guid": "w~N~H+#Z!d",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::coop"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "An overriding method must {{c1::not be less accessible::accessibility}} than the method it overrides.",
                ""
            ],
            "guid": "N5Trjz5oUD",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::coop"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "An overriding method must {{c1::not require more specific}} parameter types than the method it overrides.",
                "i.e. parameters are contravariant. In Java, parameters are invariant"
            ],
            "guid": "J+A{d($|yq",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::coop"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "An overriding method must {{c1::not have a more general}} result type than the method it overrides.",
                "i.e. results are covariant"
            ],
            "guid": "m(:M)ZozO4",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::coop"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Subtypes must not {{c1::change the types}} of fields.",
                "(since fields are bound statically)"
            ],
            "guid": "KSS+ZWiNYb",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::coop"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "The disadvantage of arrays being covariant in Java and C# is that {{c1::each array write requires a run-time type check}}.",
                ""
            ],
            "guid": "u6E,dcMHRH",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::coop"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "An <b>object structure</b>&nbsp;is a {{c1::set of objects that are connected via references}}.",
                ""
            ],
            "guid": "I`&-FSq:c/",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::coop"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "For a class&nbsp;<code>A extends B with C1 ... with Cn</code>, the linearization&nbsp;\\(L(C)\\)&nbsp;is&nbsp;{{c1::\\(A, L(C_n) \\bullet \\ldots\\bullet L(C_1) \\bullet L(B)\\)}}.",
                ""
            ],
            "guid": "G/RPzH|w:=",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::coop"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "In Java bytecode, the register at index 0 contains the type of {{c1::the&nbsp;<code>this</code> object}}.",
                ""
            ],
            "guid": "I^0*7i+GrW",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::coop"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "In bytecode&nbsp;<b>type checking</b>, type information is required at {{c1::the beginning of all basic blocks}}.",
                ""
            ],
            "guid": "Cy>*$Krfl+",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::coop"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "In bytecode&nbsp;<b>type checking</b>, every instruction is considered {{c1::at most once (never if error before)::amount}}.",
                ""
            ],
            "guid": "QJWQsk,2-K",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::coop"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "When using the bytecode&nbsp;<b>type inference</b>&nbsp;algorithm, all interfaces are {{c1::treated as Object}} because the {{c2::smallest common supertype (SCS) may not be well-defined}}.",
                ""
            ],
            "guid": "o(:,f~oWZn",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::coop"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "In C#, when a variable is declared with the&nbsp;<code>dynamic</code> keyword, {{c1::no static type checking is performed (all at runtime)::what type checking happens?}}.",
                ""
            ],
            "guid": "In*!a#,t!(",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::coop"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "In Scala, if a generic type is annotated with +, it is made&nbsp;{{c1::covariant}}.",
                ""
            ],
            "guid": "MB/8CKp7Y;",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::coop"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "The covariance annotation for generics is useful (and usable) when the type variable only occurs as {{c1::a result type or a type of an immutable field}}.",
                ""
            ],
            "guid": "g@v&8C;`.",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::coop"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "The contravariance annotation for generics is useful (and usable) if the type variable only occurs in {{c1::a parameter type}}.",
                ""
            ],
            "guid": "B=m{`3PndC",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::coop"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "A user-centered approach is characterized by<br><ul><li>{{c1::early focus on users and tasks}}</li><li>{{c2::empirical measurement}}</li><li>{{c3::iterative design}}</li></ul>",
                ""
            ],
            "guid": "tV.(UrY.k6",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem5::hci"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Formative methods help us understand {{c1::the problem and our users to inform our design}}",
                ""
            ],
            "guid": "NM@~>;8ytR",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem5::hci"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Evaluative methods help us understand {{c1::how well our design works}}",
                ""
            ],
            "guid": "tG6p#xCT>(",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem5::hci"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Five important needfinding methods are<br><ul><li>{{c1::Interview}}</li><li>{{c2::Diary Study}}</li><li>{{c3::Retrospective Survey}}</li><li>{{c4::Artifact Analysis}}</li><li>{{c5::Contextual Inquiry}}</li></ul>",
                ""
            ],
            "guid": "d0-YsU245N",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem5::hci"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "The Design Thinking Process has five steps:<br><ol><li>{{c1::Empathize}}</li><li>{{c2::Define}}</li><li>{{c3::Ideate}}</li><li>{{c4::Prototype}}</li><li>{{c5::Test}}</li></ol>",
                ""
            ],
            "guid": "P8Q,|1V+fv",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem5::hci"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "In a diary study, we ask users to {{c1::record events when they happen}}.",
                ""
            ],
            "guid": "IP.n2]!_$h",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem5::hci"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Diary studies are useful for cases where<br><ul><li>{{c1::events are rare}}</li><li>{{c2::events are easily forgotten}}</li><li>{{c3::the frequency of the event is important}}</li></ul>",
                ""
            ],
            "guid": "FV6eW:bdqM",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem5::hci"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "The disadvantage of diary studies is that {{c1::people change their behavior when they track themselves}}.",
                ""
            ],
            "guid": "yY5UgiQ#w]",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem5::hci"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "In a Retrospective Survey, we ask a user about {{c1::an event that happened in the past}}.",
                ""
            ],
            "guid": "nf}Wo=@RHw",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem5::hci"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Retrospective Surveys are a good fit for<br><ul><li>{{c1::rare but important events}}</li><li>{{c2::recent events}}</li><li>{{c3::memorable events}}</li></ul>",
                ""
            ],
            "guid": "j*|JA3u)h/",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem5::hci"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Retrospective Surveys don't work well for {{c1::non-memorable events}}.",
                ""
            ],
            "guid": "LvK9-y>-5=",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem5::hci"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "In Artifact Analysis, we look at {{c1::artifacts users have created, e.g. documents or posts}}.",
                ""
            ],
            "guid": "u*@6LRbw,^",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem5::hci"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "The disavantages of Artifact Analysis are that {{c1::it requires artifacts to be produced and it can be time-consuming}}.",
                ""
            ],
            "guid": "nW~hHFh&Yy",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem5::hci"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "In Contextual Enquiry, we {{c1::combine elements of the other needfinding methods and use them in the task environment::do what?}}.",
                ""
            ],
            "guid": "H^}G}bJ&;~",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem5::hci"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Contextual Enquiry looks at what users {{c1::do}}.",
                ""
            ],
            "guid": "nP8r5QdpVL",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem5::hci"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Contextual Enquiry is more {{c1::objective}} than other methods of needfinding.",
                ""
            ],
            "guid": "N=]u2D!UUJ",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem5::hci"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "A <i>vertical</i> prototype implements {{c1::the critical path of one or few features}}.",
                ""
            ],
            "guid": "4t-/~s97V",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem5::hci"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "A&nbsp;<i>horizontal</i>&nbsp;prototype implements {{c1::an overview with little to no functionality}}.",
                ""
            ],
            "guid": "w(kplMgX{j",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem5::hci"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Examples of&nbsp;<i>analytical</i>&nbsp;methods are&nbsp;<br><ul><li>{{c1::usability/UX inspection methods}}</li><li>{{c2::design walkthroughs}}</li><li>{{c3::heuristic evaluations}}</li></ul>",
                ""
            ],
            "guid": "LuHw-N/N_`",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem5::hci"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Examples of&nbsp;<i>empirical&nbsp;</i>methods are<br><ul><li>{{c1::Usability/UX tests}}</li><li>{{c2::Controlled experiments}}</li><li>{{c3::Case studies}}</li></ul>",
                ""
            ],
            "guid": "AZWr-$:RLV",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem5::hci"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "In formative evaluation, mainly {{c1::qualitative}} data is collected.",
                "(some quantitative data, e.g. user opinion in questionnaire)"
            ],
            "guid": "eyX`rp]!,e",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem5::hci"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Formative evaluation focuses mostly on what parts of the design are {{c1::not working}}.",
                ""
            ],
            "guid": "Iwad`YOz`e",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem5::hci"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Summative evaluations focus on what parts of the design are {{c1::working}}.",
                ""
            ],
            "guid": "g4z!niMGhq",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem5::hci"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Usability is a part of {{c1::User Experience}}.",
                ""
            ],
            "guid": "spg;#t1L?P",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem5::hci"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Analytical investigation is performed by {{c1::usability and domain experts}}.",
                ""
            ],
            "guid": "Mw])?~UZqk",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem5::hci"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "The difference between UI inspections and cognitive walkthroughs is that in UI inspections we focus on {{c1::one aspect / element of a design}}.",
                ""
            ],
            "guid": "oVip<cE1~T",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem5::hci"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "The advantages of heuristic evaluations are that they are {{c1::cheap, fast and easy to use (even for inexperienced practitioners)}}.",
                ""
            ],
            "guid": "D0YL#zb-~1",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem5::hci"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "The limitations of heuristic evaluation are that {{c1::it does not take a comprehensive view and experts might be held back by heuristics}}.",
                ""
            ],
            "guid": "r*L.yJ^mpE",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem5::hci"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "GOMS (model) stands for {{c1::Goals, Operators, Methods, Selection rules}}.",
                ""
            ],
            "guid": "F)|.1V/~W4",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem5::hci"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "The <i>Operators</i>&nbsp;in the GOMS model are {{c1::the cognitive processes and physical actions needed to reach the goals}}.",
                "e.g. click the mouse, press key"
            ],
            "guid": "j*YTWrNB(|",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem5::hci"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "The three primary usability metrics are {{c1::effectiveness, efficiency and satisfaction}}.",
                ""
            ],
            "guid": "wgXC?lw7Tz",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem5::hci"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "A Latin Square helps us {{c1::reduce the number of experimental orderings}}.",
                ""
            ],
            "guid": "lE.o:mdC@o",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem5::hci"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "A p-value of 0.05 means that {{c1::assuming&nbsp;\\(H_0\\)&nbsp;is true, there is a 5% chance to obtain <i>at least as extreme</i> results we have obtained}}.",
                ""
            ],
            "guid": "nw?_ME_zR$",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem5::hci"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "The&nbsp;<b>Type I error</b>&nbsp;is {{c1::the rejection of a true null hypothesis (false positive)}}.",
                "defined by the&nbsp;\\(\\alpha\\)-level"
            ],
            "guid": "t*oH6u3Od-",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem5::hci"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "The&nbsp;<b>Type II error</b>&nbsp;is {{c1::the failure to reject a false null hypothesis (false negative)}}.",
                "defined by the&nbsp;\\(\\beta\\)-level"
            ],
            "guid": "zh_<|aPh*x",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem5::hci"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "In an experiment, having <b>independent samples</b> means that {{c1::one subject was exposed to one condition (between-subject design)}}.",
                ""
            ],
            "guid": "i@R69TzRYW",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem5::hci"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "In an experiment, having&nbsp;<b>dependent samples</b>&nbsp;means that {{c1::one subject was exposed to all conditions (within-subject design)}}.",
                ""
            ],
            "guid": "z61M?O9iE]",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem5::hci"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Non-parametric tests do&nbsp;{{c1::not assume a specific distribution, only equal spread of group samples::assume what?}}.",
                ""
            ],
            "guid": "oU&lTjH`>/",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem5::hci"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "The disadvantage of non-parametric tests compared to parametric tests is that {{c1::they have less statistical power (higher chance of Type II errors)}}.",
                ""
            ],
            "guid": "FoLCouVmUE",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem5::hci"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "An example of a non-parametric test for two dependent measures is the {{c1::Wilcoxon signed-rank test}}.",
                ""
            ],
            "guid": "dO%dGRk{KV",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem5::hci"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "An example of a non-parametric test for categorical data is the {{c1::Chi-Square test}}.",
                ""
            ],
            "guid": "y0TuA;lqAq",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem5::hci"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Parametric tests assume&nbsp;{{c1::Gaussian distribution and homoscedasticity (similar variances in groups)}}.",
                ""
            ],
            "guid": "fWn&91YR+>",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem5::hci"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "An example of a parametric test for one or two measures is the&nbsp;{{c1::t-test}}.",
                ""
            ],
            "guid": "IKXtTv;/GF",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem5::hci"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "An example for a parametric test for multiple measures is the {{c1::ANOVA analysis}}.",
                ""
            ],
            "guid": "Rf5V[>NMZb",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem5::hci"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "To test if data is normally distributed, we can use the {{c1::Shapiro-Wilk test}}.",
                ""
            ],
            "guid": "CTkIJ<[Jc7",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem5::hci"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "To test for homoscedasticity (similar variances), we can use the {{c1::Levene's test}}.",
                ""
            ],
            "guid": "c]Yq;*f5{6",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem5::hci"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "The Model Human Processor consists of three processors: {{c1::Perceptual, Cognitive and Motor}}.",
                ""
            ],
            "guid": "pAE~9I!HHV",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem5::hci"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Bloch's law states that for&nbsp;\\(t &lt; 100 \\text{ms}\\), {{c1::the response&nbsp;\\(R = I \\cdot t\\)&nbsp;to a visual stimulus is constant}}.",
                ""
            ],
            "guid": "D7>pnmpBtB",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem5::hci"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Fitt's law says that movement time equals&nbsp;{{c1::\\(a + b * \\log_2(\\frac{2D}{W})\\), where&nbsp;\\(a,b\\)&nbsp;are device-/environment-specific constants,&nbsp;\\(D\\)&nbsp;is the distance and&nbsp;\\(W\\)&nbsp;is the target width}}.",
                ""
            ],
            "guid": "l_djlEn|nc",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem5::hci"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "The index of performance&nbsp;\\(\\text{IP}\\)&nbsp;is defined as&nbsp;{{c1::\\(\\frac{\\text{ID} }{\\text{MT} }\\), where&nbsp;\\(\\text{ID} = \\log_2\\frac{2D}{W}\\)&nbsp;is the index of difficulty and&nbsp;\\(\\text{MT}\\)&nbsp;is movement time}}.",
                ""
            ],
            "guid": "n#$&40a9s6",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem5::hci"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "The four key&nbsp;<b>Gestalt principles</b>&nbsp;are<br><ul><li>{{c1::Emergence (brain derives meaning from chaos)}}</li><li>{{c2::Multistability (brain sees multiple interpretations)}}</li><li>{{c3::Reification (brain fills in the gaps)}}</li><li>{{c4::Invariance (brain is not confused by variations)}}</li></ul>",
                ""
            ],
            "guid": "E;D4~}W/~C",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem5::hci"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "In Gestalt principles, the law of Closure states that {{c1::humans prefer to see complete figures and will perceive incomplete figures as whole}}.",
                ""
            ],
            "guid": "p)m?rEC,]j",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem5::hci"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "<b>Feature Integration Theory&nbsp;</b>is a theory of {{c1::attention}}.",
                ""
            ],
            "guid": "G`7T#i6ORp",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem5::hci"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "<b>Feature Integration Theory</b>&nbsp;proposes two stages for processing stimuli: {{c1::the preattentive stage and the focused attention stage}}.",
                ""
            ],
            "guid": "Dp@!;uQQhZ",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem5::hci"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "In the first, preattentive stage of <b>Feature Integration Theory</b>,&nbsp;{{c1::we automatically create feature maps (color, orientation, intensity) of stimuli::what happens?}}.",
                ""
            ],
            "guid": "u*qi@?u_PZ",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem5::hci"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "In the second, focused attention stage of <b>Feature Integration Theory</b>,&nbsp;{{c1::we combine the feature maps to objects, which requires attention::what happens?}}.",
                ""
            ],
            "guid": "vEcSOES%pF",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem5::hci"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "<b>Perceptual Load Theory</b>&nbsp;suggests a potential resolution to the {{c1::early/late selection debate}}.",
                ""
            ],
            "guid": "K*4_F>#Xwr",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem5::hci"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "These eight factors determine input device effectiveness:<br><ul><li>{{c1::Pointing speed}}</li><li>{{c2::Pointing precision}}</li><li>{{c3::Errors}}</li><li>{{c4::Time to learn}}</li><li>{{c5::Time to grasp}}</li><li>{{c6::User preference}}</li><li>{{c7::Desk footprint}}</li><li>{{c8::Cost}}</li></ul>",
                ""
            ],
            "guid": "wEuziC:h+<",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem5::hci"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "An input device can be represented as a six-tuple:&nbsp;\\((M, \\text{In}, S, R, \\text{Out}, W)\\):<br><ul><li>{{c2::\\(M\\)&nbsp;- Manipulation operator}}<br></li><li>{{c3::\\(\\text{In}\\)&nbsp;- Input domain}}<br></li><li>{{c4::\\(S\\)&nbsp;- Current state of device}}<br></li><li>{{c5::\\(R\\)&nbsp;- (Resolution) mapping from input to output domain}}<br></li><li>{{c6::\\(\\text{Out}\\)&nbsp;- Output domain}}<br></li><li>\\(W\\)&nbsp;- Additional aspects (not relevant)<br></li></ul>",
                ""
            ],
            "guid": "kP@v;,!3xI",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem5::hci"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "An&nbsp;<i>isotonic<b>&nbsp;</b></i>input device is {{c1::movable (e.g. mouse)}}.",
                "a trackpad is also isotonic because the finger is input device"
            ],
            "guid": "OSzLz5)Tz?",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem5::hci"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "An&nbsp;<i>elastic</i>&nbsp;input device is {{c1::movable, but goes back to a neutral position (e.g. joystick)}}.",
                ""
            ],
            "guid": "f@IllUh/ag",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem5::hci"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "An&nbsp;<i>isometric</i>&nbsp;input device is {{c1::immovable (e.g. Thinkpad nipple)}}.",
                ""
            ],
            "guid": "DqV):^lP!T",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem5::hci"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "For touch devices, we can significantly increase touch accuracy if we {{c1::know the user and the position of the device (3DOF)}}.",
                ""
            ],
            "guid": "b/4rY,F1mE",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem5::hci"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "The idea of&nbsp;<b>beam pruning</b>&nbsp;is to {{c1::select the&nbsp;\\(n\\)&nbsp;most likely tokens and restrict the search space to tokens with these prefixes}}.",
                "\\(n\\)&nbsp;is called&nbsp;<i>beam size</i>"
            ],
            "guid": "DUa!UIxPD|",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem5::hci"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "A&nbsp;<b>bigram</b>&nbsp;is {{c1::a sequence of two tokens, usually characters}}.",
                ""
            ],
            "guid": "enz3Pq!}M^",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem5::hci"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Haptics is the {{c1::study of touch, force and tactile feedback in HCI}}.",
                ""
            ],
            "guid": "dh>y=vZ[L.",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem5::hci"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Haptics can be divided into two categories: {{c1::Tactile}} and {{c2::Kinesthetic}}.",
                ""
            ],
            "guid": "Oav1WF`3OL",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem5::hci"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "The limitations of vibrotactile limitations are:<br><ul><li>{{c1::broad localization of the sensation}}</li><li>{{c2::superficial feedback}}</li><li>{{c3::the perception of the strength of vibration can vary}}</li></ul>",
                ""
            ],
            "guid": "QozxmR7h4!",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem5::hci"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Tactile feedback is about {{c2::vibrations / textures}} while kinesthetic feedback is about {{c1::forces/proprioception}}.",
                ""
            ],
            "guid": "b|9{KXRUt]",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem5::hci"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Current limitation 1 of Haptics: {{c1::Kinesthetic haptic feedback}} is not common in user electronics.",
                ""
            ],
            "guid": "dsz^!p]L!:",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem5::hci"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Current limitation 2 in haptics: the {{c1::human state}} is not taken into account.",
                ""
            ],
            "guid": "r`X_3*)w4}",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem5::hci"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Current limitation 3 in haptics: current systems only react to {{c1::system states}}.",
                ""
            ],
            "guid": "FQDR2Y,;IP",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem5::hci"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Current limitation 4 in haptics: we are limited to {{c1::vibrotactile feedback}}.",
                ""
            ],
            "guid": "w<h}E4f_RI",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem5::hci"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "To overcome the current limitations of haptics, we need to enable sensing of {{c1::human state}}, and use that to {{c2::control the device intelligently}}.",
                ""
            ],
            "guid": "xqTC8KK&{c",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem5::hci"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Computational Rationality is {{c1::the study of computational principles of intelligence in living and artificial beings}}.",
                ""
            ],
            "guid": "teN)oy<~Qv",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem5::hci"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "One reason that we want user models is that they {{c2::test if we understand interaction}}, which helps us {{c1::create and validate new HCI theories}}.",
                ""
            ],
            "guid": "K&PgR+_vM>",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem5::hci"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "The Model Human Processor does not:<br><ul><li>{{c4::learn}}</li><li>{{c3::adapt}}</li><li>{{c2::generalize}}</li><li>{{c1::model tradeoffs}}</li></ul>",
                ""
            ],
            "guid": "m[n)[PiV4n",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem5::hci"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Computational Rationality consists of two things: {{c1::Finding an optimal policy}} and {{c2::bound it to something human-like (Bounded Rationality)}}.",
                ""
            ],
            "guid": "f>i9Gm1zZ|",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem5::hci"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "In reinforcement learning, when the agent takes an action&nbsp;\\(A_t\\), then the environment responds with {{c1::a state&nbsp;\\(S_{t+1}\\)and a reward&nbsp;\\(R_{t+1}\\)}}.",
                ""
            ],
            "guid": "g:96Lv{M=0",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem5::hci"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Reinforcement learning is different from other ML paradigms because<br><ul><li>{{c1::There is no supervisor, only a reward signal}}</li><li>{{c2::Feedback is delayed}}</li><li>{{c3::Time matters (sequential, non-i.i.d. data)}}</li><li>{{c4::Actions affect subsequent data that is received}}</li></ul>",
                ""
            ],
            "guid": "OE7obUH:s>",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem5::hci"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "The Markov Decision Process is a five-tuple&nbsp;\\((S,A,T,R,\\gamma)\\):<br><ul><li>{{c1::\\(S\\): finite set of states (e.g. letters typed so far)}}<br></li><li>{{c2::\\(A\\): finite set of actions (e.g. what letter do I type next)}}<br></li><li>{{c3::\\(T\\): transition matrix containing&nbsp;\\(p(s',a,s)\\)&nbsp;- given a state and action, what is the probability of the next state&nbsp;\\(s'\\)}}<br></li><li>{{c4::\\(R(s',a,s)\\): reward of taking the action&nbsp;\\(a\\)&nbsp;in the state&nbsp;\\(s\\)}}<br></li><li>{{c5::\\(y \\in[0,1)\\): discount factor}}<br></li></ul>",
                ""
            ],
            "guid": "PtE1C!p%5r",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem5::hci"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Markov Decision Process: A policy is {{c1::a mapping from state to action to maximize an expected cumulative reward}}.",
                ""
            ],
            "guid": "nFbxH2&,mU",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem5::hci"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "A cognitive walkthrough is a {{c1::design walkthrough with a focus on ease-of-learning}}.",
                ""
            ],
            "guid": "IuP?IU</m0",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem5::hci"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "<b>Nielsen Heuristics - 1</b>:&nbsp;{{c1::Visibility of System Status - keep users informed about what is going on.}}&nbsp;<br><img src=\"heuristic-example-1-rbg-73.png\">",
                ""
            ],
            "guid": "g5oIAsBzbl",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem5::hci"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "<b>Nielsen Heuristics - 2:</b>&nbsp;{{c1::Match between system and the real world - Use familiar words and concepts, follow real-world conventions.}}<br><img src=\"heuristic-example-74.png\">",
                ""
            ],
            "guid": "gNgv+Ax`o5",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem5::hci"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "<b>Nielsen Heuristics - 3:&nbsp;</b>{{c1::User control and freedom - provide option to leave undesirable state (e.g. undo, cancel, return to home)}}.<br><img src=\"paste-a1a71b055b490cb8010dcb22d4f3df6add579e4c.jpg\">",
                ""
            ],
            "guid": "M}]w`j^h=0",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem5::hci"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "<b>Nielsen Heuristics - 4:</b>&nbsp;{{c1::Consistency and Standards - follow platform conventions, be consistent with words and concepts}}.<br><img src=\"paste-4d67941934ceb67f56fed41b8ebce86a75177654.jpg\">",
                ""
            ],
            "guid": "A@$aB98=0e",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem5::hci"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "<b>Nielsen Heuristics - 5:</b>&nbsp;{{c1::Error Prevention - Eliminate error-prone conditions, warn users with e.g. confirmation dialogs}}.<br><img src=\"paste-4929fb767cde9eb10f341d82c26eadffa96dc234.jpg\">",
                ""
            ],
            "guid": "L[~m@$D<oB",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem5::hci"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "<b>Nielsen Heuristics - 6:</b>&nbsp;{{c1::Recognition rather than recall - Make objects, actions, options visible. User should not have to remember information across dialogues}}.<br><img src=\"paste-ee982b2008ed1c22af2e8d2253ab50234f562d50.jpg\">",
                ""
            ],
            "guid": "y4hs}t*0JD",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem5::hci"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "<b>Nielsen Heuristics - 7:&nbsp;</b>{{c1::Flexibility and efficiency of use - Offer accelerators (e.g. shortcuts) for experts, allow customizing frequent actions}}.<br><img src=\"paste-b06f97cb8fbf51fafc628585ff803682a1775ddc.jpg\">",
                ""
            ],
            "guid": "Jv|RCa*R=f",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem5::hci"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "<b>Nielsen Heuristics - 8:</b>&nbsp;{{c1::Aesthetic and minimalist design - do not show irrelevant or rarely needed information}}.<br><img src=\"paste-eafadaee8bc65baaa22ba4de9c18bfa1edfd0848.jpg\">",
                ""
            ],
            "guid": "mn_0atb&oy",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem5::hci"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "<b>Nielsen Heuristics - 9:&nbsp;</b>{{c1::Help users recognize, diagnose and recover from errors - error messages should be in plain language, indicate the problem and suggest a solution}}.<br><img src=\"paste-5d75a92e45bc74d5752235efab88e31ac3660367.jpg\">",
                ""
            ],
            "guid": "wa|D5,M7)D",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem5::hci"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "<b>Nielsen Heuristics - 10:</b>&nbsp;{{c1::Help and documentation - best is no documentation, but if necessary it should be easy to search, focused on the task and list concrete steps to do}}.<br><img src=\"paste-e3818928a9aacb71ec3c2bf2726ca98b495c7969.jpg\">",
                ""
            ],
            "guid": "v?klK`M4z?",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem5::hci"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "In the GOMS model we focus on {{c2::the steps / processes involved when users do a task}}, whereas in KLM we want to {{c1::provide actual time predictions of how long doing the task will take}}.",
                ""
            ],
            "guid": "l|kmc`{pRY",
            "note_model_uuid": "2ae318a0-7e39-11ee-bdad-3d2d00994e04",
            "tags": [
                "eth::sem5::hci"
            ]
        }
    ],
    "reviewLimit": null,
    "reviewLimitToday": null
}